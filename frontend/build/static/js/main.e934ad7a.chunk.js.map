{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","images/logoPP.png","components/header/Header.js","images/Goti.png","components/mainscreen/MainScreen.js","screens/landingPage/LandingPage.js","constants/entriesConstants.js","constants/tagsConstants.js","actions/tagActions.js","constants/emotionsConstants.js","actions/emotionAction.js","components/Loading.js","components/ErrorMessage.js","screens/diaryPage/Diario.js","actions/entryActions.js","screens/loginPage/LoginPage.js","screens/registerPage/RegisterPage.js","screens/createEntryPage/CreateEntryPage.js","screens/updateEntryPage/UpdateEntryPage.js","screens/diaryConfigPage/DiaryConfigPage.js","screens/authDiaryPage.js/AuthDiaryPage.js","components/Estadisticas/EstadisticasColumna.js","screens/Estadisticas/Estadisticas.js","screens/messagePage.js/MessageConfigDiaryPage.js","screens/messagePage.js/MessageBadStreak.js","screens/messagePage.js/Message404.js","screens/PayScreen/paidScreen.js","screens/profilePage/ProfilePage.js","screens/updateProfilePage/UpdateProfilePage.js","screens/adminPage.js/AdminPage.js","screens/userUpdateFromAdmin/UserUpdateFromAdmin.js","screens/messagePage.js/PagoExitoso.js","constants/foromessageConstants.js","actions/foromessageAction.js","constants/foromessagesaludConstants.js","actions/foromessagesaludAction.js","constants/foromessagevivenciaConstants.js","actions/foromessagevivenciaAction.js","constants/foromessagehobbieConstants.js","actions/foromessagehobbieAction.js","screens/ForoPage/ForoPage.js","screens/messagePage.js/MessagePositive.js","screens/messagePage.js/MessageSad.js","screens/messagePage.js/MessageHappy.js","screens/messagePage.js/MessageVeryHappy.js","constants/lectureConstants.js","actions/lectureActions.js","screens/lecturesPage/LecturesPage.js","screens/adminPage.js/AdminCreateLecturePage.js","screens/adminPage.js/AdminListLecturesPage.js","screens/adminPage.js/AdminEditLecturePage.js","images/instrucc_paso1.png","images/Configuracion.png","images/Foro.png","screens/we_are/SobrePsicoP.js","App.js","reportWebVitals.js","store.js","reducers/userReducers.js","reducers/entryReducers.js","reducers/tagReducers.js","reducers/emotionReducers.js","reducers/foromessageReducers.js","reducers/foromessagesaludReducers.js","reducers/foromessagevivenciaReducers.js","reducers/foromessagehobbieReducers.js","reducers/lectureReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_SECURITY_REQUEST","USER_SECURITY_SUCCESS","USER_SECURITY_FAIL","USER_NOSECURITY_REQUEST","USER_NOSECURITY_SUCCESS","USER_NOSECURITY_FAIL","USER_SETTAGS_REQUEST","USER_SETTAGS_SUCCESS","USER_SETTAGS_FAIL","USER_DIARY_REQUEST","USER_DIARY_SUCCESS","USER_DIARY_FAIL","GET_USERS_REQUEST","GET_USERS_SUCCESS","GET_USERS_FAIL","register","name","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","diarySetSecurity","user","window","location","reload","diarySetNoSecurity","diarySetPersonalStats","authDiary","booleanData","Header","history","useHistory","useDispatch","userInfo","useSelector","state","userLogin","logoutHandler","removeItem","push","useEffect","className","Navbar","bg","expand","variant","Container","fluid","Brand","href","src","LogoPP","width","height","alt","Toggle","Collapse","Nav","activeKey","isAdmin","Item","to","activeStyle","fontWeight","color","NavDropdown","title","id","Divider","onClick","diarySecurity","isPremium","MainScreen","children","style","background","Row","LandingPage","query","maxWidth","matches","Goti","Button","size","border","ENTRY_LIST_REQUEST","ENTRY_LIST_SUCCESS","ENTRY_LIST_FAIL","ENTRY_CREATE_REQUEST","ENTRY_CREATE_SUCCESS","ENTRY_CREATE_FAIL","ENTRY_UPDATE_REQUEST","ENTRY_UPDATE_SUCCESS","ENTRY_UPDATE_FAIL","STATS_REQUEST","STATS_SUCCESS","STATS_FAIL","MONTH_STATS_REQUEST","MONTH_STATS_SUCCESS","MONTH_STATS_FAIL","TAGS_STATS_REQUEST","TAGS_STATS_SUCCESS","TAGS_STATS_FAIL","TAG_LIST_REQUEST","TAG_LIST_SUCCESS","TAG_LIST_FAIL","listTags","get","EMOTION_LIST_REQUEST","EMOTION_LIST_SUCCESS","EMOTION_LIST_FAIL","listEmotions","getState","Loading","display","justifyContent","alignItems","Spinner","animation","ErrorMessage","Alert","fontSize","Diario","entryList","loading","error","entries","successCreate","entryCreate","success","successUpdate","entryUpdate","successDiary","diaryAuth","Authorization","token","marginLeft","sort","b","createdAt","map","entry","Accordion","Card","flex","cursor","alignSelf","as","Text","eventKey","emotion","moment","format","_id","Body","margin","padding","Col","tags","tag","content","reverse","LoginPage","useState","setEmail","setPassword","Form","onSubmit","e","preventDefault","login","Group","controlId","Label","Control","value","onChange","target","RegisterPage","setName","confirmpassword","setConfirmPassword","setMessage","userRegister","submitHandler","setEmotion","CreateEntryPage","setTitle","setContent","mitad","mitad2","tagList","loading2","emotionList","loading3","emotions","today","Date","isEmpty","str","length","mitads","personalTags","slice","mitads2","element","visualButtons2","forEach","document","getElementById","setAttribute","entryTags","checked","ptag","trim","alert","createEntryAction","Math","floor","random","icon","filter","group","Check","Input","isValid","class","rows","UpdateEntryPage","match","date","setDate","fetching","params","put","updateEntryAction","DiaryConfigPage","message2","setPersonalTags","setDiarySecurity","diaryPassword","setDiaryPassword","confirmdiarypassword","setConfirmDiaryPassword","updateDiaryPassword","setUpdateDiaryPassword","dataTag1","setTag1","dataTag2","setTag2","dataTag3","setTag3","dataTag4","setTag4","dataTag5","setTag5","dataTag6","setTag6","dataTag7","setTag7","dataTag8","setTag8","dataTag9","setTag9","dataTag10","setTag10","submitHandlerSecurity","submitHandlerNoSecurity","arrayTags","placeholder","autocomplete","AuthDiaryPage","tryDiaryPassword","setTryDiaryPassword","test","EstadisticasColumna","props","chartData","this","options","Component","Estadisticas","stats","datum","datumMonth","monthStats","tagStags","parse","getItem","showTop","setShowTop","jsonData","undefined","labels","datasets","label","backgroundColor","jsonData2","md","borderTop","pond2","sum2","promedio2","round","emotion2","pond","sum","promedio","MessageConfigDiaryPage","MessageBadStreak","num","consejo","Message404","PaySreen","nombre","setnombre","telefono","settelefono","foto","setFoto","setloading","uploadImage","FormData","append","fetch","method","body","res","json","file","secure_url","console","log","marginTop","marginBottom","emailjs","send","id_user","comprobante","then","result","text","reset","autoComplete","files","ProfilePage","disabled","Image","profilePicture","UpdateProfilePage","setProfilePicture","picMessage","setPicMessage","userUpdate","File","pics","url","toString","catch","err","postDetails","custom","varient","AdminPage","getAllUsers","usersInfo","UserUpdateFromAdmin","PagoExitoso","FOROMESSAGE_LIST_REQUEST","FOROMESSAGE_LIST_SUCCESS","FOROMESSAGE_LIST_FAIL","FOROMESSAGE_CREATE_REQUEST","FOROMESSAGE_CREATE_SUCCESS","FOROMESSAGE_CREATE_FAIL","createForoMessage","username","FOROMESSAGESALUD_LIST_REQUEST","FOROMESSAGESALUD_LIST_SUCCESS","FOROMESSAGESALUD_LIST_FAIL","FOROMESSAGESALUD_CREATE_REQUEST","FOROMESSAGESALUD_CREATE_SUCCESS","FOROMESSAGESALUD_CREATE_FAIL","createForoMessagesalud","FOROMESSAGEVIVENCIA_LIST_REQUEST","FOROMESSAGEVIVENCIA_LIST_SUCCESS","FOROMESSAGEVIVENCIA_LIST_FAIL","FOROMESSAGEVIVENCIA_CREATE_REQUEST","FOROMESSAGEVIVENCIA_CREATE_SUCCESS","FOROMESSAGEVIVENCIA_CREATE_FAIL","createForoMessagevivencia","FOROMESSAGEHOBBIE_LIST_REQUEST","FOROMESSAGEHOBBIE_LIST_SUCCESS","FOROMESSAGEHOBBIE_LIST_FAIL","FOROMESSAGEHOBBIE_CREATE_REQUEST","FOROMESSAGEHOBBIE_CREATE_SUCCESS","FOROMESSAGEHOBBIE_CREATE_FAIL","createForoMessagehobbie","ForoPage","locale","imgs","chatActual","setChatActual","foromessageList","loadingGeneral","errorGeneral","foromessages","foromessagesaludList","loadingSalud","errorSalud","foromessagessalud","foromessagevivenciaList","loadingVivencias","errorVivencias","foromessagesvivencias","foromessagehobbieList","loadingHobbies","errorHobbies","foromessageshobbies","option","setOption","submitHandlerAnon","borderRadius","marginRight","fromNow","paddingLeft","paddingRight","InputGroup","FormControl","MessagePositive","MessageSad","MessageHappy","MessageVeryHappy","CREATE_LECTURE_REQUEST","CREATE_LECTURE_SUCCESS","CREATE_LECTURE_FAIL","LIST_PUBLICATED_LECTURES_REQUEST","LIST_PUBLICATED_LECTURES_SUCCESS","LIST_PUBLICATED_LECTURES_FAIL","LIST_NON_PUBLICATED_LECTURES_REQUEST","LIST_NON_PUBLICATED_LECTURES_SUCCESS","LIST_NON_PUBLICATED_LECTURES_FAIL","UPDATE_LECTURE_REQUEST","UPDATE_LECTURE_SUCCESS","UPDATE_LECTURE_FAIL","getPublicatedLecturesAction","LecturesPage","getPublicatedLectures","loadingPublicated","errorPublicated","publicatedLecturesInfo","publicationDate","lecture","borderBottom","paddingTop","image","AdminCreateLecturePage","setImage","setPublicationDate","createLectureAction","add","AdminListLecturesPage","getNonPublicatedLectures","loadingNonPublicated","errorNonPublicated","nonPublicatedLecturesInfo","AdminEditLecturePage","updateLectureAction","SobrePsicoP","i1","thumbnail","textAlign","i2","i3","App","path","component","exact","sobrePsicoP","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","createforomessage","createforomessagesalud","createforomessagevivencia","createforomessagehobbie","userSecurity","userNoSecurity","userSetTags","tagStats","changeUserStatus","lectureCreate","lectureUpdate","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render"],"mappings":"qXAAaA,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAElBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAiB,iB,iBCqCjBC,EAAW,SAACC,EAAMC,EAAOC,GAAd,8CAA2B,WAAOC,GAAP,mBAAAC,EAAA,sEAE/CD,EAAS,CAAEE,KAAM3B,IAEX4B,EAAS,CACbC,QAAS,CACP,eAAgB,qBAN2B,SAUxBC,IAAMC,KAC3B,aACA,CAAET,OAAMC,QAAOC,YACfI,GAb6C,gBAUvCI,EAVuC,EAUvCA,KAMRP,EAAS,CAAEE,KAAM1B,EAAuBgC,QAASD,IAEjDP,EAAS,CAAEE,KAAM9B,EAAoBoC,QAASD,IAE9CE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,IApBD,kDAsB/CP,EAAS,CACPE,KAAMzB,EACN+B,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UA3BiC,0DAA3B,uDAgCXC,EAAmB,SAACC,GAAD,8CAAU,WAAOhB,GAAP,iBAAAC,EAAA,sEAEtCD,EAAS,CAAEE,KAAMrB,IAFqB,SAIfwB,IAAMC,KAAK,8BAA+BU,GAJ3B,gBAI9BT,EAJ8B,EAI9BA,KAERP,EAAS,CAAEE,KAAMpB,EAAuB0B,QAASD,IAEjDE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,IAEhDU,OAAOC,SAASC,SAVsB,kDAYtCnB,EAAS,CACPE,KAAMnB,EACNyB,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAjBwB,0DAAV,uDAsBnBM,EAAqB,SAACJ,GAAD,8CAAU,WAAOhB,GAAP,iBAAAC,EAAA,sEAExCD,EAAS,CAAEE,KAAMlB,IAFuB,SAIjBqB,IAAMC,KAAK,gCAAiCU,GAJ3B,gBAIhCT,EAJgC,EAIhCA,KAERP,EAAS,CAAEE,KAAMjB,EAAyBuB,QAASD,IAEnDE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,IAEhDU,OAAOC,SAASC,SAVwB,kDAYxCnB,EAAS,CACPE,KAAMhB,EACNsB,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAjB0B,0DAAV,uDAsBrBO,EAAwB,SAACL,GAAD,8CAAU,WAAOhB,GAAP,iBAAAC,EAAA,sEAE3CD,EAAS,CAAEE,KAAMf,IAF0B,SAIpBkB,IAAMC,KAAK,mCAAoCU,GAJ3B,gBAInCT,EAJmC,EAInCA,KAERP,EAAS,CAAEE,KAAMd,EAAsBoB,QAASD,IAEhDE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,IAChDU,OAAOC,SAASC,SAT2B,kDAW3CnB,EAAS,CACPE,KAAMb,EACNmB,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAhB6B,0DAAV,uDAqBxBQ,EAAY,SAACC,GAAD,8CAAiB,WAAOvB,GAAP,SAAAC,EAAA,sDACxCD,EAAS,CAAEE,KAAMZ,IAEfU,GADkB,IAAhBuB,EACO,CAAErB,KAAMX,GAER,CAAEW,KAAMV,IALqB,2CAAjB,uDCrKV,MAA0B,mC,gBCgO1BgC,EAxNA,WACb,IAAMC,EAAUC,cAEV1B,EAAW2B,cAITC,EAFUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAEvCH,SAEFI,EAAgB,WACpBhC,EF6CkB,uCAAM,WAAOA,GAAP,SAAAC,EAAA,sDAC1BQ,aAAawB,WAAW,YACxBjC,EAAS,CAAEE,KAAM5B,IAFS,2CAAN,uDE5ClBmD,EAAQS,KAAK,MAKf,OAFAC,qBAAU,cAAU,CAACP,IAGnB,qBAAKQ,UAAU,MAAf,SACE,cAACC,EAAA,EAAD,CAAQC,GAAG,UAAUC,OAAO,KAAKC,QAAQ,OAAOJ,UAAU,MAA1D,SACE,eAACK,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACGd,EACC,cAACS,EAAA,EAAOM,MAAR,CAAcC,KAAK,UAAnB,SACE,qBAAKC,IAAKC,EAAQC,MAAM,KAAKC,OAAO,KAAKC,IAAI,OAG/C,cAACZ,EAAA,EAAOM,MAAR,CAAcC,KAAK,IAAnB,SACE,qBAAKC,IAAKC,EAAQC,MAAM,KAAKC,OAAO,KAAKC,IAAI,OAIjD,cAACZ,EAAA,EAAOa,OAAR,CAAe,gBAAc,qBAC7B,cAACb,EAAA,EAAOc,SAAR,CAAiBf,UAAU,sBAA3B,SACGR,EACC,cAACwB,EAAA,EAAD,CAAKZ,QAAQ,QAAQa,UAAU,IAA/B,UACwB,IAArBzB,EAAS0B,QACR,qCACE,cAACF,EAAA,EAAIG,KAAL,CAAUnB,UAAU,iBAApB,SACE,cAAC,IAAD,CACEoB,GAAG,SACHpB,UAAU,aACVqB,YAAa,CACXC,WAAY,OACZC,MAAO,WALX,wBAWF,cAACP,EAAA,EAAIG,KAAL,CAAUnB,UAAU,iBAApB,SACE,eAACwB,EAAA,EAAD,CACEC,MAAM,WACNC,GAAG,qBACH1B,UAAU,aAHZ,UAKE,cAACwB,EAAA,EAAYL,KAAb,CACEX,KAAK,yBACLR,UAAU,aAFZ,oBAMA,cAACwB,EAAA,EAAYG,QAAb,IACA,cAACH,EAAA,EAAYL,KAAb,CACEX,KAAK,uBACLR,UAAU,aAFZ,wBAQJ,cAACgB,EAAA,EAAIG,KAAL,CAAUnB,UAAU,iBAApB,SACE,cAAC,IAAD,CACEoB,GAAG,SACHpB,UAAU,aACV4B,QAAShC,EACTyB,YAAa,CACXC,WAAY,OACZC,MAAO,WANX,0BAcJ,qCACE,cAACP,EAAA,EAAIG,KAAL,CAAUnB,UAAU,iBAApB,SACE,cAAC,IAAD,CACEoB,GAAG,qBACHpB,UAAU,aACVqB,YAAa,CACXC,WAAY,OACZC,MAAO,WALX,4BAWF,cAACP,EAAA,EAAIG,KAAL,CAAUnB,UAAU,iBAApB,UAC8B,IAA3BR,EAASqC,cACR,cAAC,IAAD,CACET,GAAG,cACHpB,UAAU,aACVqB,YAAa,CACXC,WAAY,OACZC,MAAO,WALX,oBAWA,cAAC,IAAD,CACEH,GAAG,UACHpB,UAAU,aACVqB,YAAa,CACXC,WAAY,OACZC,MAAO,WALX,sBAaJ,cAACP,EAAA,EAAIG,KAAL,CAAUnB,UAAU,iBAApB,SACE,cAAC,IAAD,CACEoB,GAAG,YACHpB,UAAU,aACVqB,YAAa,CACXC,WAAY,OACZC,MAAO,WALX,wBAWF,cAACP,EAAA,EAAIG,KAAL,CAAUnB,UAAU,iBAApB,SACIR,EAASsC,UAYT,cAAC,IAAD,CACEV,GAAG,QACHpB,UAAU,aACVqB,YAAa,CACXC,WAAY,OACZC,MAAO,WALX,kBAXA,cAAC,IAAD,CACEH,GAAG,SACHpB,UAAU,aACVqB,YAAa,CACXC,WAAY,OACZC,MAAO,WALX,qBAuBJ,cAACP,EAAA,EAAIG,KAAL,UACE,eAACK,EAAA,EAAD,CACEC,MAAM,YACNC,GAAG,qBACH1B,UAAU,aAHZ,UAKE,cAACwB,EAAA,EAAYL,KAAb,CAAkBX,KAAK,UAAUR,UAAU,aAA3C,oBAGA,cAACwB,EAAA,EAAYG,QAAb,IACA,cAACH,EAAA,EAAYL,KAAb,CACES,QAAShC,EACTI,UAAU,aAFZ,wCAYV,eAACgB,EAAA,EAAD,CAAKZ,QAAQ,QAAQa,UAAU,IAA/B,UACE,cAACD,EAAA,EAAIG,KAAL,CAAUnB,UAAU,iBAApB,SACE,cAAC,IAAD,CACEoB,GAAG,SACHpB,UAAU,aACVqB,YAAa,CACXC,WAAY,OACZC,MAAO,WALX,iCAWF,cAACP,EAAA,EAAIG,KAAL,CAAUnB,UAAU,iBAApB,SACE,cAAC,IAAD,CACEoB,GAAG,YACHpB,UAAU,aACVqB,YAAa,CACXC,WAAY,OACZC,MAAO,WALX,wC,0BC5MH,I,OAAA,IAA0B,kC,OC2B1BQ,OAtBf,YAA0C,IAApBC,EAAmB,EAAnBA,SAAUP,EAAS,EAATA,MAC9B,OACE,qCACA,qBAAKQ,MAAO,CAACrB,OAAO,OAAQsB,WAAW,aACvC,qBAAKlC,UAAU,gBAAf,SACE,cAACK,EAAA,EAAD,UACE,cAAC8B,EAAA,EAAD,UACE,sBAAKnC,UAAU,OAAf,UACGyB,GACC,mCACE,oBAAIzB,UAAU,UAAd,SAAyByB,MAG5BO,eCoGEI,GA9GK,SAAC,GAAiB,IAAf/C,EAAc,EAAdA,QAEbG,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAaR,OAXAO,qBAAU,WACJP,EACFH,EAAQS,KAAK,YAEbzB,aAAawB,WAAW,YACxBxB,aAAawB,WAAW,gBACxBxB,aAAawB,WAAW,YACxBxB,aAAawB,WAAW,gBAEzB,CAACR,EAASG,IAGX,cAAC,GAAD,UACE,cAACa,EAAA,EAAD,UACE,cAAC,IAAD,CAAOgC,MAAO,CAAEC,SAAU,KAA1B,SACG,SAACC,GAAD,OACCA,EACE,qCACE,eAACJ,EAAA,EAAD,WACE,sBAAKnC,UAAU,WAAf,UACE,oBAAIA,UAAU,QAAd,qCACA,mBAAGA,UAAU,WAAb,kJAMF,qBAAKA,UAAU,WAAf,SACE,qBAAKS,IAAK+B,GAAM7B,MAAM,MAAMC,OAAO,MAAMC,IAAI,cAGjD,gCACE,qBAAKb,UAAU,kBAAf,SACE,mBAAGQ,KAAK,SAAR,SACE,cAACiC,EAAA,EAAD,CAAQC,KAAK,KAAK1C,UAAU,gBAA5B,mCAKJ,qBAAKA,UAAU,kBAAf,SACE,mBAAGQ,KAAK,YAAR,SACE,cAACiC,EAAA,EAAD,CACEC,KAAK,KACL1C,UAAU,gBACVI,QAAQ,kBAHV,wCAYR,qCACE,cAAC+B,EAAA,EAAD,UACE,sBAAKnC,UAAU,UAAf,UACE,qBAAKS,IAAK+B,GAAM7B,MAAM,MAAMC,OAAO,MAAMC,IAAI,SAC7C,qBAAKb,UAAU,aAAf,SACE,gCACE,oBAAIA,UAAU,QAAd,qCACA,oBAAIA,UAAU,WAAd,kCACA,mBAAGA,UAAU,WAAb,4KASR,8BACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGQ,KAAK,SAAR,SACE,cAACiC,EAAA,EAAD,CACEC,KAAK,KACL1C,UAAU,gBACViC,MAAO,CACLU,OAAQ,QAJZ,iCAUF,mBAAGnC,KAAK,YAAR,SACE,cAACiC,EAAA,EAAD,CACEC,KAAK,KACL1C,UAAU,gBACVI,QAAQ,kBACR6B,MAAO,CACLU,OAAQ,QALZ,qD,kDChGTC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAMpBC,GAAgB,gBAChBC,GAAgB,gBAChBC,GAAa,aAEbC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBC1BlBC,GAAmB,mBACnBC,GAAmB,mBACnBC,GAAgB,gBCKhBC,GAAW,yDAAM,WAAOrG,GAAP,iBAAAC,EAAA,sEAE1BD,EAAS,CAAEE,KAAMgG,KAFS,SAIH7F,IAAMiG,IAAI,aAJP,gBAIlB/F,EAJkB,EAIlBA,KAERP,EAAS,CAAEE,KAAMiG,GAAkB3F,QAASD,IAC5CE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,IAPtB,kDAS1BP,EAAS,CACPE,KAAMkG,GACN5F,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAdY,0DAAN,uDCPXyF,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBCKpBC,GAAe,yDAAM,WAAO1G,EAAU2G,GAAjB,iBAAA1G,EAAA,sEAE9BD,EAAS,CAAEE,KAAMqG,KAFa,SAIPlG,IAAMiG,IAAI,iBAJH,gBAItB/F,EAJsB,EAItBA,KAERP,EAAS,CAAEE,KAAMsG,GAAsBhG,QAASD,IAChDE,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUL,IAPtB,kDAS9BP,EAAS,CACPE,KAAMuG,GACNjG,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAdgB,0DAAN,yD,UCkBb8F,OAtBf,YAAkC,IAAD,IAAd9B,YAAc,MAAP,IAAO,EAC/B,OACE,qBACET,MAAO,CACLwC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZhE,MAAO,OACPC,OAAQ,QANZ,SASE,cAACgE,GAAA,EAAD,CACE3C,MAAO,CACLtB,MAAO+B,EACP9B,OAAQ8B,GAEVmC,UAAU,c,UCRHC,GARM,SAAC,GAAoC,IAAD,IAAjC1E,eAAiC,MAAvB,OAAuB,EAAf4B,EAAe,EAAfA,SACxC,OACE,cAAC+C,GAAA,EAAD,CAAO3E,QAASA,EAAS6B,MAAO,CAAE+C,SAAU,IAA5C,SACE,iCAAShD,OCwKAiD,GAjKA,SAAC,GAAiB,IAAf5F,EAAc,EAAdA,QACVzB,EAAW2B,cAEX2F,EAAYzF,aAAY,SAACC,GAAD,OAAWA,EAAMwF,aACvCC,EAA4BD,EAA5BC,QAASC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,QAGhB7F,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAGS8F,EADG7F,aAAY,SAACC,GAAD,OAAWA,EAAM6F,eACzCC,QAGSC,EADGhG,aAAY,SAACC,GAAD,OAAWA,EAAMgG,eACzCF,QAMAG,EADUlG,aAAY,SAACC,GAAD,OAAWA,EAAMkG,aACvCD,aAmCR,OAjCA5F,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,QACX7B,EAAQS,KAAK,WAEK,IAAjB6F,GAA2BA,IACD,IAA3BnG,EAASqC,eAETxC,EAAQS,KAAK,eARfT,EAAQS,KAAK,QAajBC,qBAAU,WACRnC,ECzBuB,uCAAM,WAAOA,EAAU2G,GAAjB,yBAAA1G,EAAA,sEAE7BD,EAAS,CACPE,KAAM8E,KAHqB,EAQzB2B,IADW/E,EAPc,EAO3BG,UAAaH,SAGTzB,EAAS,CACbC,QAAS,CACP6H,cAAc,UAAD,OAAYrG,EAASsG,SAZT,SAgBN7H,IAAMiG,IAAN,eAA0BnG,GAhBpB,gBAgBrBI,EAhBqB,EAgBrBA,KAERP,EAAS,CACPE,KAAM+E,GACNzE,QAASD,IApBkB,kDAuBvBO,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAMgF,GACN1E,QAASM,IA7BkB,0DAAN,2DD0BtB,CAACd,EAAUyB,EAASG,EAAU8F,EAAeG,IAEhD1F,qBAAU,WACRnC,EAASqG,QACR,CAACrG,IAEJmC,qBAAU,WACRnC,EAAS0G,QACR,CAAC1G,IASF,eAAC,GAAD,CAAY6D,MAAM,SAAlB,UACE,sBAAKzB,UAAU,qBAAf,wBAAgDR,EAAS/B,QACzD,sBAAKuC,UAAU,iBAAf,UACE,cAAC,IAAD,CAAMoB,GAAG,gBAAT,SACE,cAACqB,EAAA,EAAD,CACEC,KAAK,KACLtC,QAAQ,UACRJ,UAAU,SACViC,MAAO,CAAE8D,WAAY,QAJvB,6BASF,cAAC,IAAD,CAAM3E,GAAG,gBAAT,SACE,cAACqB,EAAA,EAAD,CAAQC,KAAK,KAAKtC,QAAQ,UAAUJ,UAAU,SAA9C,mCAIF,cAAC,IAAD,CAAMoB,GAAG,kBAAT,SACE,cAACqB,EAAA,EAAD,CAAQC,KAAK,KAAKtC,QAAQ,UAAUJ,UAAU,SAA9C,0BAKHoF,GACC,cAAC,GAAD,CAAchF,QAAQ,SAAtB,SACG,6EAGJ+E,GAAW,cAAC,GAAD,IA7Bd,OA8BGE,QA9BH,IA8BGA,OA9BH,EA8BGA,EACGW,MAAK,SAACnI,EAAGoI,GACT,OAAIpI,EAAEqI,UAAYD,EAAEC,WACV,EAENrI,EAAEqI,UAAYD,EAAEC,UACX,EAEF,KAERC,KAAI,SAACC,GAAD,aACH,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAMtG,UAAU,kBAAhB,UACE,eAACsG,GAAA,EAAKlH,OAAN,CAAaY,UAAU,yBAAvB,UACE,cAACqG,GAAA,EAAUvF,OAAX,CACEmB,MAAO,CACLsE,KAAM,EACNC,OAAQ,UACRC,UAAW,SACXzB,SAAU,GACVP,QAAS,QAEXiC,GAAIJ,KAAKK,KACTvG,QAAQ,OACRwG,SAAS,IAVX,SAYE,sBACE3E,MAAO,CAAEwC,QAAS,OAAQC,eAAgB,iBAD5C,UAGE,qBAAKjE,IAAK2F,EAAMS,QAASlG,MAAM,KAAKC,OAAO,KAAKC,IAAI,KACpD,gCACE,qBAAKb,UAAU,qBAAf,SACG8G,KAAOV,EAAMF,WAAWa,OAAO,QAElC,qBAAK/G,UAAU,qBAAf,SAAqCoG,EAAM3E,gBAKjD,8BACE,cAACgB,EAAA,EAAD,CAAQjC,KAAI,kBAAa4F,EAAMY,KAAOhH,UAAU,cAAhD,SACE,qBACES,IAAI,uFACJE,MAAM,OACNC,OAAO,OACPC,IAAI,kBAKZ,cAACwF,GAAA,EAAUtF,SAAX,CAAoB6F,SAAS,IAA7B,SACE,cAACN,GAAA,EAAKW,KAAN,UACE,cAAC5G,EAAA,EAAD,CAAW4B,MAAO,CAAEiF,OAAQ,EAAGC,QAAS,GAAxC,SACE,eAAChF,EAAA,EAAD,WACE,cAACiF,GAAA,EAAD,CAAKnF,MAAO,CAAEtB,MAAO,QAArB,mBACGyF,EAAMiB,YADT,aACG,EAAYlB,KAAI,SAACmB,GAAD,OACf,qBAAKtH,UAAU,sBAAf,SAAsCsH,SAG1C,cAACF,GAAA,EAAD,UACE,8BACE,qBAAKpH,UAAU,aAAf,SAA6BoG,EAAMmB,2BAlDnCnB,EAAMY,QA4DvBQ,c,kBE9FMC,GAjEG,SAAC,GAAiB,IAAfpI,EAAc,EAAdA,QACnB,EAA0BqI,mBAAS,IAAnC,oBAAOhK,EAAP,KAAciK,EAAd,KACA,EAAgCD,mBAAS,IAAzC,oBAAO/J,EAAP,KAAiBiK,EAAjB,KAEMhK,EAAW2B,cAEXI,EAAYF,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCwF,EAA6BxF,EAA7BwF,QAASC,EAAoBzF,EAApByF,MAAO5F,EAAaG,EAAbH,SAExBO,qBAAU,WACJP,GACwB,KAAd,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU0B,SACZ7B,EAAQS,KAAK,WAEbT,EAAQS,KAAK,WAGfzB,aAAawB,WAAW,YACxBxB,aAAawB,WAAW,gBACxBxB,aAAawB,WAAW,eAEzB,CAACR,EAASG,IAOb,OACE,eAAC,GAAD,CAAYiC,MAAM,oBAAlB,UACG2D,GAAS,cAAC,GAAD,CAAchF,QAAQ,SAAtB,SAAgCgF,IACzCD,GAAW,cAAC,GAAD,IACZ,8BACE,eAAC0C,GAAA,EAAD,CAAMC,SAVU,SAACC,GACrBA,EAAEC,iBACFpK,EfJiB,SAACF,EAAOC,GAAR,8CAAqB,WAAOC,GAAP,mBAAAC,EAAA,sEAEtCD,EAAS,CAAEE,KAAM/B,IAEXgC,EAAS,CACbC,QAAS,CACP,eAAgB,qBANkB,SAUfC,IAAMC,KAC3B,mBACA,CACER,QACAC,YAEFI,GAhBoC,gBAU9BI,EAV8B,EAU9BA,KASRP,EAAS,CAAEE,KAAM9B,EAAoBoC,QAASD,IAC9CE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,IApBV,kDAsBtCP,EAAS,CACPE,KAAM7B,EACNmC,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UA3BwB,0DAArB,sDeIRuJ,CAAMvK,EAAOC,KAQlB,UACE,eAACkK,GAAA,EAAKK,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,mCACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,QACLwK,MAAO5K,EACP6K,SAAU,SAACR,GAAD,OAAOJ,EAASI,EAAES,OAAOF,aAIvC,eAACT,GAAA,EAAKK,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,2BACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,WACLwK,MAAO3K,EACP4K,SAAU,SAACR,GAAD,OAAOH,EAAYG,EAAES,OAAOF,aAG1C,sBAAKtI,UAAU,iBAAf,UACE,cAACyC,EAAA,EAAD,CAAQzC,UAAU,SAASI,QAAQ,UAAUtC,KAAK,SAAlD,+BAGA,eAACsJ,GAAA,EAAD,CAAKpH,UAAU,aAAf,6BACe,cAAC,IAAD,CAAMoB,GAAG,YAAT,oDCuCZqH,GA/FM,SAAC,GAAiB,IAAfpJ,EAAc,EAAdA,QACtB,EAA0BqI,mBAAS,IAAnC,oBAAOhK,EAAP,KAAciK,EAAd,KACA,EAAwBD,mBAAS,IAAjC,oBAAOjK,EAAP,KAAaiL,EAAb,KACA,EAAgChB,mBAAS,IAAzC,oBAAO/J,EAAP,KAAiBiK,EAAjB,KACA,EAA8CF,mBAAS,IAAvD,oBAAOiB,EAAP,KAAwBC,EAAxB,KACA,EAA8BlB,mBAAS,MAAvC,oBAAOhJ,EAAP,KAAgBmK,EAAhB,KAEMjL,EAAW2B,cAEXuJ,EAAerJ,aAAY,SAACC,GAAD,OAAWA,EAAMoJ,gBAC1C3D,EAAmB2D,EAAnB3D,QAASC,EAAU0D,EAAV1D,MAGT5F,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAERO,qBAAU,WACJP,EACFH,EAAQS,KAAK,YAEbzB,aAAawB,WAAW,YACxBxB,aAAawB,WAAW,gBACxBxB,aAAawB,WAAW,eAEzB,CAACR,EAASG,IAEb,IAAMuJ,EAAa,uCAAG,WAAOhB,GAAP,SAAAlK,EAAA,sDACpBkK,EAAEC,iBACErK,IAAagL,EACfE,EAAW,mCAEXjL,EAASJ,EAASC,EAAMC,EAAOC,IALb,2CAAH,sDASnB,OACE,cAAC,GAAD,CAAY8D,MAAM,WAAlB,SACE,gCACG2D,GAAS,cAAC,GAAD,CAAchF,QAAQ,SAAtB,SAAgCgF,IACzC1G,GAAW,cAAC,GAAD,CAAc0B,QAAQ,SAAtB,SAAgC1B,IAC3CyG,GAAW,cAAC,GAAD,IACZ,eAAC0C,GAAA,EAAD,CAAMC,SAAUiB,EAAhB,UACE,eAAClB,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,+BACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAO7K,EACP8K,SAAU,SAACR,GAAD,OAAOW,EAAQX,EAAES,OAAOF,aAItC,eAACT,GAAA,EAAKK,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,mCACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,QACLwK,MAAO5K,EACP6K,SAAU,SAACR,GAAD,OAAOJ,EAASI,EAAES,OAAOF,aAIvC,eAACT,GAAA,EAAKK,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,2BACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,WACLwK,MAAO3K,EACP4K,SAAU,SAACR,GAAD,OAAOH,EAAYG,EAAES,OAAOF,aAI1C,eAACT,GAAA,EAAKK,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,uCAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,WACLwK,MAAOK,EACPJ,SAAU,SAACR,GAAD,OAAOa,EAAmBb,EAAES,OAAOF,aAGjD,sBAAKtI,UAAU,iBAAf,UACE,cAACyC,EAAA,EAAD,CAAQzC,UAAU,SAASI,QAAQ,UAAUtC,KAAK,SAAlD,yBAGA,eAACsJ,GAAA,EAAD,WACE,qBAAKpH,UAAU,aAAf,yCACA,cAAC,IAAD,CAAMoB,GAAG,SAASpB,UAAU,aAA5B,qDCjFVgJ,GAAa,GA6gBFC,OA3gBf,YAAuC,IAAZ5J,EAAW,EAAXA,QACzB,EAA0BqI,mBAAS,IAAnC,oBAAOjG,EAAP,KAAcyH,EAAd,KACA,EAA8BxB,mBAAS,IAAvC,oBAAOH,EAAP,KAAgB4B,EAAhB,KAEA,EAAgBzB,mBAAS,IAAlB0B,EAAP,qBACA,EAAiB1B,mBAAS,IAAnB2B,EAAP,qBAEMzL,EAAW2B,cAEXgG,EAAc9F,aAAY,SAACC,GAAD,OAAWA,EAAM6F,eACzCJ,EAAmBI,EAAnBJ,QAASC,EAAUG,EAAVH,MAUXkE,EAAU7J,aAAY,SAACC,GAAD,OAAWA,EAAM4J,WACvCC,EAAWD,EAAQnE,QACjBkC,EAASiC,EAATjC,KAEFmC,EAAc/J,aAAY,SAACC,GAAD,OAAWA,EAAM8J,eAC3CC,EAAWD,EAAYrE,QACrBuE,EAAaF,EAAbE,SAGAlK,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAEFmK,EAAQ,IAAIC,KAEVjE,EADUlG,aAAY,SAACC,GAAD,OAAWA,EAAMkG,aACvCD,aA4FR,SAASkE,EAAQC,GACf,OAAQA,GAAO,IAAMA,EAAIC,OA3F3BhK,qBAAU,WACR,GAAKP,EAEE,EACoB,IAArBA,EAAS0B,QACX7B,EAAQS,KAAK,WAEK,IAAjB6F,GAA2BA,IACA,KAApB,OAARnG,QAAQ,IAARA,OAAA,EAAAA,EAAUqC,gBAEVxC,EAAQS,KAAK,eAEf,IAAMkK,EAAM,OAAGxK,QAAH,IAAGA,OAAH,EAAGA,EAAUyK,aAAaC,MAAM,EAAG,GACzCC,EAAO,OAAG3K,QAAH,IAAGA,OAAH,EAAGA,EAAUyK,aAAaC,MAAM,EAAG,IAEhDF,EAAO7D,KAAI,SAACiE,GAAD,OAAahB,EAAMtJ,KAAKsK,MACnCD,EAAQhE,KAAI,SAACiE,GAAD,OAAaf,EAAOvJ,KAAKsK,WAdrC/K,EAAQS,KAAK,OAgBd,CAACT,EAASsG,EAAcnG,IAM3BO,qBAAU,WACRnC,EAAS0G,QACR,CAAC1G,EAAUyB,EAASG,IAEvBO,qBAAU,WACRnC,EAASqG,QACR,CAACrG,IAgEJ,IA6CMyM,EAAiB,WACb,OAARX,QAAQ,IAARA,KAAUY,SAAQ,SAACzD,GACgC,IAAD,EAAhD,GAAoB,6BAAhBA,EAAQG,IACV,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,4FAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,wFAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,0FAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,yFAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,6FAMV,OACE,mCACE,cAAC,GAAD,CAAYhJ,MAAOqF,KAAO6C,GAAO5C,OAAO,cAAxC,SACE,cAACT,GAAA,EAAD,CAAMtG,UAAU,gBAAhB,SACE,cAACsG,GAAA,EAAKW,KAAN,UACE,eAACY,GAAA,EAAD,CAAMC,SAzJM,SAACC,GAAO,IAAD,EAC3BA,EAAEC,iBAEF,IAAM0C,EAAY,GAalB,GAXI,OAAJrD,QAAI,IAAJA,KAAMiD,SAAQ,SAAChD,GAAS,IAAD,GAC6B,KAA9C,UAAAiD,SAASC,eAAelD,EAAIN,YAA5B,eAAkC2D,UACpCD,EAAU5K,KAAKwH,EAAI7J,SAGvB,UAAA+B,EAASyK,oBAAT,SAAuBK,SAAQ,SAACM,GAAU,IAAD,GACQ,KAA3C,UAAAL,SAASC,eAAeI,UAAxB,eAA+BD,UACjCD,EAAU5K,KAAK8K,MAKjBf,EAAQpI,EAAMoJ,SACdhB,EAAQtC,EAAQsD,SAChBhB,EAAQb,IAGR,OADAqB,IACOS,MACL,oEAGJlN,EHhDF,SAAC6D,EAAO8F,EAASF,EAAMR,GAAvB,8CAAmC,WAAOjJ,EAAU2G,GAAjB,yBAAA1G,EAAA,sEAE/BD,EAAS,CACPE,KAAMiF,KAHuB,EAQ3BwB,IADW/E,EAPgB,EAO7BG,UAAaH,SAGTzB,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB6H,cAAc,UAAD,OAAYrG,EAASsG,SAbP,SAiBR7H,IAAMC,KAAN,sBAErB,CAAEuD,QAAO8F,UAASF,OAAMR,WACxB9I,GApB6B,gBAiBvBI,EAjBuB,EAiBvBA,KAMRP,EAAS,CACPE,KAAMkF,GACN5E,QAASD,IAEXU,OAAOC,SAASC,QAAO,GA3BQ,kDA6BzBL,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAMmF,GACN7E,QAASM,IAnCoB,0DAAnC,wDGiDIqM,CAAkBtJ,EAAMoJ,OAAQtD,EAAQsD,OAAQH,EAAW1B,KAGnDgC,KAAKC,MAAM,EAAAD,KAAKE,SAAyB,GAIjD,yFADAlC,GAGA3J,EAAQS,KAAK,kBAGb,qFADAkJ,GAGA3J,EAAQS,KAAK,mBAGb,sFADAkJ,GAGA3J,EAAQS,KAAK,qBAGb,oFADAkJ,GAGA3J,EAAQS,KAAK,kBAEbT,EAAQS,KAAK,sBA3GfoJ,EAAS,IACTC,EAAW,KA8MH,UACG/D,GAAS,cAAC,GAAD,CAAchF,QAAQ,SAAtB,SAAgCgF,IAC1C,eAACyC,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,qBAAtB,6CAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,QACLwK,MAAO7G,EACP8G,SAAU,SAACR,GAAD,OAAOmB,EAASnB,EAAES,OAAOF,QACnCtI,UAAU,kBAId,eAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,qBAAtB,qCAGA,qBAAKA,UAAU,yBAAf,SACE,sBAAKA,UAAU,eAAf,UACGyJ,GAAY,cAAC,GAAD,CAAS/G,KAAM,KAD9B,OAEGgH,QAFH,IAEGA,OAFH,EAEGA,EAAUvD,KAAI,SAACU,GAAD,OACb,mCACE,qBACEjF,QAAS,SAACmG,GAnHZ,IAACrG,EAAIyJ,EAAJzJ,EAoHiBmF,EAAQG,IApHrBmE,EAoH0BtE,EAAQsE,KAnHnD,OAARzB,QAAQ,IAARA,KAAUY,SAAQ,SAACzD,GAEkC,IAAD,EAoC3C,EArCP,GAAIA,EAAQG,MAAQtF,GAClB,GAAoB,6BAAhBmF,EAAQG,IACV,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,sFAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,sFAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,sFAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,sFAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,uFAIN,UAAAF,SAASC,eAAe3D,EAAQG,YAAhC,SAAsCyD,aAAa,MAAOU,MA6EtCnC,GAAanC,EAAQsE,MAEvBnL,UAAU,iBALZ,SAOE,qCACE,qBACE0B,GAAImF,EAAQG,IACZvG,IAAKoG,EAAQsE,KACbxK,MAAM,KACNC,OAAO,KACPC,IAAKgG,EAAQpJ,OAEf,qBAAKuC,UAAU,gBAAf,SAAgC6G,EAAQpJ,yBAStD,eAACoK,GAAA,EAAKK,MAAN,CAAYC,UAAU,MAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,qBAAtB,+CAGCuJ,EACC,cAAC,GAAD,CAAS7G,KAAM,KAEf,cAACrC,EAAA,EAAD,CAAWL,UAAU,mBAArB,SACE,eAACmC,EAAA,EAAD,WACE,eAACiF,GAAA,EAAD,WACE,qBAAKpH,UAAU,iBAAf,SACE,mBAAGA,UAAU,0BAAb,uBAFJ,OAIGqH,QAJH,IAIGA,OAJH,EAIGA,EACG+D,QAAO,SAAC9D,GAAD,MAAuB,YAAdA,EAAI+D,SACrBlF,KAAI,SAACmB,GAAD,OACH,8BACE,cAACO,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAI4F,EAAIN,IACR/E,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBnE,EAAI7J,oBAMrC,eAAC2J,GAAA,EAAD,WACE,qBAAKpH,UAAU,iBAAf,SACE,mBAAGA,UAAU,0BAAb,uBAFJ,OAIGqH,QAJH,IAIGA,OAJH,EAIGA,EACG+D,QAAO,SAAC9D,GAAD,MAAuB,YAAdA,EAAI+D,SACrBlF,KAAI,SAACmB,GAAD,OACH,8BACE,cAACO,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAI4F,EAAIN,IACR/E,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBnE,EAAI7J,oBAMrC,eAAC2J,GAAA,EAAD,WACE,qBAAKpH,UAAU,iBAAf,SACE,mBAAGA,UAAU,0BAAb,yBAFJ,OAIGqH,QAJH,IAIGA,OAJH,EAIGA,EACG+D,QAAO,SAAC9D,GAAD,MAAuB,cAAdA,EAAI+D,SACrBlF,KAAI,SAACmB,GAAD,OACH,8BACE,cAACO,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAI4F,EAAIN,IACR/E,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBnE,EAAI7J,oBAMrC,eAAC2J,GAAA,EAAD,WACE,qBAAKpH,UAAU,iBAAf,SACE,mBAAGA,UAAU,0BAAb,sBAFJ,OAIGqH,QAJH,IAIGA,OAJH,EAIGA,EACG+D,QAAO,SAAC9D,GAAD,MAAuB,WAAdA,EAAI+D,SACrBlF,KAAI,SAACmB,GAAD,OACH,8BACE,cAACO,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAI4F,EAAIN,IACR/E,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBnE,EAAI7J,oBAMrC,eAAC2J,GAAA,EAAD,WACE,qBAAKpH,UAAU,iBAAf,SACE,mBAAGA,UAAU,0BAAb,qBAFJ,OAIGqH,QAJH,IAIGA,OAJH,EAIGA,EACG+D,QAAO,SAAC9D,GAAD,MAAuB,UAAdA,EAAI+D,SACrBlF,KAAI,SAACmB,GAAD,OACH,8BACE,cAACO,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAI4F,EAAIN,IACR/E,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBnE,EAAI7J,oBAMrC,eAAC2J,GAAA,EAAD,WACE,sBAAKpH,UAAU,iBAAf,UACE,mBAAGA,UAAU,0BAAb,4BAGA,cAAC,IAAD,CAAMoB,GAAG,kBAAT,SACE,cAACqB,EAAA,EAAD,CAAQzC,UAAU,cAAlB,SACE,qBACES,IAAI,uFACJE,MAAM,OACNC,OAAO,OACPC,IAAI,kBAKXuI,EAAMjD,KAAI,SAACyE,GAAD,OACT,8BACE,cAAC/C,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAIkJ,EACJ3I,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBb,kBAMtB,OAARpL,QAAQ,IAARA,OAAA,EAAAA,EAAUsC,WACT,eAACsF,GAAA,EAAD,WACE,qBAAKpH,UAAU,iBAAf,SACE,mBAAGA,UAAU,0BAAb,uBAEDqJ,EAAOlD,KAAI,SAACyE,GAAD,OACV,8BACE,cAAC/C,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAIkJ,EACJ3I,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBb,iBAO/B,gCAOV,eAAC/C,GAAA,EAAKK,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,qBAAtB,wCAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACE3B,GAAG,WACH4B,MAAOf,EACPmE,KAAM,EACNnD,SAAU,SAACR,GAAD,OAAOoB,EAAWpB,EAAES,OAAOF,QACrCtI,UAAU,kBAIbmF,GAAW,cAAC,GAAD,CAASzC,KAAM,KAE3B,eAACP,EAAA,EAAD,WACE,cAACiF,GAAA,EAAD,UACE,cAAC,IAAD,CAAMhG,GAAG,cAAT,SACE,cAACqB,EAAA,EAAD,CAAQrC,QAAQ,UAAUJ,UAAU,kBAApC,kCAKJ,cAACoH,GAAA,EAAD,UACE,cAAC3E,EAAA,EAAD,CACE3E,KAAK,SACLsC,QAAQ,UACRJ,UAAU,kBAHZ,sCCAH2L,OA3ff,YAA8C,IAAnBC,EAAkB,EAAlBA,MAAOvM,EAAW,EAAXA,QAChC,EAA0BqI,qBAA1B,oBAAOjG,EAAP,KAAcyH,EAAd,KACA,EAA8BxB,qBAA9B,oBAAOH,EAAP,KAAgB4B,EAAhB,KACA,EAAwBzB,mBAAS,IAAjC,oBAAOmE,EAAP,KAAaC,EAAb,KACA,EAA8BpE,mBAAS,IAAvC,oBAAOb,EAAP,KAAgBmC,EAAhB,KAEA,EAAgBtB,mBAAS,IAAlB0B,EAAP,qBACA,EAAiB1B,mBAAS,IAAnB2B,EAAP,qBAEMzL,EAAW2B,cAEXmG,EAAcjG,aAAY,SAACC,GAAD,OAAWA,EAAMgG,eACzCP,EAAmBO,EAAnBP,QAASC,EAAUM,EAAVN,MAEXkE,EAAU7J,aAAY,SAACC,GAAD,OAAWA,EAAM4J,WACvCC,EAAWD,EAAQnE,QACjBkC,EAASiC,EAATjC,KAEFmC,EAAc/J,aAAY,SAACC,GAAD,OAAWA,EAAM8J,eAC3CC,EAAWD,EAAYrE,QACrBuE,EAAaF,EAAbE,SAGAlK,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAEAmG,EADUlG,aAAY,SAACC,GAAD,OAAWA,EAAMkG,aACvCD,aAER5F,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,SACX7B,EAAQS,KAAK,UAHfT,EAAQS,KAAK,KAOf,IAAMkK,EAAM,OAAGxK,QAAH,IAAGA,OAAH,EAAGA,EAAUyK,aAAaC,MAAM,EAAG,GACzCC,EAAO,OAAG3K,QAAH,IAAGA,OAAH,EAAGA,EAAUyK,aAAaC,MAAM,EAAG,IAEhDF,EAAO7D,KAAI,SAACiE,GAAD,OAAahB,EAAMtJ,KAAKsK,MACnCD,EAAQhE,KAAI,SAACiE,GAAD,OAAaf,EAAOvJ,KAAKsK,QACpC,CAAC/K,EAASG,EAAUmG,IAEvB5F,qBAAU,WACR,IAAMgM,EAAQ,uCAAG,8BAAAlO,EAAA,sEACQI,IAAMiG,IAAN,uBAA0B0H,EAAMI,OAAOtK,KAD/C,gBACPvD,EADO,EACPA,KAER+K,EAAS/K,EAAKsD,OACd0H,EAAWhL,EAAKoJ,SAChBuE,EAAQ3N,EAAK+H,WACb8C,EAAW7K,EAAK0I,SAND,2CAAH,qDAQdkF,MACC,CAACH,EAAMI,OAAOtK,KAEjB3B,qBAAU,WACRnC,EAAS0G,QACR,CAAC1G,EAAUyB,EAASG,IAEvBO,qBAAU,WACRnC,EAASqG,QACR,CAACrG,IAEJ,IA4GMyM,EAAiB,WACb,OAARX,QAAQ,IAARA,KAAUY,SAAQ,SAACzD,GACgC,IAAD,EAAhD,GAAoB,6BAAhBA,EAAQG,IACV,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,4FAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,wFAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,0FAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,yFAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,6FAMV,SAASZ,EAAQC,GACf,OAAQA,GAAO,IAAMA,EAAIC,OAG3B,OACE,cAAC,GAAD,CAAYtI,MAAOqF,KAAO+E,GAAM9E,OAAO,cAAvC,SACE,cAACT,GAAA,EAAD,CAAMtG,UAAU,gBAAhB,SACE,cAACsG,GAAA,EAAKW,KAAN,UACE,eAACY,GAAA,EAAD,CAAMC,SAxJQ,SAACC,GAAO,IAAD,EAC3BA,EAAEC,iBAEF,IAAM0C,EAAY,GAalB,GAXI,OAAJrD,QAAI,IAAJA,KAAMiD,SAAQ,SAAChD,IACoC,IAA7CiD,SAASC,eAAelD,EAAIN,KAAK2D,SACnCD,EAAU5K,KAAKwH,EAAI7J,SAGvB,UAAA+B,EAASyK,oBAAT,SAAuBK,SAAQ,SAACM,IACgB,IAA1CL,SAASC,eAAeI,GAAMD,SAChCD,EAAU5K,KAAK8K,MAKjBf,EAAO,OAACpI,QAAD,IAACA,OAAD,EAACA,EAAOoJ,SACfhB,EAAO,OAACtC,QAAD,IAACA,OAAD,EAACA,EAASsD,SACjBhB,EAAQhD,GAGR,OADAwD,IACOS,MACL,oEAIJlN,EJRF,SAAC8D,EAAID,EAAO8F,EAASF,EAAMR,GAA3B,8CAAuC,WAAOjJ,EAAU2G,GAAjB,yBAAA1G,EAAA,sEAEnCD,EAAS,CACPE,KAAMoF,KAH2B,EAQ/BqB,IADW/E,EAPoB,EAOjCG,UAAaH,SAGTzB,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB6H,cAAc,UAAD,OAAYrG,EAASsG,SAbH,SAiBZ7H,IAAMgO,IAAN,uBACLvK,GAChB,CAAED,QAAO8F,UAASF,OAAMR,WACxB9I,GApBiC,gBAiB3BI,EAjB2B,EAiB3BA,KAMRP,EAAS,CACPE,KAAMqF,GACN/E,QAASD,IAzBwB,kDA4B7BO,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAMsF,GACNhF,QAASM,IAlCwB,0DAAvC,wDISIwN,CAAkBN,EAAMI,OAAOtK,GAAID,EAAO8F,EAASmD,EAAW7D,IAEtDmE,KAAKC,MAAM,EAAAD,KAAKE,SAAyB,GAIjD,yFADAlC,EAGA3J,EAAQS,KAAK,kBAGb,qFADAkJ,EAGA3J,EAAQS,KAAK,mBAGb,sFADAkJ,EAGA3J,EAAQS,KAAK,qBAGb,oFADAkJ,EAGA3J,EAAQS,KAAK,kBAEbT,EAAQS,KAAK,sBAzDfoJ,EAAS,IACTC,EAAW,KA2JL,UACG/D,GAAS,cAAC,GAAD,CAAchF,QAAQ,SAAtB,SAAgCgF,IAC1C,eAACyC,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,qBAAtB,6CAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,QACLwK,MAAO7G,EACP8G,SAAU,SAACR,GAAD,OAAOmB,EAASnB,EAAES,OAAOF,QACnCtI,UAAU,kBAId,eAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,qBAAtB,qCAGA,qBAAKA,UAAU,yBAAf,SACE,sBAAKA,UAAU,eAAf,UACGyJ,GAAY,cAAC,GAAD,CAAS/G,KAAM,KAD9B,OAEGgH,QAFH,IAEGA,OAFH,EAEGA,EAAUvD,KAAI,SAACU,GAAD,OACb,sBACEjF,QAAS,SAACmG,GArHR,IAACrG,EAAIyJ,EAAJzJ,EAsHamF,EAAQG,IAtHjBmE,EAsHsBtE,EAAQsE,KArH/C,OAARzB,QAAQ,IAARA,KAAUY,SAAQ,SAACzD,GAEkC,IAAD,EAoC3C,EArCP,GAAIA,EAAQG,MAAQtF,GAClB,GAAoB,6BAAhBmF,EAAQG,IACV,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,sFAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,sFAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,sFAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,sFAEC,GAAoB,6BAAhB5D,EAAQG,IAAoC,CAAC,IAAD,EACrD,UAAAuD,SACGC,eAAe3D,EAAQG,YAD1B,SAEIyD,aACA,MACA,uFAIN,UAAAF,SAASC,eAAe3D,EAAQG,YAAhC,SAAsCyD,aAAa,MAAOU,MA+E1CnC,EAAWnC,EAAQsE,OAErBnL,UAAU,iBALZ,UAOE,qBACE0B,GAAImF,EAAQG,IACZvG,IAAKoG,EAAQsE,KACbxK,MAAM,KACNC,OAAO,KACPC,IAAKgG,EAAQpJ,OAEf,qBAAKuC,UAAU,gBAAf,SAAgC6G,EAAQpJ,qBAMlD,eAACoK,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,qBAAtB,+CAGCuJ,EACC,cAAC,GAAD,CAAS7G,KAAM,KAEf,cAACrC,EAAA,EAAD,CAAWL,UAAU,mBAArB,SACE,eAACmC,EAAA,EAAD,WACE,eAACiF,GAAA,EAAD,WACE,qBAAKpH,UAAU,iBAAf,SACE,mBAAGA,UAAU,0BAAb,uBAFJ,OAIGqH,QAJH,IAIGA,OAJH,EAIGA,EACG+D,QAAO,SAAC9D,GAAD,MAAuB,YAAdA,EAAI+D,SACrBlF,KAAI,SAACmB,GAAD,OACH,8BACE,cAACO,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAI4F,EAAIN,IACR/E,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBnE,EAAI7J,oBAMrC,eAAC2J,GAAA,EAAD,WACE,qBAAKpH,UAAU,iBAAf,SACE,mBAAGA,UAAU,0BAAb,uBAFJ,OAIGqH,QAJH,IAIGA,OAJH,EAIGA,EACG+D,QAAO,SAAC9D,GAAD,MAAuB,YAAdA,EAAI+D,SACrBlF,KAAI,SAACmB,GAAD,OACH,8BACE,cAACO,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAI4F,EAAIN,IACR/E,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBnE,EAAI7J,oBAMrC,eAAC2J,GAAA,EAAD,WACE,qBAAKpH,UAAU,iBAAf,SACE,mBAAGA,UAAU,0BAAb,yBAFJ,OAIGqH,QAJH,IAIGA,OAJH,EAIGA,EACG+D,QAAO,SAAC9D,GAAD,MAAuB,cAAdA,EAAI+D,SACrBlF,KAAI,SAACmB,GAAD,OACH,8BACE,cAACO,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAI4F,EAAIN,IACR/E,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBnE,EAAI7J,oBAMrC,eAAC2J,GAAA,EAAD,WACE,qBAAKpH,UAAU,iBAAf,SACE,mBAAGA,UAAU,0BAAb,sBAFJ,OAIGqH,QAJH,IAIGA,OAJH,EAIGA,EACG+D,QAAO,SAAC9D,GAAD,MAAuB,WAAdA,EAAI+D,SACrBlF,KAAI,SAACmB,GAAD,OACH,8BACE,cAACO,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAI4F,EAAIN,IACR/E,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBnE,EAAI7J,oBAMrC,eAAC2J,GAAA,EAAD,WACE,qBAAKpH,UAAU,iBAAf,SACE,mBAAGA,UAAU,0BAAb,qBAFJ,OAIGqH,QAJH,IAIGA,OAJH,EAIGA,EACG+D,QAAO,SAAC9D,GAAD,MAAuB,UAAdA,EAAI+D,SACrBlF,KAAI,SAACmB,GAAD,OACH,8BACE,cAACO,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAI4F,EAAIN,IACR/E,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBnE,EAAI7J,oBAMrC,eAAC2J,GAAA,EAAD,WACE,qBAAKpH,UAAU,iBAAf,SACE,mBAAGA,UAAU,0BAAb,8BAIDoJ,EAAMjD,KAAI,SAACyE,GAAD,OACT,8BACE,cAAC/C,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAIkJ,EACJ3I,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBb,kBAMtB,OAARpL,QAAQ,IAARA,OAAA,EAAAA,EAAUsC,WACT,eAACsF,GAAA,EAAD,WACE,qBAAKpH,UAAU,iBAAf,SACE,mBAAGA,UAAU,0BAAb,uBAEDqJ,EAAOlD,KAAI,SAACyE,GAAD,OACV,8BACE,cAAC/C,GAAA,EAAKyD,MAAN,CACExN,KAAK,WACL4D,GAAIkJ,EACJ3I,MAAO,CAAEiF,OAAQ,MAAOV,OAAQ,WAHlC,SAKE,eAACqB,GAAA,EAAKyD,MAAMlD,MAAZ,CACEnG,MAAO,CACLV,MAAO,UACPD,WAAY,QAEdtB,UAAU,WALZ,UAOE,cAAC6H,GAAA,EAAKyD,MAAMC,MAAZ,CAAkBzN,KAAK,WAAW0N,SAAO,IACzC,sBAAMC,MAAM,QAAZ,SAAqBb,iBAO/B,gCAOV,eAAC/C,GAAA,EAAKK,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,qBAAtB,wCAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACE3B,GAAG,WACH4B,MAAOf,EACPmE,KAAM,EACNnD,SAAU,SAACR,GAAD,OAAOoB,EAAWpB,EAAES,OAAOF,QACrCtI,UAAU,kBAIbmF,GAAW,cAAC,GAAD,CAASzC,KAAM,KAE3B,eAACP,EAAA,EAAD,WACE,cAACiF,GAAA,EAAD,UACE,cAAC,IAAD,CAAMhG,GAAG,cAAT,SACE,cAACqB,EAAA,EAAD,CAAQrC,QAAQ,UAAUJ,UAAU,kBAApC,kCAKJ,cAACoH,GAAA,EAAD,UACE,cAAC3E,EAAA,EAAD,CACE3E,KAAK,SACLsC,QAAQ,UACRJ,UAAU,kBAHZ,4CCjGDmM,GA3YS,SAAC,GAAiB,IAAf9M,EAAc,EAAdA,QAEjBG,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SACR,EAAmBkI,mBAAS,IAArB/J,EAAP,qBACA,EAA8B+J,mBAAS,MAAvC,oBAAOhJ,EAAP,KAAgBmK,EAAhB,KACA,EAAmBnB,mBAAS,MAArB0E,EAAP,qBACA,EAAwB1E,mBAAS,IAAjC,oBAAOjK,EAAP,KAAaiL,EAAb,KACA,EAA0BhB,mBAAS,IAAnC,oBAAOhK,EAAP,KAAciK,EAAd,KACA,EAAwCD,mBAAS,MAAjD,oBAAOuC,EAAP,KAAqBoC,EAArB,KACA,EAA0C3E,mBAAS,IAAnD,oBAAO7F,EAAP,KAAsByK,EAAtB,KACA,EAA0C5E,mBAAS,IAAnD,oBAAO6E,EAAP,KAAsBC,EAAtB,KACA,EAAwD9E,mBAAS,IAAjE,oBAAO+E,EAAP,KAA6BC,EAA7B,KACA,EAAsDhF,mBAAS,IAA/D,oBAAOiF,EAAP,KAA4BC,EAA5B,KACA,EAA4BlF,mBAAS,IAArC,oBAAOmF,EAAP,KAAiBC,EAAjB,KACA,GAA4BpF,mBAAS,IAArC,sBAAOqF,GAAP,MAAiBC,GAAjB,MACA,GAA4BtF,mBAAS,IAArC,sBAAOuF,GAAP,MAAiBC,GAAjB,MACA,GAA4BxF,mBAAS,IAArC,sBAAOyF,GAAP,MAAiBC,GAAjB,MACA,GAA4B1F,mBAAS,IAArC,sBAAO2F,GAAP,MAAiBC,GAAjB,MACA,GAA4B5F,mBAAS,IAArC,sBAAO6F,GAAP,MAAiBC,GAAjB,MACA,GAA4B9F,mBAAS,IAArC,sBAAO+F,GAAP,MAAiBC,GAAjB,MACA,GAA4BhG,mBAAS,IAArC,sBAAOiG,GAAP,MAAiBC,GAAjB,MACA,GAA4BlG,mBAAS,IAArC,sBAAOmG,GAAP,MAAiBC,GAAjB,MACA,GAA8BpG,mBAAS,IAAvC,sBAAOqG,GAAP,MAAkBC,GAAlB,MAGQrI,GADUlG,aAAY,SAACC,GAAD,OAAWA,EAAMkG,aACvCD,aAEF/H,GAAW2B,cAEjBQ,qBAAU,WACHP,IAGsB,IAArBA,EAAS0B,QACX7B,EAAQS,KAAK,WAEK,IAAjB6F,IAA2BA,KACD,IAA3BnG,EAASqC,eAETxC,EAAQS,KAAK,eAEf4I,EAAQlJ,EAAS/B,MACjBkK,EAASnI,EAAS9B,OAClB2O,EAAgB7M,EAASyK,cACzBqC,EAAiB9M,EAASqC,eAC1B2K,EAAiBhN,EAAS+M,eAC1BO,EAAQtN,EAASyK,aAAa,IAC9B+C,GAAQxN,EAASyK,aAAa,IAC9BiD,GAAQ1N,EAASyK,aAAa,IAC9BmD,GAAQ5N,EAASyK,aAAa,IAC9BqD,GAAQ9N,EAASyK,aAAa,IAC9BuD,GAAQhO,EAASyK,aAAa,IAC9ByD,GAAQlO,EAASyK,aAAa,IAC9B2D,GAAQpO,EAASyK,aAAa,IAC9B6D,GAAQtO,EAASyK,aAAa,IAC9B+D,GAASxO,EAASyK,aAAa,KAxB/B5K,EAAQS,KAAK,OA0Bd,CAACT,EAASG,EAAUmG,KAEvB,IAAMsI,GAAqB,uCAAG,WAAOlG,GAAP,SAAAlK,EAAA,sDAC5BkK,EAAEC,iBACE6B,GAAQ0C,IAAkB1C,GAAQ4C,GACpC5D,EAAW,wDACF0D,IAAkBE,EAC3B5D,EAAW,oCAEXjL,GACEe,EAAiB,CACfqI,IAAKxH,EAASwH,IACdvJ,OACAC,QACAC,WACAsM,eACAsC,mBAGJ1D,EAAW,MACXxJ,EAAQS,KAAK,+BAlBa,2CAAH,sDAsBrBoO,GAAuB,uCAAG,WAAOnG,GAAP,SAAAlK,EAAA,sDAC9BkK,EAAEC,iBACEuE,IAAkBI,GACpB/O,GACEoB,EAAmB,CACjBgI,IAAKxH,EAASwH,IACdvJ,OACAC,QACAC,WACAsM,eACAsC,mBAGJ1D,EAAW,MACXxJ,EAAQS,KAAK,+BAEb+I,EAAW,mCAhBiB,2CAAH,sDAoBvBE,GAAa,uCAAG,WAAOhB,GAAP,eAAAlK,EAAA,sDACpBkK,EAAEC,iBACImG,EAAY,GACbtE,GAAQgD,IACNhD,GAAQgD,EAAShC,SACpBsD,EAAUrO,KAAK+M,EAAShC,QAGvBhB,GAAQkD,KACNlD,GAAQkD,GAASlC,SACpBsD,EAAUrO,KAAKiN,GAASlC,QAGvBhB,GAAQoD,KACNpD,GAAQoD,GAASpC,SACpBsD,EAAUrO,KAAKmN,GAASpC,QAGvBhB,GAAQsD,KACNtD,GAAQsD,GAAStC,SACpBsD,EAAUrO,KAAKqN,GAAStC,QAGvBhB,GAAQwD,KACNxD,GAAQwD,GAASxC,SACpBsD,EAAUrO,KAAKuN,GAASxC,QAIvBhB,GAAQ0D,KACN1D,GAAQ0D,GAAS1C,SACpBsD,EAAUrO,KAAKyN,GAAS1C,QAIvBhB,GAAQ4D,KACN5D,GAAQ4D,GAAS5C,SACpBsD,EAAUrO,KAAK2N,GAAS5C,QAIvBhB,GAAQ8D,KACN9D,GAAQ8D,GAAS9C,SACpBsD,EAAUrO,KAAK6N,GAAS9C,QAIvBhB,GAAQgE,KACNhE,GAAQgE,GAAShD,SACpBsD,EAAUrO,KAAK+N,GAAShD,QAIvBhB,GAAQkE,KACNlE,GAAQkE,GAAUlD,SACrBsD,EAAUrO,KAAKiO,GAAUlD,QAI7BjN,GACEqB,EAAsB,CACpB+H,IAAKxH,EAASwH,IACdvJ,OACAC,QACAC,WACAsM,aAAckE,EACd5B,mBAGJlN,EAAQS,KAAK,8BArEO,4CAAH,sDAwEnB,SAAS+J,GAAQC,GACf,OAAQA,GAAO,IAAMA,EAAIC,OAG3B,OACE,eAAC,GAAD,CAAYtI,MAAM,gCAAlB,UACE,eAAC6E,GAAA,EAAD,CAAMtG,UAAU,gBAAgBiC,MAAO,CAAEiF,OAAQ,QAAjD,UACE,cAAC,IAAD,CAAM9F,GAAG,UAAT,SACE,cAACqB,EAAA,EAAD,CAAQrC,QAAQ,UAAUJ,UAAU,kBAApC,kCAIF,eAACsG,GAAA,EAAD,CAAMtG,UAAU,gBAAhB,UACE,cAACsG,GAAA,EAAKlH,OAAN,CAAaY,UAAU,mBAAvB,SACE,qBAAKA,UAAU,qBAAf,sCAGDtB,GACC,cAAC,GAAD,CAAc0B,QAAQ,SAAtB,SAEI,4FAIa,IAAlByB,EACC,8BACE,eAACgG,GAAA,EAAD,CAAMC,SAAUmG,GAAuBjO,UAAU,gBAAjD,UACE,eAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,2BACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,WACLsQ,YAAY,GACZ7F,SAAU,SAACR,GAAD,OAAOyE,EAAiBzE,EAAES,OAAOF,aAI/C,eAACT,GAAA,EAAKK,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,qCAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,WACLsQ,YAAY,GACZ7F,SAAU,SAACR,GAAD,OAAO2E,EAAwB3E,EAAES,OAAOF,aAItD,cAAC7F,EAAA,EAAD,CACErC,QAAQ,UACRtC,KAAK,SACLkC,UAAU,kBAHZ,oCAUJ,8BACE,eAAC6H,GAAA,EAAD,CACEC,SAAUoG,GACVlO,UAAU,gBAFZ,UAIE,eAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,wCAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,WACLsQ,YAAY,GACZ7F,SAAU,SAACR,GAAD,OAAO6E,EAAuB7E,EAAES,OAAOF,aAIrD,cAAC7F,EAAA,EAAD,CACErC,QAAQ,UACRtC,KAAK,SACLkC,UAAU,kBAHZ,6CAYV,eAACsG,GAAA,EAAD,CAAMtG,UAAU,gBAAgBiC,MAAO,CAAEiF,OAAQ,QAAjD,UACGkF,GACC,cAAC,GAAD,CAAchM,QAAQ,OAAtB,SAEI,mFAIN,cAACkG,GAAA,EAAKlH,OAAN,CAAaY,UAAU,mBAAvB,SACE,qBAAKA,UAAU,qBAAf,8CAIF,cAACsG,GAAA,EAAKW,KAAN,UACE,eAACY,GAAA,EAAD,CAAMC,SAAUiB,GAAhB,UACE,eAAC5G,EAAA,EAAD,WACE,eAACiF,GAAA,EAAD,WACE,cAACS,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,SACE,cAACN,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAOuE,EACPnL,GAAG,YACH6G,SAAU,SAACR,GAAD,OAAO+E,EAAQ/E,EAAES,OAAOF,QAClC+F,aAAa,MACbrO,UAAU,iBAGd,cAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,SACE,cAACN,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAOyE,GACPrL,GAAG,YACH6G,SAAU,SAACR,GAAD,OAAOiF,GAAQjF,EAAES,OAAOF,QAClC+F,aAAa,MACbrO,UAAU,iBAGd,cAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,SACE,cAACN,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAO2E,GACPvL,GAAG,YACH6G,SAAU,SAACR,GAAD,OAAOmF,GAAQnF,EAAES,OAAOF,QAClC+F,aAAa,MACbrO,UAAU,iBAGd,cAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,SACE,cAACN,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAO6E,GACPzL,GAAG,YACH6G,SAAU,SAACR,GAAD,OAAOqF,GAAQrF,EAAES,OAAOF,QAClC+F,aAAa,MACbrO,UAAU,iBAGd,cAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,SACE,cAACN,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAO+E,GACP3L,GAAG,YACH6G,SAAU,SAACR,GAAD,OAAOuF,GAAQvF,EAAES,OAAOF,QAClC+F,aAAa,MACbrO,UAAU,oBAIhB,cAACoH,GAAA,EAAD,WACW,OAAR5H,QAAQ,IAARA,OAAA,EAAAA,EAAUsC,WACT,qCACE,cAAC+F,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,SACE,cAACN,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAOiF,GACP7L,GAAG,YACH6G,SAAU,SAACR,GAAD,OAAOyF,GAAQzF,EAAES,OAAOF,QAClC+F,aAAa,MACbrO,UAAU,iBAGd,cAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,SACE,cAACN,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAOmF,GACP/L,GAAG,YACH6G,SAAU,SAACR,GAAD,OAAO2F,GAAQ3F,EAAES,OAAOF,QAClC+F,aAAa,MACbrO,UAAU,iBAGd,cAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,SACE,cAACN,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAOqF,GACPjM,GAAG,YACH6G,SAAU,SAACR,GAAD,OAAO6F,GAAQ7F,EAAES,OAAOF,QAClC+F,aAAa,MACbrO,UAAU,iBAGd,cAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,SACE,cAACN,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAOuF,GACPnM,GAAG,YACH6G,SAAU,SAACR,GAAD,OAAO+F,GAAQ/F,EAAES,OAAOF,QAClC+F,aAAa,MACbrO,UAAU,iBAGd,cAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,SACE,cAACN,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAOyF,GACPrM,GAAG,aACH6G,SAAU,SAACR,GAAD,OAAOiG,GAASjG,EAAES,OAAOF,QACnC+F,aAAa,MACbrO,UAAU,oBAKhB,6BAIN,cAACyC,EAAA,EAAD,CAAQrC,QAAQ,UAAUtC,KAAK,SAASkC,UAAU,kBAAlD,4DClUGsO,GApEO,SAAC,GAAiB,IAAfjP,EAAc,EAAdA,QACjBzB,EAAW2B,cAGTC,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SACR,EAAgDkI,mBAAS,IAAzD,oBAAO6G,EAAP,KAAyBC,EAAzB,KACA,EAA8B9G,mBAAS,MAAvC,oBAAOhJ,EAAP,KAAgBmK,EAAhB,KAEA9I,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,QACX7B,EAAQS,KAAK,WACuB,IAA3BN,EAASqC,eAClBjE,EAASsB,GAAU,IACnBG,EAAQS,KAAK,YAEblC,EAASsB,GAAU,IARrBG,EAAQS,KAAK,OAWd,CAAClC,EAAUyB,EAASG,IAEvB,IAAMuJ,EAAa,uCAAG,WAAOhB,GAAP,SAAAlK,EAAA,sDACpBkK,EAAEC,iBACE6B,EAAQ0E,GACV1F,EAAW,gEACFrJ,EAAS+M,gBAAkBgC,EACpC1F,EAAW,uCAEXA,EAAW,MACXjL,EAASsB,GAAU,IACnBG,EAAQS,KAAK,YATK,2CAAH,sDAanB,SAAS+J,EAAQC,GACf,QAAI,KAAK2E,KAAK3E,MAGNA,GAAO,IAAMA,EAAIC,QAG3B,OACE,eAAC,GAAD,CAAYtI,MAAM,SAAlB,UACG/C,GAAW,cAAC,GAAD,CAAc0B,QAAQ,SAAtB,SAAgC1B,IAC5C,sBAAKsB,UAAU,qBAAf,wBAAgDR,EAAS/B,QACzD,8BACE,eAACoK,GAAA,EAAD,CAAMC,SAAUiB,EAAhB,UACE,eAAClB,GAAA,EAAKK,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,sDAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,WACLsQ,YAAY,GACZ7F,SAAU,SAACR,GAAD,OAAOyG,EAAoBzG,EAAES,OAAOF,aAGlD,cAAC7F,EAAA,EAAD,CAAQzC,UAAU,SAASI,QAAQ,UAAUtC,KAAK,SAAlD,gC,8CC9BK4Q,G,oDAjCb,WAAYC,GAAQ,IAAD,+BACjB,cAAMA,IACDjP,MAAQ,CACXkP,UAAWD,EAAMC,WAHF,E,2CAOnB,WACE,OACE,8BACE,cAAC,KAAD,CACEzQ,KAAM0Q,KAAKnP,MAAMkP,UACjBjO,MAAO,IACPC,OAAQ,GACRkO,QACE,W,GAhBsBC,aC8TnBC,GAjTM,SAAC,GAAiB,IAAf3P,EAAc,EAAdA,QAChBzB,EAAW2B,cAEX0P,EAAQxP,aAAY,SAACC,GAAD,OAAWA,EAAMuP,SACnC9J,EAAgC8J,EAAhC9J,QAASC,EAAuB6J,EAAvB7J,MAAa8J,EAAUD,EAAhB9Q,KAEVgR,EADK1P,aAAY,SAACC,GAAD,OAAWA,EAAM0P,cACxCjR,KACFkR,EAAW9Q,KAAK+Q,MAAMjR,aAAakR,QAAQ,cAEzC/P,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAEAmG,EADUlG,aAAY,SAACC,GAAD,OAAWA,EAAMkG,aACvCD,aAER,EAA8B+B,oBAAS,GAAvC,oBAAO8H,EAAP,KAAgBC,EAAhB,KAEA1P,qBAAU,WACRnC,ERwIoB,uCAAM,WAAOA,EAAU2G,GAAjB,uBAAA1G,EAAA,sEAE1BD,EAAS,CACPE,KAAMuF,KAHkB,EAQtBkB,IADW/E,EAPW,EAOxBG,UAAaH,SAPW,SAUHvB,IAAMiG,IAAN,2BAA8B1E,EAASwH,MAVpC,gBAUlB7I,EAVkB,EAUlBA,KAERP,EAAS,CACPE,KAAMwF,GACNlF,QAASD,IAde,kDAiBpBO,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAMyF,GACNnF,QAASM,IAvBe,0DAAN,yDQvIfc,GAGsB,IAArBA,EAAS0B,QACX7B,EAAQS,KAAK,WAEK,IAAjB6F,GAA2BA,IACD,IAA3BnG,EAASqC,eAETxC,EAAQS,KAAK,eARfT,EAAQS,KAAK,OAWd,CAAClC,EAAUyB,EAASG,EAAUmG,IAEjC5F,qBAAU,WACRnC,ERgLuB,uCAAM,WAAOA,EAAU2G,GAAjB,uBAAA1G,EAAA,sEAE7BQ,aAAawB,WAAW,aACxBjC,EAAS,CACPE,KAAM6F,KAJqB,EASzBY,IADW/E,EARc,EAQ3BG,UAAaH,SARc,SAWNvB,IAAMiG,IAAN,8BAAiC1E,EAASwH,MAXpC,gBAWrB7I,EAXqB,EAWrBA,KAERP,EAAS,CACPE,KAAM8F,GACNxF,QAASD,IAEXE,aAAaC,QAAQ,YAAaC,KAAKC,UAAUL,IAjBpB,kDAmBvBO,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAM+F,GACNzF,QAASM,IAEXL,aAAaC,QAAQ,YAAaC,KAAKC,UAAUE,IA3BpB,0DAAN,2DQ/KtB,CAACd,IAEJmC,qBAAU,WACRnC,ERgJyB,uCAAM,WAAOA,EAAU2G,GAAjB,uBAAA1G,EAAA,sEAE/BD,EAAS,CACPE,KAAM0F,KAHuB,EAQ3Be,IADW/E,EAPgB,EAO7BG,UAAaH,SAPgB,SAURvB,IAAMiG,IAAN,gCAAmC1E,EAASwH,MAVpC,gBAUvB7I,EAVuB,EAUvBA,KAERP,EAAS,CACPE,KAAM2F,GACNrF,QAASD,IAdoB,kDAiBzBO,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAM4F,GACNtF,QAASM,IAvBoB,0DAAN,2DQ/IxB,CAACd,IAEJ,IAAI8R,EAAW,UACDC,IAAVT,IACFQ,EAAW,CACTE,OAAQ,CAAC,WAAY,OAAQ,SAAU,MAAO,WAC9CC,SAAU,CACR,CACEC,MAAO,oCACP3R,KAAM,CAAC+Q,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IACrDa,gBAAiB,CACf,UACA,UACA,UACA,UACA,eAOV,IAAIC,EAAY,UACGL,IAAfR,IACFa,EAAY,CACVJ,OAAQ,CAAC,WAAY,OAAQ,SAAU,MAAO,WAC9CC,SAAU,CACR,CACEC,MAAO,oCACP3R,KAAM,CACJgR,EAAW,GACXA,EAAW,GACXA,EAAW,GACXA,EAAW,GACXA,EAAW,IAEbY,gBAAiB,CACf,UACA,UACA,UACA,UACA,eA8CV,OACE,eAAC,GAAD,CAAYtO,MAAM,8BAAlB,UACG2D,GACC,cAAC,GAAD,CAAchF,QAAQ,SAAtB,SAEI,uFAIL+E,GAAW,cAAC,GAAD,IACZ,8BACG+J,EACC,mCACE,cAAC7O,EAAA,EAAD,CAAWL,UAAU,mBAArB,SACE,eAACmC,EAAA,EAAD,WACE,cAACiF,GAAA,EAAD,CAAK6I,GAAI,EAAGjQ,UAAU,kBAAtB,UACW,OAARR,QAAQ,IAARA,OAAA,EAAAA,EAAUsC,aAAc0N,EACvB,eAACpI,GAAA,EAAD,CAAK6I,GAAG,OAAOjQ,UAAU,kBAAzB,UACE,cAACyC,EAAA,EAAD,CACEb,QAAS,SAACmG,GACR0H,GAAW,IAEbzP,UAAU,kBAJZ,4BAQA,cAACmC,EAAA,EAAD,CACEF,MAAO,CAAEwC,QAAS,OAAQC,eAAgB,UAD5C,SAGE,qBAAK1E,UAAU,+BAAf,qCAIDqP,EACC,qCACE,eAAClN,EAAA,EAAD,WACE,cAACiF,GAAA,EAAD,UACE,qBAAKpH,UAAU,iCAAf,sBAIF,cAACoH,GAAA,EAAD,UACE,qBAAKpH,UAAU,2BAAf,kCAKHqP,EACErJ,MAAK,SAACnI,EAAGoI,GACR,OAAIpI,EAAEyK,MAAQrC,EAAEqC,OACN,EAENzK,EAAEyK,MAAQrC,EAAEqC,MACP,EAEF,KAER4B,MAAM,EAAG,GACT/D,KAAI,SAACyE,GAAD,OACH,eAACzI,EAAA,EAAD,CAAKF,MAAO,CAAEiO,UAAW,qBAAzB,UACE,cAAC9I,GAAA,EAAD,CAAKpH,UAAU,yBAAf,SACE,8BAAM4K,EAAKnN,SAEb,cAAC2J,GAAA,EAAD,CAAKpH,UAAU,mBAAf,SACE,gCAAM4K,EAAKtC,MAAX,uBAMV,cAAC,GAAD,OAIJ,eAAClB,GAAA,EAAD,CAAK6I,GAAG,OAAOjQ,UAAU,kBAAzB,UACE,cAACyC,EAAA,EAAD,CACEb,QAAS,SAACmG,GACR0H,GAAW,IAEbzP,UAAU,kBAJZ,2BAQA,cAACmC,EAAA,EAAD,CACEF,MAAO,CAAEwC,QAAS,OAAQC,eAAgB,UAD5C,SAGE,qBAAK1E,UAAU,+BAAf,qCAIDqP,EACC,qCACE,eAAClN,EAAA,EAAD,WACE,cAACiF,GAAA,EAAD,UACE,qBAAKpH,UAAU,iCAAf,sBAIF,cAACoH,GAAA,EAAD,UACE,qBAAKpH,UAAU,2BAAf,kCAKHqP,EACErJ,MAAK,SAACnI,EAAGoI,GACR,OAAIpI,EAAEyK,MAAQrC,EAAEqC,OACN,EAENzK,EAAEyK,MAAQrC,EAAEqC,MACP,EAEF,KAERnC,KAAI,SAACyE,GAAD,OACH,eAACzI,EAAA,EAAD,CAAKF,MAAO,CAAEiO,UAAW,qBAAzB,UACE,cAAC9I,GAAA,EAAD,CAAKpH,UAAU,yBAAf,SACE,8BAAM4K,EAAKnN,SAEb,cAAC2J,GAAA,EAAD,CAAKpH,UAAU,mBAAf,SACE,gCAAM4K,EAAKtC,MAAX,uBAMV,cAAC,GAAD,SAKR,eAAClB,GAAA,EAAD,YAC2B,KAAhB,OAAR5H,QAAQ,IAARA,OAAA,EAAAA,EAAUsC,iBAAqC6N,IAAfR,EAC/B,qCACE,qBAAKnP,UAAU,8BAAf,qCAGA,sBAAKA,UAAU,mCAAf,kCAjKH,WACf,IAAMmQ,EACJ,EAAIhB,EAAW,GACf,EAAIA,EAAW,GACf,EAAIA,EAAW,GACf,EAAIA,EAAW,GACf,EAAIA,EAAW,GAEXiB,EACJjB,EAAW,GACXA,EAAW,GACXA,EAAW,GACXA,EAAW,GACXA,EAAW,GAEPkB,EAAYrF,KAAKsF,MAAMH,EAAQC,GAErC,OAAkB,IAAdC,EAAwB,WACL,IAAdA,EAAwB,OACV,IAAdA,EAAwB,SACV,IAAdA,EAAwB,MACV,IAAdA,EAAwB,eAA5B,EA6IkCE,MAErB,cAAC,GAAD,CACE3B,UAAWoB,EACX/N,MAAO,CACLkF,QAAS,IACTD,OAAQ,UAKd,6BAEF,qBAAKlH,UAAU,8BAAf,wCAGA,sBAAKA,UAAU,mCAAf,kCAjMA,WACd,IAAMwQ,EACJ,EAAItB,EAAM,GAAK,EAAIA,EAAM,GAAK,EAAIA,EAAM,GAAK,EAAIA,EAAM,GAAK,EAAIA,EAAM,GAElEuB,EAAMvB,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAExDwB,EAAW1F,KAAKsF,MAAME,EAAOC,GAEnC,OAAiB,IAAbC,EAAuB,WACL,IAAbA,EAAuB,OACV,IAAbA,EAAuB,SACV,IAAbA,EAAuB,MACV,IAAbA,EAAuB,eAA3B,EAsL8B7J,MAErB,cAAC,GAAD,CACE+H,UAAWc,EACXzN,MAAO,CACLkF,QAAS,IACTD,OAAQ,OAGZ,cAAC,IAAD,CAAM9F,GAAG,UAAT,SACE,cAACqB,EAAA,EAAD,CAAQrC,QAAQ,UAAUJ,UAAU,kBAApC,4CASV,8BCjRK2Q,GAjCgB,SAAC,GAAiB,IAAftR,EAAc,EAAdA,QAExBG,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAUR,OATAO,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,SACX7B,EAAQS,KAAK,UAHfT,EAAQS,KAAK,QAQf,cAAC,GAAD,CAAY2B,MAAM,6BAAlB,SACE,eAACpB,EAAA,EAAD,WACE,eAAC8B,EAAA,EAAD,WACE,qBAAKnC,UAAU,WAAf,SACE,mBAAGA,UAAU,qBAAb,2CAEF,qBAAKA,UAAU,WAAf,SACE,qBAAKS,IAAK+B,GAAM7B,MAAM,MAAMC,OAAO,MAAMC,IAAI,cAGjD,cAACsB,EAAA,EAAD,UACE,cAAC,IAAD,CAAMf,GAAG,cAAT,SACE,cAACqB,EAAA,EAAD,CAAQzC,UAAU,kBAAlB,iCCqBG4Q,GA9CU,SAAC,GAAiB,IAAfvR,EAAc,EAAdA,QAElBG,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SACRO,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,SACX7B,EAAQS,KAAK,UAHfT,EAAQS,KAAK,QAmBjB,OACE,cAAC,GAAD,CAAY2B,MAAM,+BAAlB,SACE,eAACpB,EAAA,EAAD,WACE,eAAC+G,GAAA,EAAD,WACE,qBAAKpH,UAAU,WAAf,SACE,mBAAGA,UAAU,qBAAb,SAhBM,WACd,IAAI6Q,EAAM7F,KAAKC,MAAM,EAAAD,KAAKE,SAAyB,GACnD,OAAY,IAAR2F,EACK,4FACU,IAARA,EACF,sGAEA,gEASkCC,OAGrC,qBAAK9Q,UAAU,WAAf,SACE,qBAAKS,IAAK+B,GAAM7B,MAAM,MAAMC,OAAO,MAAMC,IAAI,cAGjD,cAACsB,EAAA,EAAD,UACE,cAAC,IAAD,CAAMf,GAAG,cAAT,SACE,cAACqB,EAAA,EAAD,CAAQzC,UAAU,kBAAlB,iCCTG+Q,GA7BI,SAAC,GAAiB,IAAf1R,EAAc,EAAdA,QAEZG,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAMR,OALAO,qBAAU,WACHP,GACHH,EAAQS,KAAK,QAIf,cAAC,GAAD,CAAY2B,MAAM,sBAAlB,SACE,eAACpB,EAAA,EAAD,WACE,eAAC8B,EAAA,EAAD,WACE,qBAAKnC,UAAU,WAAf,SACE,mBAAGA,UAAU,qBAAb,kCAEF,qBAAKA,UAAU,WAAf,SACE,qBAAKS,IAAK+B,GAAM7B,MAAM,MAAMC,OAAO,MAAMC,IAAI,cAGjD,cAACsB,EAAA,EAAD,UACE,cAAC,IAAD,CAAMf,GAAG,cAAT,SACE,cAACqB,EAAA,EAAD,CAAQzC,UAAU,kBAAlB,iC,UC4KGgR,GAjME,SAAC,GAAiB,IAAf3R,EAAc,EAAdA,QAEVG,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAER,EAA4BkI,mBAAS,IAArC,oBAAOuJ,EAAP,KAAeC,EAAf,KACA,EAA0BxJ,mBAAS,IAAnC,oBAAOhK,EAAP,KAAciK,EAAd,KACA,EAAgCD,mBAAS,IAAzC,oBAAOyJ,EAAP,KAAiBC,EAAjB,KACA,EAAwB1J,mBAAS,IAAjC,oBAAO2J,EAAP,KAAaC,EAAb,KACA,EAA8B5J,oBAAS,GAAvC,oBAAOvC,EAAP,KAAgBoM,EAAhB,KAEAxR,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,SACX7B,EAAQS,KAAK,UAHfT,EAAQS,KAAK,QAQjB,IAgCM0R,EAAW,uCAAG,WAAOzJ,GAAP,mBAAAlK,EAAA,yDACH,eAAXkK,EAAEjK,MAAoC,cAAXiK,EAAEjK,KADf,wBAEVK,EAAO,IAAIsT,UACZC,OAAO,OAAQ3J,GACpB5J,EAAKuT,OAAO,gBAAiB,sBAC7BH,GAAW,GALK,SAMEI,MAChB,2DACA,CACEC,OAAQ,OACRC,KAAM1T,IAVM,cAMV2T,EANU,iBAaGA,EAAIC,OAbP,QAaVC,EAbU,OAehBV,EAAQU,EAAKC,YACbV,GAAW,GAhBK,wBAkBhBW,QAAQC,IAAI,oBAlBI,4CAAH,sDAsBjB,OACE,cAAC,GAAD,CAAY1Q,MAAM,eAAlB,SACE,cAACpB,EAAA,EAAD,UACE,eAAC8B,EAAA,EAAD,CAAKF,MAAO,CAAEC,WAAY,UAAWS,OAAQ,QAA7C,UACE,cAACyE,GAAA,EAAD,CAAK6I,GAAI,EAAT,SACE,qBAAKhO,MAAO,CAAEwC,QAAS,OAAQC,eAAgB,iBAA/C,SACE,gCACE,qBACE1E,UAAU,qBACViC,MAAO,CAAEmQ,UAAW,OAAQC,aAAc,QAF5C,0CAMA,sBACErS,UAAU,qBACViC,MAAO,CAAEX,WAAY,QAFvB,UAIE,gGAIA,sBACA,iFACA,4DACA,sDACA,sDACA,2DACA,mEACA,yBAEF,qBACEtB,UAAU,qBACViC,MAAO,CAAEX,WAAY,QAFvB,SAIE,qMASR,cAAC8F,GAAA,EAAD,UACE,cAACd,GAAA,EAAD,CAAMrE,MAAO,CAAEC,WAAY,OAAQS,OAAQ,QAA3C,SACE,cAAC2D,GAAA,EAAKW,KAAN,CAAWhF,MAAO,CAAEC,WAAY,OAAQS,OAAQ,QAAhD,SACE,eAACkF,GAAA,EAAD,CACEC,SArGE,SAACC,GACjBA,EAAEC,iBAEa,KAAXiJ,GAA2B,KAAVvT,GAA6B,KAAbyT,GAA4B,KAATE,EACtDvG,MAAM,kCAENwH,KACGC,KACC,kBACA,mBACA,CACEtB,OAAQA,EACRuB,QAAShT,EAASwH,IAClBtJ,MAAOA,EACPyT,SAAUA,EACVsB,YAAapB,GAEf,8BAEDqB,MACC,SAACC,GACCtT,EAAQS,KAAK,uBAEf,SAACsF,GACC0F,MAAM1F,EAAMwN,SAIlB7K,EAAES,OAAOqK,UA0EG5Q,MAAO,CAAEC,WAAY,OAAQS,OAAQ,QAFvC,UAIE,eAACkF,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,oBACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLsQ,YAAY,aACZ9F,MAAO2I,EACP1I,SAAU,SAACR,GAAD,OAAOmJ,EAAUnJ,EAAES,OAAOF,QACpCwK,aAAa,WAGjB,eAACjL,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,mCAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,QACLsQ,YAAY,mBACZ9F,MAAO5K,EACP6K,SAAU,SAACR,GAAD,OAAOJ,EAASI,EAAES,OAAOF,QACnCwK,aAAa,WAGjB,eAACjL,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,yBACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLsQ,YAAY,gBACZ9F,MAAO6I,EACP5I,SAAU,SAACR,GAAD,OAAOqJ,EAAYrJ,EAAES,OAAOF,QACtCwK,aAAa,WAGjB,eAACjL,GAAA,EAAKK,MAAN,CAAYC,UAAU,mBAAmBnI,UAAU,OAAnD,UACE,cAAC6H,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,2BAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLL,KAAK,OACL8K,SAAU,SAACR,GAAD,OAAOyJ,EAAYzJ,EAAES,OAAOuK,MAAM,UAI/C5N,EACC,qCACE,qBAAKnF,UAAU,sBAAf,+CAGA,cAAC,GAAD,CAAS0C,KAAM,QAGjB,cAACD,EAAA,EAAD,CACErC,QAAQ,UACRtC,KAAK,SACLkC,UAAU,kBAHZ,iD,mBCtFLgT,GA3FK,SAAC,GAAiB,IAAD,EAAd3T,EAAc,EAAdA,QAEbG,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAYR,OAVAO,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,SACX7B,EAAQS,KAAK,UAHfT,EAAQS,KAAK,QASf,cAAC,GAAD,CAAY2B,MAAM,SAAlB,SACE,cAACpB,EAAA,EAAD,UACE,eAAC8B,EAAA,EAAD,WACE,cAACiF,GAAA,EAAD,CAAK6I,GAAI,EAAT,SACE,eAACpI,GAAA,EAAD,WACE,eAACA,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,+BAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAK,OAAE9I,QAAF,IAAEA,OAAF,EAAEA,EAAU/B,KACjBwV,UAAQ,EACRjT,UAAU,kBAGd,eAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,mCAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAK,OAAE9I,QAAF,IAAEA,OAAF,EAAEA,EAAU9B,MACjBuV,UAAQ,EACRjT,UAAU,kBAGd,eAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,+BAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAOxB,KAAM,OAACtH,QAAD,IAACA,OAAD,EAACA,EAAU0G,WAAWa,OAAO,cAC1CkM,UAAQ,EACRjT,UAAU,kBAId,eAACmC,EAAA,EAAD,WACE,cAACiF,GAAA,EAAD,UACE,cAAC3E,EAAA,EAAD,CAAQjC,KAAK,aAAaR,UAAU,kBAApC,gCAIF,cAACoH,GAAA,EAAD,UACE,cAAC3E,EAAA,EAAD,CAAQzC,UAAU,kBAAkBQ,KAAK,mBAAzC,wCAOR,cAAC4G,GAAA,EAAD,CACEnF,MAAO,CACLwC,QAAS,OACTE,WAAY,SACZD,eAAgB,UAJpB,SAOE,cAACwO,GAAA,GAAD,GACEzS,IAAG,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAU2T,eACftS,IAAI,GACJb,UAAU,aACVW,MAAM,MACNC,OAAO,OALT,qBAMM,kBANN,iDCgFGwS,GAxJW,SAAC,GAAiB,IAAD,EAAd/T,EAAc,EAAdA,QAC3B,EAAwBqI,mBAAS,IAAjC,oBAAOjK,EAAP,KAAaiL,EAAb,KACA,EAA4ChB,qBAA5C,oBAAOyL,EAAP,KAAuBE,EAAvB,KACA,EAAgC3L,mBAAS,IAAzC,oBAAO/J,EAAP,KAAiBiK,EAAjB,KACA,EAA8CF,mBAAS,IAAvD,oBAAwBkB,GAAxB,WACA,EAAoClB,qBAApC,oBAAO4L,EAAP,KAAmBC,EAAnB,KAEM3V,EAAW2B,cAGTC,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAEFgU,EAAa/T,aAAY,SAACC,GAAD,OAAWA,EAAM8T,cACxCrO,EAA4BqO,EAA5BrO,QAASC,EAAmBoO,EAAnBpO,MAAOI,EAAYgO,EAAZhO,QAExBzF,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,QACX7B,EAAQS,KAAK,WAEb4I,EAAQlJ,EAAS/B,MACjB4V,EAAkB7T,EAAS2T,iBAN7B9T,EAAQS,KAAK,OASd,CAACT,EAASG,IAgCb,OACE,cAAC,GAAD,CAAYiC,MAAM,mBAAlB,SACE,eAACU,EAAA,EAAD,WACE,cAACiF,GAAA,EAAD,CAAK6I,GAAI,EAAT,SACE,eAACpI,GAAA,EAAD,CAAMC,SAVQ,SAACC,G5BiHI,IAACnJ,E4BhH1BmJ,EAAEC,iBAEFpK,G5B8G0BgB,E4B9GH,CAAEnB,OAAME,WAAUwV,kB5B8GhB,uCAAU,WAAOvV,EAAU2G,GAAjB,uBAAA1G,EAAA,sEAEnCD,EAAS,CAAEE,KAAMxB,IAFkB,EAM/BiI,IADW/E,EALoB,EAKjCG,UAAaH,SAGTzB,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB6H,cAAc,UAAD,OAAYrG,EAASsG,SAXH,SAeZ7H,IAAMC,KAC3B,4BACAU,EACAb,GAlBiC,gBAe3BI,EAf2B,EAe3BA,KAMRP,EAAS,CAAEE,KAAMvB,EAAqB6B,QAASD,IAE/CP,EAAS,CAAEE,KAAM9B,EAAoBoC,QAASD,IAE9CE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,IAzBb,kDA2BnCP,EAAS,CACPE,KAAMtB,EACN4B,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAhCqB,0DAAV,2D4BvGnB,UACGyG,GAAW,cAAC,GAAD,IACXK,GACC,cAAC,GAAD,CAAcpF,QAAQ,UAAtB,0CAIDgF,GAAS,cAAC,GAAD,CAAchF,QAAQ,SAAtB,SAAgCgF,IAC1C,eAACyC,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,+BACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLyK,SAAU,SAACR,GAAD,OAAOW,EAAQX,EAAES,OAAOF,QAClC+F,aAAa,MACbrO,UAAU,kBAGd,eAAC6H,GAAA,EAAKK,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,iCACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,WACLyK,SAAU,SAACR,GAAD,OAAOH,EAAYG,EAAES,OAAOF,QACtC+F,aAAa,WAGjB,eAACxG,GAAA,EAAKK,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,6CAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,WACLyK,SAAU,SAACR,GAAD,OAAOa,EAAmBb,EAAES,OAAOF,QAC7C+F,aAAa,WAEH,IACbiF,GACC,cAAC,GAAD,CAAclT,QAAQ,SAAtB,SAAgCkT,IAElC,eAACzL,GAAA,EAAKK,MAAN,CAAYC,UAAU,MAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,sCAGA,cAAC6H,GAAA,EAAK4L,KAAN,CACElL,SAAU,SAACR,GAAD,OA7EJ,SAAC2L,GAEnB,GADAH,EAAc,MACI,eAAdG,EAAK5V,MAAuC,cAAd4V,EAAK5V,KAkBrC,OAAOyV,EAAc,oCAjBrB,IAAMpV,EAAO,IAAIsT,SACjBtT,EAAKuT,OAAO,OAAQgC,GACpBvV,EAAKuT,OAAO,gBAAiB,cAC7BvT,EAAKuT,OAAO,aAAc,cAC1BC,MAAM,0DAA2D,CAC/DC,OAAQ,OACRC,KAAM1T,IAELuU,MAAK,SAACZ,GAAD,OAASA,EAAIC,UAClBW,MAAK,SAACvU,GACLkV,EAAkBlV,EAAKwV,IAAIC,YAC3B1B,QAAQC,IAAIgB,MAEbU,OAAM,SAACC,GACN5B,QAAQC,IAAI2B,MA4DWC,CAAYhM,EAAES,OAAOuK,MAAM,KAC5CrR,GAAG,cACH5D,KAAK,YACLgS,MAAM,kCACNkE,QAAM,OAGV,eAAC7R,EAAA,EAAD,WACE,cAACiF,GAAA,EAAD,UACE,cAAC3E,EAAA,EAAD,CAAQjC,KAAK,SAASR,UAAU,kBAAhC,gCAIF,cAACoH,GAAA,EAAD,UACE,cAAC3E,EAAA,EAAD,CACE3E,KAAK,SACLmW,QAAQ,UACRjU,UAAU,kBAHZ,uCAWR,cAACoH,GAAA,EAAD,CACEnF,MAAO,CACLwC,QAAS,OACTE,WAAY,SACZD,eAAgB,UAJpB,SAOE,cAACwO,GAAA,GAAD,GACEzS,IAAK0S,EACLtS,IAAKpD,EACLuC,UAAU,aACVW,MAAM,MACNC,OAAO,OALT,qBAMM,kBANN,+CCvFKsT,GAlDG,SAAC,GAAiB,IAAf7U,EAAc,EAAdA,QACbzB,EAAW2B,cAEX4U,EAAc1U,aAAY,SAACC,GAAD,OAAWA,EAAMyU,eACzChP,EAA8BgP,EAA9BhP,QAASC,EAAqB+O,EAArB/O,MAAOgP,EAAcD,EAAdC,UAGhB5U,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAcR,OAZAO,qBAAU,WACHP,GAGuB,KAAd,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU0B,SACZ7B,EAAQS,KAAK,KAEblC,E7B0LgB,uCAAM,WAAOA,EAAU2G,GAAjB,iBAAA1G,EAAA,sEAE1BD,EAAS,CAAEE,KAAMT,IAFS,SAIHY,IAAMiG,IAAI,0BAJP,gBAIlB/F,EAJkB,EAIlBA,KAERP,EAAS,CAAEE,KAAMR,EAAmBc,QAASD,IANnB,gDAQ1BP,EAAS,CACPE,KAAMtB,EACN4B,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAbY,yDAAN,yD6B/LlBW,EAAQS,KAAK,OAQd,CAAClC,EAAUyB,EAASG,IAGrB,cAAC,GAAD,CAAYiC,MAAM,gBAAlB,SACE,eAACpB,EAAA,EAAD,CAAWL,UAAU,kBAArB,UACE,cAACmC,EAAA,EAAD,UACE,qBAAKnC,UAAU,qBAAf,iCAEDoF,GACC,cAAC,GAAD,CAAchF,QAAQ,SAAtB,SACG,2EAGJ+E,GAAW,cAAC,GAAD,IATd,OAUGiP,QAVH,IAUGA,OAVH,EAUGA,EAAWjO,KAAI,SAACvH,GAAD,OACd,eAACuD,EAAA,EAAD,CAAKnC,UAAU,iBAAf,UACE,cAACoH,GAAA,EAAD,CAAKpH,UAAU,aAAf,SAA6BpB,EAAKoI,MAClC,cAACI,GAAA,EAAD,CAAKpH,UAAU,aAAf,SAA6BpB,EAAKlB,QAClC,cAAC0J,GAAA,EAAD,CAAKpH,UAAU,aAAf,kBACA,cAACoH,GAAA,EAAD,UACE,cAAC3E,EAAA,EAAD,CAAQzC,UAAU,kBAAkBQ,KAAI,iBAAY5B,EAAKoI,KAAzD,yCCrBCqN,GAtBa,SAAC,GAAwB,IAAtBzI,EAAqB,EAArBA,MAAOvM,EAAc,EAAdA,QAC9BzB,EAAW2B,cAGTC,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAeR,OAbAO,qBAAU,W9B0NoB,IAAC2B,E8BzNxBlC,GAGsB,IAArBA,EAAS0B,QACX7B,EAAQS,KAAK,WACJ8L,EAAMI,OAAOtK,KACtB9D,G9BmNyB8D,E8BnNCkK,EAAMI,OAAOtK,G9BmNf,uCAAQ,WAAO9D,GAAP,iBAAAC,EAAA,sEAEpCD,EAAS,CAAEE,KDtM2B,+BCoMF,SAIbG,IAAMC,KAAN,sCAA0CwD,IAJ7B,gBAI5BvD,EAJ4B,EAI5BA,KAERP,EAAS,CAAEE,KDzM2B,6BCyMOM,QAASD,IAEtDU,OAAOC,SAASC,SARoB,kDAUpCnB,EAAS,CACPE,KD7MiC,0BC8MjCM,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAfsB,0DAAR,wD8BlNxBW,EAAQS,KAAK,WANfT,EAAQS,KAAK,OASd,CAAClC,EAAUyB,IAEP,8BCaMiV,GA7BK,SAAC,GAAiB,IAAfjV,EAAc,EAAdA,QAEbG,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAMR,OALAO,qBAAU,WACHP,GACHH,EAAQS,KAAK,QAIf,cAAC,GAAD,CAAY2B,MAAM,wCAAlB,SACE,eAACpB,EAAA,EAAD,WACE,eAAC8B,EAAA,EAAD,WACE,qBAAKnC,UAAU,WAAf,SACE,mBAAGA,UAAU,qBAAb,kCAEF,qBAAKA,UAAU,WAAf,SACE,qBAAKS,IAAK+B,GAAM7B,MAAM,MAAMC,OAAO,MAAMC,IAAI,cAGjD,cAACsB,EAAA,EAAD,UACE,cAAC,IAAD,CAAMf,GAAG,cAAT,SACE,cAACqB,EAAA,EAAD,CAAQzC,UAAU,kBAAlB,iCC7BCuU,GAA2B,2BAC3BC,GAA2B,2BAC3BC,GAAwB,wBAExBC,GAA6B,6BAC7BC,GAA6B,6BAC7BC,GAA0B,0BCuB1BC,GACX,SAACC,EAAUpW,EAASyM,GAApB,8CAA6B,WAAOvN,EAAU2G,GAAjB,yBAAA1G,EAAA,sEAEzBD,EAAS,CACPE,KAAM4W,KAHiB,EAQrBnQ,IADW/E,EAPU,EAOvBG,UAAaH,SAGTzB,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB6H,cAAc,UAAD,OAAYrG,EAASsG,SAbb,SAiBF7H,IAAMC,KAAN,2BAErB,CAAE4W,WAAUpW,UAASyM,QACrBpN,GApBuB,gBAiBjBI,EAjBiB,EAiBjBA,KAMRP,EAAS,CACPE,KAAM6W,GACNvW,QAASD,IAEXU,OAAOC,SAASC,QAAO,GA3BE,kDA6BnBL,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAM8W,GACNxW,QAASM,IAnCc,0DAA7B,yDC9BWqW,GAAgC,gCAChCC,GAAgC,gCAChCC,GAA6B,6BAE7BC,GAAkC,kCAClCC,GAAkC,kCAClCC,GAA+B,+BCuB/BC,GACX,SAACP,EAAUpW,EAASyM,GAApB,8CAA6B,WAAOvN,EAAU2G,GAAjB,yBAAA1G,EAAA,sEAEzBD,EAAS,CACPE,KAAMoX,KAHiB,EAQrB3Q,IADW/E,EAPU,EAOvBG,UAAaH,SAGTzB,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB6H,cAAc,UAAD,OAAYrG,EAASsG,SAbb,SAiBF7H,IAAMC,KAAN,gCAErB,CAAE4W,WAAUpW,UAASyM,QACrBpN,GApBuB,gBAiBjBI,EAjBiB,EAiBjBA,KAMRP,EAAS,CACPE,KAAMqX,GACN/W,QAASD,IAEXU,OAAOC,SAASC,QAAO,GA3BE,kDA6BnBL,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAMsX,GACNhX,QAASM,IAnCc,0DAA7B,yDC9BW4W,GAAmC,mCACnCC,GAAmC,mCACnCC,GAAgC,gCAEhCC,GAAqC,qCACrCC,GAAqC,qCACrCC,GAAkC,kCCuBlCC,GACX,SAACd,EAAUpW,EAASyM,GAApB,8CAA6B,WAAOvN,EAAU2G,GAAjB,yBAAA1G,EAAA,sEAEzBD,EAAS,CACPE,KAAM2X,KAHiB,EAQrBlR,IADW/E,EAPU,EAOvBG,UAAaH,SAGTzB,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB6H,cAAc,UAAD,OAAYrG,EAASsG,SAbb,SAiBF7H,IAAMC,KAAN,oCAErB,CAAE4W,WAAUpW,UAASyM,QACrBpN,GApBuB,gBAiBjBI,EAjBiB,EAiBjBA,KAMRP,EAAS,CACPE,KAAM4X,GACNtX,QAASD,IAEXU,OAAOC,SAASC,QAAO,GA3BE,kDA6BnBL,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAM6X,GACNvX,QAASM,IAnCc,0DAA7B,yDC9BWmX,GAAiC,iCACjCC,GAAiC,iCACjCC,GAA8B,8BAE9BC,GAAmC,mCACnCC,GAAmC,mCACnCC,GAAgC,gCCuBhCC,GACX,SAACrB,EAAUpW,EAASyM,GAApB,8CAA6B,WAAOvN,EAAU2G,GAAjB,yBAAA1G,EAAA,sEAEzBD,EAAS,CACPE,KAAMkY,KAHiB,EAQrBzR,IADW/E,EAPU,EAOvBG,UAAaH,SAGTzB,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB6H,cAAc,UAAD,OAAYrG,EAASsG,SAbb,SAiBF7H,IAAMC,KAAN,kCAErB,CAAE4W,WAAUpW,UAASyM,QACrBpN,GApBuB,gBAiBjBI,EAjBiB,EAiBjBA,KAMRP,EAAS,CACPE,KAAMmY,GACN7X,QAASD,IAEXU,OAAOC,SAASC,QAAO,GA3BE,kDA6BnBL,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAMoY,GACN9X,QAASM,IAnCc,0DAA7B,yD,oBCoiBa0X,I,OAviBE,SAAC,GAAiB,IAAf/W,EAAc,EAAdA,QACZzB,EAAW2B,cAEjB,EAA8BmI,mBAAS,IAAvC,oBAAOH,EAAP,KAAgB4B,EAAhB,KACArC,KAAOuP,OAAO,MACd,IAAMC,EAAO,CACX,qFAGF,EAAoC5O,mBAAS,WAA7C,oBAAO6O,EAAP,KAAmBC,EAAnB,KAEMC,EAAkBhX,aAAY,SAACC,GAAD,OAAWA,EAAM+W,mBAE1CC,EAGPD,EAHFtR,QACOwR,EAELF,EAFFrR,MACAwR,EACEH,EADFG,aAGIC,EAAuBpX,aAC3B,SAACC,GAAD,OAAWA,EAAMmX,wBAGRC,EAGPD,EAHF1R,QACO4R,EAELF,EAFFzR,MACA4R,EACEH,EADFG,kBAGIC,EAA0BxX,aAC9B,SAACC,GAAD,OAAWA,EAAMuX,2BAGRC,EAGPD,EAHF9R,QACOgS,EAELF,EAFF7R,MACAgS,EACEH,EADFG,sBAGIC,EAAwB5X,aAC5B,SAACC,GAAD,OAAWA,EAAM2X,yBAGRC,EAGPD,EAHFlS,QACOoS,EAELF,EAFFjS,MACAoS,EACEH,EADFG,oBAGF,EAA4B9P,mBAAS,GAArC,oBAAO+P,EAAP,KAAeC,EAAf,KAGQlY,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SA4BR,SAASqK,EAAQC,GACf,OAAQA,GAAO,IAAMA,EAAIC,OA3B3BhK,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,SACX7B,EAAQS,KAAK,UAHfT,EAAQS,KAAK,QAQjBC,qBAAU,WACRnC,EP9E4B,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,sEAElCD,EAAS,CAAEE,KAAMyW,KAFiB,SAIXtW,IAAMiG,IAAI,qBAJC,gBAI1B/F,EAJ0B,EAI1BA,KAERP,EAAS,CAAEE,KAAM0W,GAA0BpW,QAASD,IACpDE,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUL,IAPlB,kDASlCP,EAAS,CACPE,KAAM2W,GACNrW,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAdoB,0DAAN,yDO+E3B,CAACd,IAEJmC,qBAAU,WACRnC,ELlFiC,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,sEAEvCD,EAAS,CAAEE,KAAMiX,KAFsB,SAIhB9W,IAAMiG,IAAI,0BAJM,gBAI/B/F,EAJ+B,EAI/BA,KAERP,EAAS,CAAEE,KAAMkX,GAA+B5W,QAASD,IACzDE,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUL,IAPlB,kDASvCP,EAAS,CACPE,KAAMmX,GACN7W,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAdyB,0DAAN,yDKmFhC,CAACd,IAEJmC,qBAAU,WACRnC,EHtFqC,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,sEAE3CD,EAAS,CAAEE,KAAMwX,KAF0B,SAIpBrX,IAAMiG,IAAI,8BAJU,gBAInC/F,EAJmC,EAInCA,KAERP,EAAS,CAAEE,KAAMyX,GAAkCnX,QAASD,IAC5DE,aAAaC,QAAQ,wBAAyBC,KAAKC,UAAUL,IAPlB,kDAS3CP,EAAS,CACPE,KAAM0X,GACNpX,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAd6B,0DAAN,yDGuFpC,CAACd,IAEJmC,qBAAU,WACRnC,ED1FmC,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,sEAEzCD,EAAS,CAAEE,KAAM+X,KAFwB,SAIlB5X,IAAMiG,IAAI,4BAJQ,gBAIjC/F,EAJiC,EAIjCA,KAERP,EAAS,CAAEE,KAAMgY,GAAgC1X,QAASD,IAC1DE,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAUL,IAPlB,kDASzCP,EAAS,CACPE,KAAMiY,GACN3X,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAd2B,0DAAN,yDC2FlC,CAACd,IAMJ,IAAM+Z,EAAoB,SAAC5P,GACzBA,EAAEC,iBAEE6B,EAAQtC,EAAQsD,UAEH,IAAX4M,EACF7Z,EAASiX,GAAkB,aAAWtN,EAAS+O,EAAK,KAChC,IAAXmB,EACT7Z,EAASyX,GAAuB,aAAW9N,EAAS+O,EAAK,KACrC,IAAXmB,EACT7Z,EAASgY,GAA0B,aAAWrO,EAAS+O,EAAK,KACxC,IAAXmB,GACT7Z,EAASuY,GAAwB,aAAW5O,EAAS+O,EAAK,KAG5DnN,EAAW,MAITJ,EAAgB,SAAChB,GACrBA,EAAEC,iBAEE6B,EAAQtC,EAAQsD,UAEH,IAAX4M,EACF7Z,EACEiX,GAAkBrV,EAAS/B,KAAM8J,EAAS/H,EAAS2T,iBAEjC,IAAXsE,EACT7Z,EACEyX,GACE7V,EAAS/B,KACT8J,EACA/H,EAAS2T,iBAGO,IAAXsE,EACT7Z,EACEgY,GACEpW,EAAS/B,KACT8J,EACA/H,EAAS2T,iBAGO,IAAXsE,GACT7Z,EACEuY,GACE3W,EAAS/B,KACT8J,EACA/H,EAAS2T,iBAKfhK,EAAW,MAgSf,OACE,eAAC,GAAD,CAAY1H,MAAM,OAAlB,UACE,sBAAKQ,MAAO,CAAEwC,QAAS,OAAQC,eAAgB,UAA/C,UACE,cAACjC,EAAA,EAAD,CACEzC,UAAU,SACV4B,QAAS,SAACmG,GACR2P,EAAU,GACVlB,EAAc,YAJlB,qBASA,cAAC/T,EAAA,EAAD,CACErC,QAAQ,UACRJ,UAAU,SACV4B,QAAS,SAACmG,GACR2P,EAAU,GACVlB,EAAc,iBALlB,uBAUA,cAAC/T,EAAA,EAAD,CACErC,QAAQ,UACRJ,UAAU,SACV4B,QAAS,SAACmG,GACR2P,EAAU,GACVlB,EAAc,aALlB,mBAUA,cAAC/T,EAAA,EAAD,CACErC,QAAQ,UACRJ,UAAU,SACV4B,QAAS,SAACmG,GACR2P,EAAU,GACVlB,EAAc,eALlB,wBAWDG,GAAgBI,GAAcI,GAAkBI,EAC/C,cAAC,GAAD,CAAcnX,QAAQ,SAAtB,SAEI,mFAIJ,sBAAKJ,UAAU,8BAAf,kBAAmDuW,KAErD,qBAAKvW,UAAU,mBAAf,SACE,sBAAKA,UAAU,OAAf,WACI0W,GACAI,GACAQ,GACAJ,IAAqB,cAAC,GAAD,IApVd,IAAXO,EACF,OAAOb,QAAP,IAAOA,OAAP,EAAOA,EACH5Q,MAAK,SAACnI,EAAGoI,GACT,OAAIpI,EAAEqI,UAAYD,EAAEC,WACV,EAENrI,EAAEqI,UAAYD,EAAEC,UACX,EAEF,KAERC,KAAI,SAACzH,GAAD,OACH,sBAAuBuD,MAAO,CAAEwC,QAAS,OAAQyC,OAAQ,QAAzD,UACE,8BACE,cAACgM,GAAA,EAAD,CACEzS,IAAK/B,EAAQyM,KACbxK,MAAM,KACNC,OAAO,KACPqB,MAAO,CAAE2V,aAAc,aAG3B,qBACE3V,MAAK,cACHwC,QAAS,OACTE,WAAY,aACZoB,WAAY,OACZ8R,YAAa,OAJV,aAKS,OANhB,SASE,gCACE,oBACE5V,MAAO,CACLwC,QAAS,OACTE,WAAY,aACZuC,OAAQ,MACR3F,MAAO,UACPD,WAAY,OACZ0D,SAAU,QAPd,UAUGtG,EAAQoW,SACT,sBACE7S,MAAO,CACLV,MAAO,OACPD,WAAY,SACZyE,WAAY,QAJhB,SAOGe,KAAOpI,EAAQwH,WAAW4R,eAG/B,mBACE7V,MAAO,CACLwC,QAAS,OACTE,WAAY,aACZuC,OAAQ,MACR5F,WAAY,OACZyO,gBAAiB,UACjB6H,aAAc,MACdG,YAAa,MACbC,aAAc,OATlB,SAYGtZ,EAAQA,iBApDPA,EAAQsI,QA0DF,IAAXyQ,EACT,OAAOT,QAAP,IAAOA,OAAP,EAAOA,EACHhR,MAAK,SAACnI,EAAGoI,GACT,OAAIpI,EAAEqI,UAAYD,EAAEC,WACV,EAENrI,EAAEqI,UAAYD,EAAEC,UACX,EAEF,KAERC,KAAI,SAACzH,GAAD,OACH,sBAAuBuD,MAAO,CAAEwC,QAAS,OAAQyC,OAAQ,QAAzD,UACE,8BACE,cAACgM,GAAA,EAAD,CACEzS,IAAK/B,EAAQyM,KACbxK,MAAM,KACNC,OAAO,KACPqB,MAAO,CAAE2V,aAAc,aAG3B,qBACE3V,MAAK,cACHwC,QAAS,OACTE,WAAY,aACZoB,WAAY,OACZ8R,YAAa,OAJV,aAKS,OANhB,SASE,gCACE,oBACE5V,MAAO,CACLwC,QAAS,OACTE,WAAY,aACZuC,OAAQ,MACR3F,MAAO,UACPD,WAAY,OACZ0D,SAAU,QAPd,UAUGtG,EAAQoW,SACT,sBACE7S,MAAO,CACLV,MAAO,OACPD,WAAY,SACZyE,WAAY,QAJhB,SAOGe,KAAOpI,EAAQwH,WAAW4R,eAG/B,mBACE7V,MAAO,CACLwC,QAAS,OACTE,WAAY,aACZuC,OAAQ,MACR0Q,aAAc,MACdG,YAAa,MACbC,aAAc,MACd1W,WAAY,OACZyO,gBAAiB,WATrB,SAYGrR,EAAQA,iBApDPA,EAAQsI,QA0DF,IAAXyQ,EACT,OAAOL,QAAP,IAAOA,OAAP,EAAOA,EACHpR,MAAK,SAACnI,EAAGoI,GACT,OAAIpI,EAAEqI,UAAYD,EAAEC,WACV,EAENrI,EAAEqI,UAAYD,EAAEC,UACX,EAEF,KAERC,KAAI,SAACzH,GAAD,OACH,sBAAuBuD,MAAO,CAAEwC,QAAS,OAAQyC,OAAQ,QAAzD,UACE,8BACE,cAACgM,GAAA,EAAD,CACEzS,IAAK/B,EAAQyM,KACbxK,MAAM,KACNC,OAAO,KACPqB,MAAO,CAAE2V,aAAc,aAG3B,qBACE3V,MAAK,cACHwC,QAAS,OACTE,WAAY,aACZoB,WAAY,OACZ8R,YAAa,OAJV,aAKS,OANhB,SASE,gCACE,oBACE5V,MAAO,CACLwC,QAAS,OACTE,WAAY,aACZuC,OAAQ,MACR3F,MAAO,UACPD,WAAY,OACZ0D,SAAU,QAPd,UAUGtG,EAAQoW,SACT,sBACE7S,MAAO,CACLV,MAAO,OACPD,WAAY,SACZyE,WAAY,QAJhB,SAOGe,KAAOpI,EAAQwH,WAAW4R,eAG/B,mBACE7V,MAAO,CACLwC,QAAS,OACTE,WAAY,aACZuC,OAAQ,MACR5F,WAAY,OACZyO,gBAAiB,UACjB6H,aAAc,MACdG,YAAa,MACbC,aAAc,OATlB,SAYGtZ,EAAQA,iBApDPA,EAAQsI,QA0DF,IAAXyQ,EACT,OAAOD,QAAP,IAAOA,OAAP,EAAOA,EACHxR,MAAK,SAACnI,EAAGoI,GACT,OAAIpI,EAAEqI,UAAYD,EAAEC,WACV,EAENrI,EAAEqI,UAAYD,EAAEC,UACX,EAEF,KAERC,KAAI,SAACzH,GAAD,OACH,sBAAuBuD,MAAO,CAAEwC,QAAS,OAAQyC,OAAQ,QAAzD,UACE,8BACE,cAACgM,GAAA,EAAD,CACEzS,IAAK/B,EAAQyM,KACbxK,MAAM,KACNC,OAAO,KACPqB,MAAO,CAAE2V,aAAc,aAG3B,qBACE3V,MAAK,cACHwC,QAAS,OACTE,WAAY,aACZoB,WAAY,OACZ8R,YAAa,OAJV,aAKS,OANhB,SASE,gCACE,oBACE5V,MAAO,CACLwC,QAAS,OACTE,WAAY,aACZuC,OAAQ,MACR3F,MAAO,UACPD,WAAY,OACZ0D,SAAU,QAPd,UAUGtG,EAAQoW,SACT,sBACE7S,MAAO,CACLV,MAAO,OACPD,WAAY,SACZyE,WAAY,QAJhB,SAOGe,KAAOpI,EAAQwH,WAAW4R,eAG/B,mBACE7V,MAAO,CACLwC,QAAS,OACTE,WAAY,aACZuC,OAAQ,MACR5F,WAAY,OACZyO,gBAAiB,UACjB6H,aAAc,MACdG,YAAa,MACbC,aAAc,OATlB,SAYGtZ,EAAQA,iBApDPA,EAAQsI,aAZjB,OAuIL,cAAC,IAAD,CAAO3E,MAAO,CAAEC,SAAU,KAA1B,SACG,SAACC,GAAD,OACCA,EACE,qCACE,cAAC0V,GAAA,EAAD,CAAYjY,UAAU,OAAtB,SACE,cAACkY,GAAA,EAAD,CACE9J,YAAY,eACZ,aAAW,uBACX,mBAAiB,eACjB9F,MAAOf,EACPmE,KAAM,EACNnD,SAAU,SAACR,GAAD,OAAOoB,EAAWpB,EAAES,OAAOF,QACrCrG,MAAO,CAAE8D,WAAY,OAAQ8R,YAAa,YAG9C,sBAAK5V,MAAO,CAAEwC,QAAS,OAAQC,eAAgB,UAA/C,UACE,cAACjC,EAAA,EAAD,CACEf,GAAG,gBACH1B,UAAU,SACV4B,QAASmH,EAHX,oBAOA,cAACtG,EAAA,EAAD,CACEf,GAAG,gBACH1B,UAAU,SACV4B,QAAS+V,EAHX,qCAUJ,eAACM,GAAA,EAAD,CAAYjY,UAAU,OAAtB,UACE,cAACkY,GAAA,EAAD,CACE9J,YAAY,eACZ,aAAW,uBACX,mBAAiB,eACjB9F,MAAOf,EACPmE,KAAM,EACNnD,SAAU,SAACR,GAAD,OAAOoB,EAAWpB,EAAES,OAAOF,QACrCrG,MAAO,CAAE8D,WAAY,OAAQ8R,YAAa,UAE5C,sBAAK5V,MAAO,CAAEwC,QAAS,OAAQC,eAAgB,UAA/C,UACE,cAACjC,EAAA,EAAD,CACEf,GAAG,gBACH1B,UAAU,SACV4B,QAASmH,EAHX,oBAOA,cAACtG,EAAA,EAAD,CACEf,GAAG,gBACH1B,UAAU,SACV4B,QAAS+V,EAHX,6CC7fDQ,GA7CS,SAAC,GAAiB,IAAf9Y,EAAc,EAAdA,QAEjBG,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SACRO,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,SACX7B,EAAQS,KAAK,UAHfT,EAAQS,KAAK,QAmBjB,OACE,cAAC,GAAD,CAAY2B,MAAM,sCAAlB,SACE,eAACpB,EAAA,EAAD,WACE,eAAC+G,GAAA,EAAD,WACE,qBAAKpH,UAAU,WAAf,SACE,mBAAGA,UAAU,qBAAb,SAhBM,WACd,IAAI6Q,EAAM7F,KAAKC,MAAM,EAAAD,KAAKE,SAAyB,GACnD,OAAY,IAAR2F,EACK,4HACU,IAARA,EACF,mEAEA,uJASkCC,OAErC,qBAAK9Q,UAAU,WAAf,SACE,qBAAKS,IAAK+B,GAAM7B,MAAM,MAAMC,OAAO,MAAMC,IAAI,cAGjD,cAACsB,EAAA,EAAD,UACE,cAAC,IAAD,CAAMf,GAAG,cAAT,SACE,cAACqB,EAAA,EAAD,CAAQR,MAAO,CAAEU,OAAQ,QAAzB,iCCQGyV,GA7CI,SAAC,GAAiB,IAAf/Y,EAAc,EAAdA,QAEZG,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SACRO,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,SACX7B,EAAQS,KAAK,UAHfT,EAAQS,KAAK,QAmBjB,OACE,cAAC,GAAD,CAAY2B,MAAM,iCAAlB,SACE,eAACpB,EAAA,EAAD,WACE,eAAC+G,GAAA,EAAD,WACE,qBAAKpH,UAAU,WAAf,SACE,mBAAGA,UAAU,qBAAb,SAhBM,WACd,IAAI6Q,EAAM7F,KAAKC,MAAM,EAAAD,KAAKE,SAAyB,GACnD,OAAY,IAAR2F,EACK,mIACU,IAARA,EACF,+IAEA,+IASkCC,OAErC,qBAAK9Q,UAAU,WAAf,SACE,qBAAKS,IAAK+B,GAAM7B,MAAM,MAAMC,OAAO,MAAMC,IAAI,cAGjD,cAACsB,EAAA,EAAD,UACE,cAAC,IAAD,CAAMf,GAAG,cAAT,SACE,cAACqB,EAAA,EAAD,CAAQR,MAAO,CAAEU,OAAQ,QAAzB,iCCQG0V,GA7CM,SAAC,GAAiB,IAAfhZ,EAAc,EAAdA,QAEdG,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SACRO,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,SACX7B,EAAQS,KAAK,UAHfT,EAAQS,KAAK,QAmBjB,OACE,cAAC,GAAD,CAAY2B,MAAM,8BAAlB,SACE,eAACpB,EAAA,EAAD,WACE,eAAC+G,GAAA,EAAD,WACE,qBAAKpH,UAAU,WAAf,SACE,mBAAGA,UAAU,qBAAb,SAhBM,WACd,IAAI6Q,EAAM7F,KAAKC,MAAM,EAAAD,KAAKE,SAAyB,GACnD,OAAY,IAAR2F,EACK,yCACU,IAARA,EACF,qFAEA,sFASkCC,OAErC,qBAAK9Q,UAAU,WAAf,SACE,qBAAKS,IAAK+B,GAAM7B,MAAM,MAAMC,OAAO,MAAMC,IAAI,cAGjD,cAACsB,EAAA,EAAD,UACE,cAAC,IAAD,CAAMf,GAAG,cAAT,SACE,cAACqB,EAAA,EAAD,CAAQR,MAAO,CAAEU,OAAQ,QAAzB,iCCSG2V,GA9CU,SAAC,GAAiB,IAAfjZ,EAAc,EAAdA,QAElBG,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SACRO,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,SACX7B,EAAQS,KAAK,UAHfT,EAAQS,KAAK,QAmBjB,OACE,cAAC,GAAD,CAAY2B,MAAM,0BAAlB,SACE,eAACpB,EAAA,EAAD,WACE,eAAC+G,GAAA,EAAD,WACE,qBAAKpH,UAAU,WAAf,SACE,mBAAGA,UAAU,qBAAb,SAhBM,WACd,IAAI6Q,EAAM7F,KAAKC,MAAM,EAAAD,KAAKE,SAAyB,GACnD,OAAY,IAAR2F,EACK,mDACU,IAARA,EACF,8EAEA,qHASkCC,OAGrC,qBAAK9Q,UAAU,WAAf,SACE,qBAAKS,IAAK+B,GAAM7B,MAAM,MAAMC,OAAO,MAAMC,IAAI,cAGjD,cAACsB,EAAA,EAAD,UACE,cAAC,IAAD,CAAMf,GAAG,cAAT,SACE,cAACqB,EAAA,EAAD,CAAQR,MAAO,CAAEU,OAAQ,QAAzB,iCC9CC4V,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBAEtBC,GACX,mCACWC,GACX,mCACWC,GAAgC,gCAEhCC,GACX,uCACWC,GACX,uCACWC,GACX,oCAEWC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBC2DtBC,GAA8B,yDAAM,WAAOvb,GAAP,iBAAAC,EAAA,sEAE7CD,EAAS,CAAEE,KAAM4a,KAF4B,SAItBza,IAAMiG,IAAI,oCAJY,gBAIrC/F,EAJqC,EAIrCA,KAERP,EAAS,CAAEE,KAAM6a,GAAkCva,QAASD,IANf,gDAQ7CP,EAAS,CACPE,KAAM8a,GACNxa,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAb+B,yDAAN,uDCuD5B0a,GA3HM,SAAC,GAAiB,IAAf/Z,EAAc,EAAdA,QAChBzB,EAAW2B,cAGTC,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAEF6Z,EAAwB5Z,aAC5B,SAACC,GAAD,OAAWA,EAAM2Z,yBAGRC,EAGPD,EAHFlU,QACOoU,EAELF,EAFFjU,MACAoU,EACEH,EADFG,uBAiBF,OAdAzZ,qBAAU,WACHP,GAGsB,IAArBA,EAAS0B,SACX7B,EAAQS,KAAK,UAHfT,EAAQS,KAAK,QAQjBC,qBAAU,WACRnC,EAASub,QACR,CAACvb,IAGF,cAAC,GAAD,CAAY6D,MAAM,WAAlB,SACE,cAACpB,EAAA,EAAD,UACE,eAAC8B,EAAA,EAAD,WACGoX,GACC,cAAC,GAAD,CAAcnZ,QAAQ,SAAtB,SAEI,gFAILkZ,GAAqB,cAAC,GAAD,IARxB,OASGE,QATH,IASGA,OATH,EASGA,EACGxT,MAAK,SAACnI,EAAGoI,GACT,OAAIpI,EAAE4b,gBAAkBxT,EAAEwT,iBAChB,EAEN5b,EAAE4b,gBAAkBxT,EAAEwT,gBACjB,EAEF,KAERvP,MAAM,EAAG,GACT/D,KAAI,SAACuT,GAAD,OACH,cAACrT,GAAA,EAAD,CAA6BpE,MAAO,CAAEtB,MAAO,QAA7C,SACE,eAAC2F,GAAA,EAAD,CAAMtG,UAAU,kBAAhB,UACE,cAACsG,GAAA,EAAKlH,OAAN,CACEY,UAAU,yBACViC,MAAO,CAAE0X,aAAc,sBAFzB,SAIE,cAACtT,GAAA,EAAUvF,OAAX,CACEmB,MAAO,CACLsE,KAAM,EACNC,OAAQ,UACRC,UAAW,SACXzB,SAAU,GACVP,QAAS,QAEXiC,GAAIJ,KAAKK,KACTvG,QAAQ,OACRwG,SAAS,IAVX,SAYE,qBACE3E,MAAO,CACLwC,QAAS,OACTC,eAAgB,iBAHpB,SAME,qBAAK1E,UAAU,qBAAf,SACG0Z,EAAQjY,cAKjB,cAAC4E,GAAA,EAAUtF,SAAX,CAAoB6F,SAAS,IAA7B,SACE,cAACN,GAAA,EAAKW,KAAN,UACE,cAAC5G,EAAA,EAAD,CACE4B,MAAO,CACLiF,OAAQ,EACR0S,WAAY,EACZ7B,YAAa,GACbC,aAAc,IALlB,SAQE,eAAC7V,EAAA,EAAD,WACE,eAACiF,GAAA,EAAD,CAAK6I,GAAI,EAAT,UACE,cAACiD,GAAA,EAAD,CAAOzS,IAAKiZ,EAAQG,MAAOvZ,OAAK,IAChC,sBAAKN,UAAU,sBAAf,uCAEG8G,KAAO4S,EAAQD,iBAAiB1S,OAAO,KAF1C,UAKF,cAACK,GAAA,EAAD,CAAK6I,GAAI,EAAT,SACE,qBACEjQ,UAAU,qBACViC,MAAO,CAAE+C,SAAU,OAAQ1D,WAAY,QAFzC,SAIGoY,EAAQnS,yBArDTmS,EAAQ1S,QA+DzBQ,kBCuCEsS,GA3JgB,SAAC,GAAiB,IAAfza,EAAc,EAAdA,QAC1BzB,EAAW2B,cACjB,EAA0BmI,mBAAS,IAAnC,oBAAOjG,EAAP,KAAcyH,EAAd,KACA,EAA8BxB,mBAAS,IAAvC,oBAAOH,EAAP,KAAgB4B,EAAhB,KACA,EAA0BzB,mBAAS,IAAnC,oBAAOmS,EAAP,KAAcE,EAAd,KACA,EAA8CrS,mBAAS,IAAvD,oBAAO+R,EAAP,KAAwBO,EAAxB,KACA,EAAoCtS,qBAApC,oBAAO4L,EAAP,KAAmBC,EAAnB,KACA,EAA8B7L,oBAAS,GAAvC,oBAAOvC,EAAP,KAAgBoM,EAAhB,KAGQ/R,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAERO,qBAAU,WACHP,GAGuB,KAAd,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU0B,UACZ7B,EAAQS,KAAK,KAHfT,EAAQS,KAAK,OAMd,CAAClC,EAAUyB,EAASG,IAsDvB,OACE,cAAC,GAAD,CAAYiC,MAAM,WAAlB,SACE,cAACpB,EAAA,EAAD,UACE,cAAC+G,GAAA,EAAD,UACE,eAACd,GAAA,EAAD,CAAMtG,UAAU,gBAAhB,UACE,cAACsG,GAAA,EAAKlH,OAAN,CAAaY,UAAU,sCAAvB,mDAGA,cAACsG,GAAA,EAAKW,KAAN,UACE,eAACY,GAAA,EAAD,CAAMC,SA7DI,SAACC,GACrBA,EAAEC,iBAEU,KAAVvG,GACY,KAAZ8F,GACU,KAAVsS,GACoB,KAApBJ,EAEAlG,EAAc,oCAEd3V,EFzBJ,SAAC6D,EAAO8F,EAASsS,EAAOJ,GAAxB,8CAA4C,WAAO7b,GAAP,mBAAAC,EAAA,sEAExCD,EAAS,CACPE,KAAMya,KAHgC,SAMjBta,IAAMC,KAAN,uBAAmC,CACxDuD,QACA8F,UACAsS,QACAJ,oBAVsC,gBAMhCtb,EANgC,EAMhCA,KAORP,EAAS,CACPE,KAAM0a,GACNpa,QAASD,IAEXU,OAAOC,SAASC,QAAO,GAjBiB,kDAmBlCL,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAM2a,GACNra,QAASM,IAzB6B,0DAA5C,sDE0BMub,CACExY,EAAMoJ,OACNtD,EAAQsD,OACRgP,EACA/S,KAAO2S,GAAiBS,IAAI,EAAG,UAGnC7a,EAAQS,KAAK,4BA2CL,UACGwT,GACC,cAAC,GAAD,CAAclT,QAAQ,SAAtB,SAEI,4GAIN,eAACyH,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,uBACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAO7G,EACP8G,SAAU,SAACR,GAAD,OAAOmB,EAASnB,EAAES,OAAOF,QACnCwK,aAAa,WAGjB,eAACjL,GAAA,EAAKK,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,uBACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAOf,EACPgB,SAAU,SAACR,GAAD,OAAOoB,EAAWpB,EAAES,OAAOF,QACrCwK,aAAa,WAGjB,eAACjL,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,qCAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAOmR,EACPlR,SAAU,SAACR,GAAD,OAAOiS,EAAmBjS,EAAES,OAAOF,QAC7CwK,aAAa,WAGjB,eAACjL,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,oBACA,cAAC6H,GAAA,EAAK4L,KAAN,CACElL,SAAU,SAACR,GAAD,OA/ER,SAAC2L,GAGnB,GAFAH,EAAc,MACdhC,GAAW,GACO,eAAdmC,EAAK5V,MAAuC,cAAd4V,EAAK5V,KAuBrC,OAAOyV,EAAc,oCAtBrB,IAAMpV,EAAO,IAAIsT,SACjBtT,EAAKuT,OAAO,OAAQgC,GACpBvV,EAAKuT,OAAO,gBAAiB,cAC7BvT,EAAKuT,OAAO,aAAc,cAC1BC,MAAM,0DAA2D,CAC/DC,OAAQ,OACRC,KAAM1T,IAELuU,MAAK,SAACZ,GAAD,OAASA,EAAIC,UAClBW,MAAK,SAACvU,GACL4b,EAAS5b,EAAKwV,IAAIC,YAClB1B,QAAQC,IAAI4H,GACZxI,GAAW,GACXgC,EAAc,6BAEfM,OAAM,SAACC,GACN5B,QAAQC,IAAI2B,GACZP,EACE,wEAyDyBQ,CAAYhM,EAAES,OAAOuK,MAAM,KAC5CrR,GAAG,cACH5D,KAAK,YACLgS,MAAM,mCACNkE,QAAM,OAGT7O,EACC,qCACE,qBAAKnF,UAAU,sBAAf,+CAGA,cAAC,GAAD,CAAS0C,KAAM,QAGjB,cAACD,EAAA,EAAD,CACErC,QAAQ,UACRtC,KAAK,SACLkC,UAAU,kBAHZ,0CCNHma,GAjIe,SAAC,GAAiB,IAAf9a,EAAc,EAAdA,QACzBzB,EAAW2B,cAEX8Z,EAAwB5Z,aAC5B,SAACC,GAAD,OAAWA,EAAM2Z,yBAGRC,EAGPD,EAHFlU,QACOoU,EAELF,EAFFjU,MACAoU,EACEH,EADFG,uBAEIY,EAA2B3a,aAC/B,SAACC,GAAD,OAAWA,EAAM0a,4BAGRC,EAGPD,EAHFjV,QACOmV,EAELF,EAFFhV,MACAmV,EACEH,EADFG,0BAIM/a,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAoBR,OAlBAO,qBAAU,WACHP,GAGuB,KAAd,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU0B,UACZ7B,EAAQS,KAAK,KAHfT,EAAQS,KAAK,OAMd,CAAClC,EAAUyB,EAASG,IAEvBO,qBAAU,WACRnC,EAASub,QACR,CAACvb,IAEJmC,qBAAU,WACRnC,EH6C0C,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,sEAEhDD,EAAS,CAAEE,KAAM+a,KAF+B,SAIzB5a,IAAMiG,IAAI,uCAJe,gBAIxC/F,EAJwC,EAIxCA,KAERP,EAAS,CAAEE,KAAMgb,GAAsC1a,QAASD,IANhB,gDAQhDP,EAAS,CACPE,KAAMib,GACN3a,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAbkC,yDAAN,yDG5CzC,CAACd,IAGF,cAAC,GAAD,CAAY6D,MAAM,WAAlB,SACE,cAACpB,EAAA,EAAD,CAAWL,UAAU,kBAArB,SACE,eAACmC,EAAA,EAAD,WACE,eAACiF,GAAA,EAAD,CAAK6I,GAAI,EAAT,UACE,cAAC9N,EAAA,EAAD,UACE,qBAAKnC,UAAU,qBAAf,+CAIDsa,GACC,cAAC,GAAD,CAAcla,QAAQ,SAAtB,SACG,oEAGJia,GAAwB,cAAC,GAAD,CAAS3X,KAAM,MAX1C,OAYG6X,QAZH,IAYGA,OAZH,EAYGA,EACGvU,MAAK,SAACnI,EAAGoI,GACT,OAAIpI,EAAE4b,gBAAkBxT,EAAEwT,iBAChB,EAEN5b,EAAE4b,gBAAkBxT,EAAEwT,gBACjB,EAEF,KAERtT,KAAI,SAACuT,GAAD,OACH,eAACvX,EAAA,EAAD,CAAKnC,UAAU,iBAAf,UACE,cAACoH,GAAA,EAAD,CAAKpH,UAAU,aAAf,SAA6B0Z,EAAQjY,MAAMyI,MAAM,EAAG,MACpD,cAAC9C,GAAA,EAAD,CAAKpH,UAAU,aAAf,SACG8G,KAAO4S,EAAQD,iBAAiB1S,OAAO,QAE1C,cAACK,GAAA,EAAD,UACE,cAAC3E,EAAA,EAAD,CACEzC,UAAU,kBACVQ,KAAI,gCAA2BkZ,EAAQ1S,KAFzC,+BAUV,eAACI,GAAA,EAAD,CAAK6I,GAAI,EAAT,UACE,cAAC9N,EAAA,EAAD,UACE,qBAAKnC,UAAU,qBAAf,4CAIDuZ,GACC,cAAC,GAAD,CAAcnZ,QAAQ,SAAtB,SACG,oEAGJkZ,GAAqB,cAAC,GAAD,CAAS5W,KAAM,MAXvC,OAYG8W,QAZH,IAYGA,OAZH,EAYGA,EACGxT,MAAK,SAACnI,EAAGoI,GACT,OAAIpI,EAAE4b,gBAAkBxT,EAAEwT,iBAChB,EAEN5b,EAAE4b,gBAAkBxT,EAAEwT,gBACjB,EAEF,KAERtT,KAAI,SAACuT,GAAD,OACH,eAACvX,EAAA,EAAD,CAAKnC,UAAU,iBAAf,UACE,cAACoH,GAAA,EAAD,CAAKpH,UAAU,aAAf,SAA6B0Z,EAAQjY,MAAMyI,MAAM,EAAG,MACpD,cAAC9C,GAAA,EAAD,CAAKpH,UAAU,aAAf,SACG8G,KAAO4S,EAAQD,iBAAiB1S,OAAO,QAE1C,cAACK,GAAA,EAAD,UACE,cAAC3E,EAAA,EAAD,CACEzC,UAAU,kBACVQ,KAAI,gCAA2BkZ,EAAQ1S,KAFzC,uCCoCLwT,GAxJc,SAAC,GAAwB,IAAtB5O,EAAqB,EAArBA,MAAOvM,EAAc,EAAdA,QAC/BzB,EAAW2B,cACjB,EAA0BmI,mBAAS,IAAnC,oBAAOjG,EAAP,KAAcyH,EAAd,KACA,EAA8BxB,mBAAS,IAAvC,oBAAOH,EAAP,KAAgB4B,EAAhB,KACA,EAA0BzB,mBAAS,IAAnC,oBAAOmS,EAAP,KAAcE,EAAd,KACA,EAA8CrS,mBAAS,IAAvD,oBAAO+R,EAAP,KAAwBO,EAAxB,KACA,EAAoCtS,qBAApC,oBAAO4L,EAAP,KAAmBC,EAAnB,KAGQ/T,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAERO,qBAAU,WACHP,GAGuB,KAAd,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU0B,UACZ7B,EAAQS,KAAK,KAHfT,EAAQS,KAAK,OAMd,CAAClC,EAAUyB,EAASG,IAEvBO,qBAAU,WACR,IAAMgM,EAAQ,uCAAG,8BAAAlO,EAAA,sEACQI,IAAMiG,IAAN,6BAAgC0H,EAAMI,OAAOtK,KADrD,gBACPvD,EADO,EACPA,KAER+K,EAAS/K,EAAKsD,OACd0H,EAAWhL,EAAKoJ,SAChBwS,EAAS5b,EAAK0b,OACdG,EAAmB7b,EAAKsb,iBANT,2CAAH,qDAQd1N,MACC,CAACH,EAAMI,OAAOtK,KAqDjB,OACE,cAAC,GAAD,CAAYD,MAAM,WAAlB,SACE,cAACpB,EAAA,EAAD,UACE,cAAC+G,GAAA,EAAD,UACE,eAACd,GAAA,EAAD,CAAMtG,UAAU,gBAAhB,UACE,cAACsG,GAAA,EAAKlH,OAAN,CAAaY,UAAU,sCAAvB,mDAGA,cAACsG,GAAA,EAAKW,KAAN,UACE,eAACY,GAAA,EAAD,CAAMC,SA5DI,SAACC,GACrBA,EAAEC,iBAEU,KAAVvG,GACY,KAAZ8F,GACU,KAAVsS,GACoB,KAApBJ,EAEAlG,EAAc,oCAEd3V,EJLJ,SAAC8D,EAAID,EAAO8F,EAASsS,EAAOJ,GAA5B,8CAAgD,WAAO7b,GAAP,mBAAAC,EAAA,sEAE5CD,EAAS,CACPE,KAAMkb,KAHoC,SAMrB/a,IAAMgO,IAAN,6BAAgCvK,GAAM,CAC3DD,QACA8F,UACAsS,QACAJ,oBAV0C,gBAMpCtb,EANoC,EAMpCA,KAORP,EAAS,CACPE,KAAMmb,GACN7a,QAASD,IAEXU,OAAOC,SAASC,QAAO,GAjBqB,kDAmBtCL,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAMob,GACN9a,QAASM,IAzBiC,0DAAhD,sDIMM+b,CACE7O,EAAMI,OAAOtK,GACbD,EACA8F,EACAsS,EACA/S,KAAO2S,GAAiBS,IAAI,EAAG,UAGnC7a,EAAQS,KAAK,4BAyCL,UACGwT,GACC,cAAC,GAAD,CAAclT,QAAQ,SAAtB,SAAgCkT,IAElC,eAACzL,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,uBACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAO7G,EACP8G,SAAU,SAACR,GAAD,OAAOmB,EAASnB,EAAES,OAAOF,QACnCwK,aAAa,WAGjB,eAACjL,GAAA,EAAKK,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,uBACA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAOf,EACPgB,SAAU,SAACR,GAAD,OAAOoB,EAAWpB,EAAES,OAAOF,QACrCwK,aAAa,WAGjB,eAACjL,GAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,qCAGA,cAAC6H,GAAA,EAAKQ,QAAN,CACEvK,KAAK,OACLwK,MAAOmR,EACPlR,SAAU,SAACR,GAAD,OAAOiS,EAAmBjS,EAAES,OAAOF,QAC7CwK,aAAa,WAGjB,eAACjL,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,GAAA,EAAKO,MAAN,CAAYpI,UAAU,aAAtB,oBACA,cAAC6H,GAAA,EAAK4L,KAAN,CACElL,SAAU,SAACR,GAAD,OAzER,SAAC2L,GAEnB,GADAH,EAAc,MACI,eAAdG,EAAK5V,MAAuC,cAAd4V,EAAK5V,KAsBrC,OAAOyV,EAAc,oCArBrB,IAAMpV,EAAO,IAAIsT,SACjBtT,EAAKuT,OAAO,OAAQgC,GACpBvV,EAAKuT,OAAO,gBAAiB,cAC7BvT,EAAKuT,OAAO,aAAc,cAC1BC,MAAM,0DAA2D,CAC/DC,OAAQ,OACRC,KAAM1T,IAELuU,MAAK,SAACZ,GAAD,OAASA,EAAIC,UAClBW,MAAK,SAACvU,GACL4b,EAAS5b,EAAKwV,IAAIC,YAClB1B,QAAQC,IAAI4H,GACZxG,EAAc,6BAEfM,OAAM,SAACC,GACN5B,QAAQC,IAAI2B,GACZP,EACE,wEAqDyBQ,CAAYhM,EAAES,OAAOuK,MAAM,KAC5CrR,GAAG,cACH5D,KAAK,YACLgS,MAAM,mCACNkE,QAAM,OAGV,cAACvR,EAAA,EAAD,CACErC,QAAQ,UACRtC,KAAK,SACLkC,UAAU,kBAHZ,2CClJD,OAA0B,2CCA1B,OAA0B,0CCA1B,OAA0B,iCC6J1B0a,GApJK,SAAC,GAAiB,IAAfrb,EAAc,EAAdA,QAEbG,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAQR,OANAO,qBAAU,WACHP,GACHH,EAAQS,KAAK,QAKf,cAAC,GAAD,CAAY2B,MAAM,mBAAlB,SACE,eAACpB,EAAA,EAAD,CAAWL,UAAU,mBAArB,UACE,eAACmC,EAAA,EAAD,CAAKF,MAAO,CAAEmQ,UAAW,OAAQwH,WAAY,QAA7C,UACE,cAACxS,GAAA,EAAD,CAAK6I,GAAI,EAAT,SACE,cAACiD,GAAA,EAAD,CACEzS,IAAKka,GACLha,MAAM,OACNE,IAAI,GACJ+Z,WAAS,EACT3Y,MAAO,CAAEU,OAAQ,qBAGrB,eAACyE,GAAA,EAAD,WACE,qBAAKpH,UAAU,WAAf,SACE,qBACEA,UAAU,8BACViC,MAAO,CAAEtB,MAAO,OAAQqE,SAAU,QAFpC,+BAOF,8BACE,mBACEhF,UAAU,WACViC,MAAO,CAAE+C,SAAU,OAAQ6V,UAAW,UAFxC,4UAaN,eAAC1Y,EAAA,EAAD,CAAKF,MAAO,CAAEmQ,UAAW,OAAQwH,WAAY,QAA7C,UACE,cAACxS,GAAA,EAAD,CAAK6I,GAAI,EAAT,SACE,cAACiD,GAAA,EAAD,CACEzS,IAAKqa,GACLna,MAAM,OACNE,IAAI,GACJ+Z,WAAS,EACT3Y,MAAO,CAAEU,OAAQ,qBAGrB,eAACyE,GAAA,EAAD,WACE,qBAAKpH,UAAU,WAAf,SACE,qBACEA,UAAU,8BACViC,MAAO,CAAEtB,MAAO,OAAQqE,SAAU,QAFpC,0CAOF,8BACE,mBACEhF,UAAU,WACViC,MAAO,CAAE+C,SAAU,OAAQ6V,UAAW,UAFxC,+QAYN,eAAC1Y,EAAA,EAAD,CAAKF,MAAO,CAAEmQ,UAAW,OAAQwH,WAAY,QAA7C,UACE,cAACxS,GAAA,EAAD,CAAK6I,GAAI,EAAT,SACE,cAACiD,GAAA,EAAD,CACEzS,IAAKsa,GACLpa,MAAM,OACNE,IAAI,GACJ+Z,WAAS,EACT3Y,MAAO,CAAEU,OAAQ,qBAGrB,eAACyE,GAAA,EAAD,WACE,qBAAKpH,UAAU,WAAf,SACE,qBACEA,UAAU,8BACViC,MAAO,CAAEtB,MAAO,OAAQqE,SAAU,QAFpC,oBAOF,8BACE,mBACEhF,UAAU,WACViC,MAAO,CAAE+C,SAAU,OAAQ6V,UAAW,UAFxC,+RAaN,eAAC1Y,EAAA,EAAD,CAAKF,MAAO,CAAEmQ,UAAW,OAAQwH,WAAY,QAA7C,UACE,cAACxS,GAAA,EAAD,CAAK6I,GAAI,EAAT,SACE,cAACiD,GAAA,EAAD,CACEzS,IAAKsa,GACLpa,MAAM,OACNE,IAAI,GACJ+Z,WAAS,EACT3Y,MAAO,CAAEU,OAAQ,qBAGrB,eAACyE,GAAA,EAAD,WACE,qBAAKpH,UAAU,WAAf,SACE,qBACEA,UAAU,8BACViC,MAAO,CAAEtB,MAAO,OAAQqE,SAAU,QAFpC,wBAOF,8BACE,mBACEhF,UAAU,WACViC,MAAO,CAAE+C,SAAU,OAAQ6V,UAAW,UAFxC,qOCxCCG,GA7DH,kBACV,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW9Y,GAAa+Y,OAAK,IAC7C,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWzT,GAAW0T,OAAK,IAChD,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWzS,GAAc0S,OAAK,IACtD,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWjW,GAAQkW,OAAK,IAC9C,cAAC,IAAD,CAAOF,KAAK,gBAAgBC,UAAWjS,GAAiBkS,OAAK,IAC7D,cAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWvP,GAAiBwP,OAAK,IAC3D,cAAC,IAAD,CAAOF,KAAK,kBAAkBC,UAAW/O,GAAiBgP,OAAK,IAC/D,cAAC,IAAD,CAAOF,KAAK,cAAcC,UAAW5M,GAAe6M,OAAK,IACzD,cAAC,IAAD,CAAOF,KAAK,gBAAgBC,UAAWlM,GAAcmM,OAAK,IAC1D,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWlK,GAAUmK,OAAK,IAC/C,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWlI,GAAamI,OAAK,IACnD,cAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAW9H,GAAmB+H,OAAK,IAElE,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWhH,GAAWiH,OAAK,IAChD,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAW7G,GAAqB8G,OAAK,IAC9D,cAAC,IAAD,CAAOF,KAAK,QAAQC,UAAW9E,GAAU+E,OAAK,IAC9C,cAAC,IAAD,CACEF,KAAK,uBACLC,UAAWpB,GACXqB,OAAK,IAEP,cAAC,IAAD,CACEF,KAAK,yBACLC,UAAWf,GACXgB,OAAK,IAEP,cAAC,IAAD,CACEF,KAAK,4BACLC,UAAWV,GACXW,OAAK,IAGP,cAAC,IAAD,CACEF,KAAK,6BACLC,UAAWvK,GACXwK,OAAK,IAGP,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAW9B,GAAc+B,OAAK,IAEtD,cAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAW5G,GAAa6G,OAAK,IAE5D,cAAC,IAAD,CAAOF,KAAK,iBAAiBC,UAAWtK,GAAkBuK,OAAK,IAC/D,cAAC,IAAD,CAAOF,KAAK,oBAAoBC,UAAW/C,KAC3C,cAAC,IAAD,CAAO8C,KAAK,kBAAkBC,UAAW9C,KACzC,cAAC,IAAD,CAAO6C,KAAK,iBAAiBC,UAAW7C,KACxC,cAAC,IAAD,CAAO4C,KAAK,qBAAqBC,UAAW5C,KAE5C,cAAC,IAAD,CAAO2C,KAAK,qBAAqBC,UAAWE,KAE5C,cAAC,IAAD,CAAOH,KAAK,IAAIC,UAAWnK,cClFpBsK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7I,MAAK,YAAkD,IAA/C8I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,6BCyCRO,GAAUC,2BAAgB,CAC9Bnc,UCrB8B,WAAyB,IAAxBD,EAAuB,uDAAf,GAAIqc,EAAW,uCACtD,OAAQA,EAAOje,MACb,KAAK/B,EACH,MAAO,CAAEoJ,SAAS,GACpB,KAAKnJ,EACH,MAAO,CAAEmJ,SAAS,EAAO3F,SAAUuc,EAAO3d,SAC5C,KAAKnC,EACH,MAAO,CAAEkJ,SAAS,EAAOC,MAAO2W,EAAO3d,SACzC,KAAKlC,EACH,MAAO,GACT,QACE,OAAOwD,IDWXoJ,aCPiC,WAAyB,IAAxBpJ,EAAuB,uDAAf,GAAIqc,EAAW,uCACzD,OAAQA,EAAOje,MACb,KAAK3B,EACH,MAAO,CAAEgJ,SAAS,GACpB,KAAK/I,EACH,MAAO,CAAE+I,SAAS,EAAO3F,SAAUuc,EAAO3d,SAC5C,KAAK/B,EACH,MAAO,CAAE8I,SAAS,EAAOC,MAAO2W,EAAO3d,SACzC,QACE,OAAOsB,IDDXwF,UE3B8B,WAAsC,IAArCxF,EAAoC,uDAA5B,CAAE2F,QAAS,IAAM0W,EAAW,uCACnE,OAAQA,EAAOje,MACb,KAAK8E,GACH,MAAO,CAAEuC,SAAS,GACpB,KAAKtC,GACH,MAAO,CAAEsC,SAAS,EAAOE,QAAS0W,EAAO3d,SAC3C,KAAK0E,GACH,MAAO,CAAEqC,SAAS,EAAOC,MAAO2W,EAAO3d,SAEzC,QACE,OAAOsB,IFkBX6F,YEdgC,WAAyB,IAAxB7F,EAAuB,uDAAf,GAAIqc,EAAW,uCACxD,OAAQA,EAAOje,MACb,KAAKiF,GACH,MAAO,CAAEoC,SAAS,GACpB,KAAKnC,GACH,MAAO,CAAEmC,SAAS,EAAOK,SAAS,GACpC,KAAKvC,GACH,MAAO,CAAEkC,SAAS,EAAOC,MAAO2W,EAAO3d,SAEzC,QACE,OAAOsB,IFKXgG,YEDgC,WAAyB,IAAxBhG,EAAuB,uDAAf,GAAIqc,EAAW,uCACxD,OAAQA,EAAOje,MACb,KAAKoF,GACH,MAAO,CAAEiC,SAAS,GACpB,KAAKhC,GACH,MAAO,CAAEgC,SAAS,EAAOK,SAAS,GACpC,KAAKpC,GACH,MAAO,CAAE+B,SAAS,EAAOC,MAAO2W,EAAO3d,QAASoH,SAAS,GAE3D,QACE,OAAO9F,IFRX4J,QGhD4B,WAAmC,IAAlC5J,EAAiC,uDAAzB,CAAE2H,KAAM,IAAM0U,EAAW,uCAC9D,OAAQA,EAAOje,MACb,KAAKgG,GACH,MAAO,CAAEqB,SAAS,GACpB,KAAKpB,GACH,MAAO,CAAEoB,SAAS,EAAOkC,KAAM0U,EAAO3d,SACxC,KAAK4F,GACH,MAAO,CAAEmB,SAAS,EAAOC,MAAO2W,EAAO3d,SACzC,QACE,OAAOsB,IHwCX8J,YIjDgC,WAAkC,IAAjC9J,EAAgC,uDAAxB,CAACgK,SAAS,IAAIqS,EAAU,uCAC/D,OAAQA,EAAOje,MAEX,KAAKqG,GACD,MAAO,CAAEgB,SAAS,GACtB,KAAKf,GACD,MAAO,CAAEe,SAAS,EAAOuE,SAAUqS,EAAO3d,SAC9C,KAAKiG,GACD,MAAO,CAAEc,SAAS,EAAOC,MAAO2W,EAAO3d,SAE3C,QACI,OAAOsB,IJuCjB+W,gBK/CgC,WAA2C,IAA1C/W,EAAyC,uDAAjC,CAAEkX,aAAc,IAAMmF,EAAW,uCACxE,OAAQA,EAAOje,MACb,KAAKyW,GACH,MAAO,CAAEpP,SAAS,GACpB,KAAKqP,GACH,MAAO,CAAErP,SAAS,EAAOyR,aAAcmF,EAAO3d,SAChD,KAAKqW,GACH,MAAO,CAAEtP,SAAS,EAAOC,MAAO2W,EAAO3d,SAEzC,QACE,OAAOsB,ILsCbmX,qBMhDqC,WAAgD,IAA/CnX,EAA8C,uDAAtC,CAAEsX,kBAAmB,IAAM+E,EAAW,uCAClF,OAAQA,EAAOje,MACb,KAAKiX,GACH,MAAO,CAAE5P,SAAS,GACpB,KAAK6P,GACH,MAAO,CAAE7P,SAAS,EAAO6R,kBAAmB+E,EAAO3d,SACrD,KAAK6W,GACH,MAAO,CAAE9P,SAAS,EAAOC,MAAO2W,EAAO3d,SAEzC,QACE,OAAOsB,INuCbuX,wBOjDwC,WAAoD,IAAnDvX,EAAkD,uDAA1C,CAAE0X,sBAAuB,IAAM2E,EAAW,uCACzF,OAAQA,EAAOje,MACb,KAAKwX,GACH,MAAO,CAAEnQ,SAAS,GACpB,KAAKoQ,GACH,MAAO,CAAEpQ,SAAS,EAAOiS,sBAAuB2E,EAAO3d,SACzD,KAAKoX,GACH,MAAO,CAAErQ,SAAS,EAAOC,MAAO2W,EAAO3d,SAEzC,QACE,OAAOsB,IPwCb2X,sBQlDsC,WAAkD,IAAjD3X,EAAgD,uDAAxC,CAAE8X,oBAAqB,IAAMuE,EAAW,uCACrF,OAAQA,EAAOje,MACb,KAAK+X,GACH,MAAO,CAAE1Q,SAAS,GACpB,KAAK2Q,GACH,MAAO,CAAE3Q,SAAS,EAAOqS,oBAAqBuE,EAAO3d,SACvD,KAAK2X,GACH,MAAO,CAAE5Q,SAAS,EAAOC,MAAO2W,EAAO3d,SAEzC,QACE,OAAOsB,IRyCbsc,kBKrCwC,WAAyB,IAAxBtc,EAAuB,uDAAf,GAAIqc,EAAW,uCAC9D,OAAQA,EAAOje,MACb,KAAK4W,GACH,MAAO,CAAEvP,SAAS,GACpB,KAAKwP,GACH,MAAO,CAAExP,SAAS,EAAOK,SAAS,GACpC,KAAKoP,GACH,MAAO,CAAEzP,SAAS,EAAOC,MAAO2W,EAAO3d,SAEzC,QACE,OAAOsB,IL4Bbuc,uBMtC6C,WAAyB,IAAxBvc,EAAuB,uDAAf,GAAIqc,EAAW,uCACnE,OAAQA,EAAOje,MACb,KAAKoX,GACH,MAAO,CAAE/P,SAAS,GACpB,KAAKgQ,GACH,MAAO,CAAEhQ,SAAS,EAAOK,SAAS,GACpC,KAAK4P,GACH,MAAO,CAAEjQ,SAAS,EAAOC,MAAO2W,EAAO3d,SAEzC,QACE,OAAOsB,IN6Bbwc,0BOvCgD,WAAyB,IAAxBxc,EAAuB,uDAAf,GAAIqc,EAAW,uCACtE,OAAQA,EAAOje,MACb,KAAK2X,GACH,MAAO,CAAEtQ,SAAS,GACpB,KAAKuQ,GACH,MAAO,CAAEvQ,SAAS,EAAOK,SAAS,GACpC,KAAKmQ,GACH,MAAO,CAAExQ,SAAS,EAAOC,MAAO2W,EAAO3d,SAEzC,QACE,OAAOsB,IP8Bbyc,wBQxC8C,WAAyB,IAAxBzc,EAAuB,uDAAf,GAAIqc,EAAW,uCACpE,OAAQA,EAAOje,MACb,KAAKkY,GACH,MAAO,CAAE7Q,SAAS,GACpB,KAAK8Q,GACH,MAAO,CAAE9Q,SAAS,EAAOK,SAAS,GACpC,KAAK0Q,GACH,MAAO,CAAE/Q,SAAS,EAAOC,MAAO2W,EAAO3d,SAEzC,QACE,OAAOsB,IRgCb8T,WCT+B,WAAyB,IAAxB9T,EAAuB,uDAAf,GAAIqc,EAAW,uCACvD,OAAQA,EAAOje,MACb,KAAKxB,EACH,MAAO,CAAE6I,SAAS,GACpB,KAAK5I,EACH,MAAO,CAAE4I,SAAS,EAAO3F,SAAUuc,EAAO3d,QAASoH,SAAS,GAC9D,KAAKhJ,EACH,MAAO,CAAE2I,SAAS,EAAOC,MAAO2W,EAAO3d,QAASoH,SAAS,GAC3D,QACE,OAAO9F,IDCX0c,aCGiC,WAAyB,IAAxB1c,EAAuB,uDAAf,GAAIqc,EAAW,uCACzD,OAAQA,EAAOje,MACb,KAAKrB,EACH,MAAO,CAAE0I,SAAS,GACpB,KAAKzI,EACH,MAAO,CAAEyI,SAAS,EAAO3F,SAAUuc,EAAO3d,QAASoH,SAAS,GAC9D,KAAK7I,EACH,MAAO,CAAEwI,SAAS,EAAOC,MAAO2W,EAAO3d,QAASoH,SAAS,GAC3D,QACE,OAAO9F,IDXX2c,eCemC,WAAyB,IAAxB3c,EAAuB,uDAAf,GAAIqc,EAAW,uCAC3D,OAAQA,EAAOje,MACb,KAAKlB,EACH,MAAO,CAAEuI,SAAS,GACpB,KAAKtI,EACH,MAAO,CAAEsI,SAAS,EAAO3F,SAAUuc,EAAO3d,QAASoH,SAAS,GAC9D,KAAK1I,EACH,MAAO,CAAEqI,SAAS,EAAOC,MAAO2W,EAAO3d,QAASoH,SAAS,GAC3D,QACE,OAAO9F,IDvBX4c,YC2BgC,WAAyB,IAAxB5c,EAAuB,uDAAf,GAAIqc,EAAW,uCACxD,OAAQA,EAAOje,MACb,KAAKf,EACH,MAAO,CAAEoI,SAAS,GACpB,KAAKnI,EACH,MAAO,CAAEmI,SAAS,EAAO3F,SAAUuc,EAAO3d,QAASoH,SAAS,GAC9D,KAAKvI,EACH,MAAO,CAAEkI,SAAS,EAAOC,MAAO2W,EAAO3d,QAASoH,SAAS,GAC3D,QACE,OAAO9F,IDnCXuP,MES6B,WAAyB,IAAxBvP,EAAuB,uDAAf,GAAIqc,EAAW,uCACrD,OAAQA,EAAOje,MACb,KAAKuF,GACH,MAAO,CAAE8B,SAAS,GACpB,KAAK7B,GACH,MAAO,CAAE6B,SAAS,EAAOhH,KAAM4d,EAAO3d,SACxC,KAAKmF,GACH,MAAO,CAAE4B,SAAS,EAAOC,MAAO2W,EAAO3d,SAEzC,QACE,OAAOsB,IFlBX0P,WEsBkC,WAAyB,IAAxB1P,EAAuB,uDAAf,GAAIqc,EAAW,uCAC1D,OAAQA,EAAOje,MACb,KAAK0F,GACH,MAAO,CAAE2B,SAAS,GACpB,KAAK1B,GACH,MAAO,CAAE0B,SAAS,EAAOhH,KAAM4d,EAAO3d,SACxC,KAAKsF,GACH,MAAO,CAAEyB,SAAS,EAAOC,MAAO2W,EAAO3d,SAEzC,QACE,OAAOsB,IF/BX6c,SEmCgC,WAAyB,IAAxB7c,EAAuB,uDAAf,GAAIqc,EAAW,uCACxD,OAAQA,EAAOje,MACb,KAAK6F,GACH,MAAO,CAAEwB,SAAS,GACpB,KAAKvB,GACH,MAAO,CAAEuB,SAAS,EAAOhH,KAAM4d,EAAO3d,SACxC,KAAKyF,GACH,MAAO,CAAEsB,SAAS,EAAOC,MAAO2W,EAAO3d,SAEzC,QACE,OAAOsB,IF5CXkG,UCoC8B,WAAyB,IAAxBlG,EAAuB,uDAAf,GAAIqc,EAAW,uCACtD,OAAQA,EAAOje,MACb,KAAKZ,EACH,MAAO,CAAEiI,SAAS,GACpB,KAAKhI,EACH,MAAO,CAAEgI,SAAS,EAAO3F,SAAUuc,EAAO3d,QAASuH,cAAc,GACnE,KAAKvI,EACH,MAAO,CAAE+H,SAAS,EAAOC,MAAO2W,EAAO3d,QAASuH,cAAc,GAChE,QACE,OAAOjG,ID5CXyU,YCgD6B,WAAyB,IAAxBzU,EAAuB,uDAAf,GAAIqc,EAAW,uCACrD,OAAQA,EAAOje,MACb,KAAKT,EACH,MAAO,CAAE8H,SAAS,GACpB,KAAK7H,EACH,MAAO,CAAE6H,SAAS,EAAOiP,UAAW2H,EAAO3d,SAC7C,KAAKb,EACH,MAAO,CAAE4H,SAAS,EAAOC,MAAO2W,EAAO3d,SACzC,QACE,OAAOsB,IDxDX8c,iBC4DqC,WAAyB,IAAxB9c,EAAuB,uDAAf,GAAIqc,EAAW,uCAC7D,OAAQA,EAAOje,MACb,KAAKT,EACH,MAAO,CAAE8H,SAAS,GACpB,KAAK7H,EACH,MAAO,CAAE6H,SAAS,EAAOK,SAAS,GACpC,KAAKjI,EACH,MAAO,CAAE4H,SAAS,EAAOC,MAAO2W,EAAO3d,QAASoH,SAAS,GAC3D,QACE,OAAO9F,IDpEX+c,cS5DkC,WAAyB,IAAxB/c,EAAuB,uDAAf,GAAIqc,EAAW,uCAC1D,OAAQA,EAAOje,MACb,KAAKya,GACH,MAAO,CAAEpT,SAAS,GACpB,KAAKqT,GACH,MAAO,CAAErT,SAAS,EAAOK,SAAS,GACpC,KAAKiT,GACH,MAAO,CAAEtT,SAAS,EAAOC,MAAO2W,EAAO3d,SACzC,QACE,OAAOsB,IToDX2Z,sBSlC2C,WAAyB,IAAxB3Z,EAAuB,uDAAf,GAAIqc,EAAW,uCACnE,OAAQA,EAAOje,MACb,KAAK4a,GACH,MAAO,CAAEvT,SAAS,GACpB,KAAKwT,GACH,MAAO,CAAExT,SAAS,EAAOqU,uBAAwBuC,EAAO3d,SAC1D,KAAKwa,GACH,MAAO,CAAEzT,SAAS,EAAOC,MAAO2W,EAAO3d,SACzC,QACE,OAAOsB,IT0BX0a,yBStB8C,WAAyB,IAAxB1a,EAAuB,uDAAf,GAAIqc,EAAW,uCACtE,OAAQA,EAAOje,MACb,KAAK+a,GACH,MAAO,CAAE1T,SAAS,GACpB,KAAK2T,GACH,MAAO,CAAE3T,SAAS,EAAOoV,0BAA2BwB,EAAO3d,SAC7D,KAAK2a,GACH,MAAO,CAAE5T,SAAS,EAAOC,MAAO2W,EAAO3d,SACzC,QACE,OAAOsB,ITcXgd,cSlDkC,WAAyB,IAAxBhd,EAAuB,uDAAf,GAAIqc,EAAW,uCAC1D,OAAQA,EAAOje,MACb,KAAKkb,GACH,MAAO,CAAE7T,SAAS,GACpB,KAAK8T,GACH,MAAO,CAAE9T,SAAS,EAAOK,SAAS,GACpC,KAAK0T,GACH,MAAO,CAAE/T,SAAS,EAAOC,MAAO2W,EAAO3d,QAASoH,SAAS,GAE3D,QACE,OAAO9F,MT+CPid,GAAe,CACnBhd,UAAW,CAAEH,SALanB,aAAakR,QAAQ,YAC7ChR,KAAK+Q,MAAMjR,aAAakR,QAAQ,aAChC,OAMEqN,GAAa,CAACC,MAQLC,GANDC,uBACZlB,GACAc,GACAK,+BAAoBC,mBAAe,WAAf,EAAmBL,MUrFzCM,IAASC,OAEP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFvS,SAASC,eAAe,SAM1B6Q,O","file":"static/js/main.e934ad7a.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\n\r\nexport const USER_SECURITY_REQUEST = \"USER_SECURITY_REQUEST\";\r\nexport const USER_SECURITY_SUCCESS = \"USER_SECURITY_SUCCESS\";\r\nexport const USER_SECURITY_FAIL = \"USER_SECURITY_FAIL\";\r\n\r\nexport const USER_NOSECURITY_REQUEST = \"USER_NOSECURITY_REQUEST\";\r\nexport const USER_NOSECURITY_SUCCESS = \"USER_NOSECURITY_SUCCESS\";\r\nexport const USER_NOSECURITY_FAIL = \"USER_NOSECURITY_FAIL\";\r\n\r\nexport const USER_SETTAGS_REQUEST = \"USER_SETTAGS_REQUEST\";\r\nexport const USER_SETTAGS_SUCCESS = \"USER_SETTAGS_SUCCESS\";\r\nexport const USER_SETTAGS_FAIL = \"USER_SETTAGS_FAIL\";\r\n\r\nexport const USER_DIARY_REQUEST = \"USER_DIARY_REQUEST\";\r\nexport const USER_DIARY_SUCCESS = \"USER_DIARY_SUCCESS\";\r\nexport const USER_DIARY_FAIL = \"USER_DIARY_FAIL\";\r\n\r\nexport const GET_USERS_REQUEST = \"GET_USERS_REQUEST\";\r\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\r\nexport const GET_USERS_FAIL = \"GET_USERS_FAIL\";\r\n\r\nexport const CHANGE_USER_STATUS_REQUEST = \"CHANGE_USER_STATUS_REQUEST\";\r\nexport const CHANGE_USER_STATUS_SUCCESS = \"CHANGE_USER_STATUS_SUCCESS\";\r\nexport const CHANGE_USER_STATUS_FAIL = \"CHANGE_USER_STATUS_FAIL\";\r\n","import {\r\n  CHANGE_USER_STATUS_FAIL,\r\n  CHANGE_USER_STATUS_REQUEST,\r\n  CHANGE_USER_STATUS_SUCCESS,\r\n  GET_USERS_REQUEST,\r\n  GET_USERS_SUCCESS,\r\n  USER_DIARY_FAIL,\r\n  USER_DIARY_REQUEST,\r\n  USER_DIARY_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_NOSECURITY_FAIL,\r\n  USER_NOSECURITY_REQUEST,\r\n  USER_NOSECURITY_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_SECURITY_FAIL,\r\n  USER_SECURITY_REQUEST,\r\n  USER_SECURITY_SUCCESS,\r\n  USER_SETTAGS_FAIL,\r\n  USER_SETTAGS_REQUEST,\r\n  USER_SETTAGS_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      {\r\n        email,\r\n        password,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const diarySetSecurity = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_SECURITY_REQUEST });\r\n\r\n    const { data } = await axios.post(\"/api/users/profile/security\", user);\r\n\r\n    dispatch({ type: USER_SECURITY_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n    window.location.reload();\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SECURITY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const diarySetNoSecurity = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_NOSECURITY_REQUEST });\r\n\r\n    const { data } = await axios.post(\"/api/users/profile/noSecurity\", user);\r\n\r\n    dispatch({ type: USER_NOSECURITY_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n    window.location.reload();\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_NOSECURITY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const diarySetPersonalStats = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_SETTAGS_REQUEST });\r\n\r\n    const { data } = await axios.post(\"/api/users/profile/personalStats\", user);\r\n\r\n    dispatch({ type: USER_SETTAGS_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    window.location.reload();\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SETTAGS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const authDiary = (booleanData) => async (dispatch) => {\r\n  dispatch({ type: USER_DIARY_REQUEST });\r\n  if (booleanData === true) {\r\n    dispatch({ type: USER_DIARY_SUCCESS });\r\n  } else {\r\n    dispatch({ type: USER_DIARY_FAIL });\r\n  }\r\n};\r\n\r\nexport const updateProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/profile/update\",\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_USERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/users/getAllUsers\");\r\n\r\n    dispatch({ type: GET_USERS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const changeUserStatus = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CHANGE_USER_STATUS_REQUEST });\r\n\r\n    const { data } = await axios.post(`/api/users/changeUserStatus/${id}`);\r\n\r\n    dispatch({ type: CHANGE_USER_STATUS_SUCCESS, payload: data });\r\n\r\n    window.location.reload();\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CHANGE_USER_STATUS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logoPP.3017ab12.png\";","import React, { useEffect } from \"react\";\r\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { logout } from \"../../actions/userActions\";\r\nimport LogoPP from \"../../images/logoPP.png\";\r\nimport \"../header/Header.css\";\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {}, [userInfo]);\r\n\r\n  return (\r\n    <div className=\"all\">\r\n      <Navbar bg=\"#f6f6f6\" expand=\"lg\" variant=\"dark\" className=\"all\">\r\n        <Container fluid>\r\n          {userInfo ? (\r\n            <Navbar.Brand href=\"/diario\">\r\n              <img src={LogoPP} width=\"50\" height=\"50\" alt=\"\" />\r\n            </Navbar.Brand>\r\n          ) : (\r\n            <Navbar.Brand href=\"/\">\r\n              <img src={LogoPP} width=\"50\" height=\"50\" alt=\"\" />\r\n            </Navbar.Brand>\r\n          )}\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            {userInfo ? (\r\n              <Nav variant=\"pills\" activeKey=\"1\">\r\n                {userInfo.isAdmin === true ? (\r\n                  <>\r\n                    <Nav.Item className=\"padding_butons\">\r\n                      <NavLink\r\n                        to=\"/admin\"\r\n                        className=\"textnavbar\"\r\n                        activeStyle={{\r\n                          fontWeight: \"bold\",\r\n                          color: \"#0FA5AE\",\r\n                        }}\r\n                      >\r\n                        Usuarios\r\n                      </NavLink>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"padding_butons\">\r\n                      <NavDropdown\r\n                        title=\"Lecturas\"\r\n                        id=\"basic-nav-dropdowm\"\r\n                        className=\"textnavbar\"\r\n                      >\r\n                        <NavDropdown.Item\r\n                          href=\"/admin-listar-lecturas\"\r\n                          className=\"textnavbar\"\r\n                        >\r\n                          Listar\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item\r\n                          href=\"/admin-crear-lectura\"\r\n                          className=\"textnavbar\"\r\n                        >\r\n                          Crear\r\n                        </NavDropdown.Item>\r\n                      </NavDropdown>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"padding_butons\">\r\n                      <NavLink\r\n                        to=\"/login\"\r\n                        className=\"textnavbar\"\r\n                        onClick={logoutHandler}\r\n                        activeStyle={{\r\n                          fontWeight: \"bold\",\r\n                          color: \"#0FA5AE\",\r\n                        }}\r\n                      >\r\n                        Log Out\r\n                      </NavLink>\r\n                    </Nav.Item>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Nav.Item className=\"padding_butons\">\r\n                      <NavLink\r\n                        to=\"/sobre-Psico-Panas\"\r\n                        className=\"textnavbar\"\r\n                        activeStyle={{\r\n                          fontWeight: \"bold\",\r\n                          color: \"#0FA5AE\",\r\n                        }}\r\n                      >\r\n                        Sobre PsicoP\r\n                      </NavLink>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"padding_butons\">\r\n                      {userInfo.diarySecurity === true ? (\r\n                        <NavLink\r\n                          to=\"/authDiario\"\r\n                          className=\"textnavbar\"\r\n                          activeStyle={{\r\n                            fontWeight: \"bold\",\r\n                            color: \"#0FA5AE\",\r\n                          }}\r\n                        >\r\n                          Diario\r\n                        </NavLink>\r\n                      ) : (\r\n                        <NavLink\r\n                          to=\"/diario\"\r\n                          className=\"textnavbar\"\r\n                          activeStyle={{\r\n                            fontWeight: \"bold\",\r\n                            color: \"#0FA5AE\",\r\n                          }}\r\n                        >\r\n                          Diario\r\n                        </NavLink>\r\n                      )}\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item className=\"padding_butons\">\r\n                      <NavLink\r\n                        to=\"/lecturas\"\r\n                        className=\"textnavbar\"\r\n                        activeStyle={{\r\n                          fontWeight: \"bold\",\r\n                          color: \"#0FA5AE\",\r\n                        }}\r\n                      >\r\n                        Lecturas\r\n                      </NavLink>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"padding_butons\">\r\n                      {!userInfo.isPremium ? (\r\n                        <NavLink\r\n                          to=\"/pagos\"\r\n                          className=\"textnavbar\"\r\n                          activeStyle={{\r\n                            fontWeight: \"bold\",\r\n                            color: \"#0FA5AE\",\r\n                          }}\r\n                        >\r\n                          Pagos\r\n                        </NavLink>\r\n                      ) : (\r\n                        <NavLink\r\n                          to=\"/foro\"\r\n                          className=\"textnavbar\"\r\n                          activeStyle={{\r\n                            fontWeight: \"bold\",\r\n                            color: \"#0FA5AE\",\r\n                          }}\r\n                        >\r\n                          Foro\r\n                        </NavLink>\r\n                      )}\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <NavDropdown\r\n                        title=\"Mi cuenta\"\r\n                        id=\"basic-nav-dropdowm\"\r\n                        className=\"textnavbar\"\r\n                      >\r\n                        <NavDropdown.Item href=\"/perfil\" className=\"textnavbar\">\r\n                          Perfil\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item\r\n                          onClick={logoutHandler}\r\n                          className=\"textnavbar\"\r\n                        >\r\n                          Cerrar sesión\r\n                        </NavDropdown.Item>\r\n                      </NavDropdown>\r\n                    </Nav.Item>\r\n                  </>\r\n                )}\r\n              </Nav>\r\n            ) : (\r\n              <Nav variant=\"pills\" activeKey=\"1\">\r\n                <Nav.Item className=\"padding_butons\">\r\n                  <NavLink\r\n                    to=\"/login\"\r\n                    className=\"textnavbar\"\r\n                    activeStyle={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"#0FA5AE\",\r\n                    }}\r\n                  >\r\n                    Iniciar Sesión\r\n                  </NavLink>\r\n                </Nav.Item>\r\n                <Nav.Item className=\"padding_butons\">\r\n                  <NavLink\r\n                    to=\"/registro\"\r\n                    className=\"textnavbar\"\r\n                    activeStyle={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"#0FA5AE\",\r\n                    }}\r\n                  >\r\n                    Registrarse\r\n                  </NavLink>\r\n                </Nav.Item>\r\n              </Nav>\r\n            )}\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/Goti.2105568b.png\";","import React from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport \"./MainScreen.css\";\r\nimport Media from \"react-media\";\r\n\r\nfunction MainScreen({ children, title }) {\r\n  return (\r\n    <>\r\n    <div style={{height:\"10vh\", background:\"#F6F6F6\"}}></div>\r\n    <div className=\"spacer layer1\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"page\">\r\n            {title && (\r\n              <>\r\n                <h1 className=\"heading\">{title}</h1>\r\n              </>\r\n            )}\r\n            {children}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport Media from \"react-media\";\r\nimport { Button, Container, Row } from \"react-bootstrap\";\r\nimport \"../landingPage/LandingPage.css\";\r\nimport Goti from \"../../images/Goti.png\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\n\r\nconst LandingPage = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/diario\");\r\n    } else {\r\n      localStorage.removeItem(\"userInfo\");\r\n      localStorage.removeItem(\"emotionsInfo\");\r\n      localStorage.removeItem(\"tagsInfo\");\r\n      localStorage.removeItem(\"statsTags\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  return (\r\n    <MainScreen>\r\n      <Container>\r\n        <Media query={{ maxWidth: 800 }}>\r\n          {(matches) =>\r\n            matches ? (\r\n              <>\r\n                <Row>\r\n                  <div className=\"Centrado\">\r\n                    <h2 className=\"title\">Bienvenido a PsicoPanas</h2>\r\n                    <p className=\"subtitle\">\r\n                      Este es tu espacio, tu diario personal. \r\n                      Donde Goti te aconseja. \r\n                      Aquí llevas tus emociones y Goti las estadísticas de ellas.\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"Centrado\">\r\n                    <img src={Goti} width=\"200\" height=\"250\" alt=\"Goti\" />\r\n                  </div>\r\n                </Row>\r\n                <div>\r\n                  <div className=\"buttonContainer\">\r\n                    <a href=\"/login\">\r\n                      <Button size=\"lg\" className=\"landingButton\">\r\n                        Iniciar sesión\r\n                      </Button>\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"buttonContainer\">\r\n                    <a href=\"/registro\">\r\n                      <Button\r\n                        size=\"lg\"\r\n                        className=\"landingButton\"\r\n                        variant=\"outline-primary\"\r\n                      >\r\n                        Crear una cuenta\r\n                      </Button>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Row>\r\n                  <div className=\"welcome\">\r\n                    <img src={Goti} width=\"200\" height=\"250\" alt=\"Goti\" />\r\n                    <div className=\"intro-text\">\r\n                      <div>\r\n                        <h1 className=\"title\">Bienvenido a PsicoPanas</h1>\r\n                        <h4 className=\"subtitle\">Tu gota de bienestar</h4>\r\n                        <p className=\"subtitle\">\r\n                        Este ahora es tu espacio, donde tienes tu diario personal. \r\n                        Donde Goti te aconseja. \r\n                        Aquí llevas tus emociones y Goti las estadísticas de ellas.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Row>\r\n                <div>\r\n                  <div className=\"buttonContainer\">\r\n                    <a href=\"/login\">\r\n                      <Button\r\n                        size=\"lg\"\r\n                        className=\"landingButton\"\r\n                        style={{\r\n                          border: \"none\",\r\n                        }}\r\n                      >\r\n                        Iniciar sesión\r\n                      </Button>\r\n                    </a>\r\n                    <a href=\"/registro\">\r\n                      <Button\r\n                        size=\"lg\"\r\n                        className=\"landingButton\"\r\n                        variant=\"outline-primary\"\r\n                        style={{\r\n                          border: \"none\",\r\n                        }}\r\n                      >\r\n                        Regístrate aquí\r\n                      </Button>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )\r\n          }\r\n        </Media>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","export const ENTRY_LIST_REQUEST = \"ENTRY_LIST_REQUEST\";\r\nexport const ENTRY_LIST_SUCCESS = \"ENTRY_LIST_SUCCESS\";\r\nexport const ENTRY_LIST_FAIL = \"ENTRY_LIST_FAIL\";\r\n\r\nexport const ENTRY_CREATE_REQUEST = \"ENTRY_CREATE_REQUEST\";\r\nexport const ENTRY_CREATE_SUCCESS = \"ENTRY_CREATE_SUCCESS\";\r\nexport const ENTRY_CREATE_FAIL = \"ENTRY_CREATE_FAIL\";\r\n\r\nexport const ENTRY_UPDATE_REQUEST = \"ENTRY_UPDATE_REQUEST\";\r\nexport const ENTRY_UPDATE_SUCCESS = \"ENTRY_UPDATE_SUCCESS\";\r\nexport const ENTRY_UPDATE_FAIL = \"ENTRY_UPDATE_FAIL\";\r\n\r\n// export const LAST_ENTRY_REQUEST = \"LAST_ENTRY_REQUEST\";\r\n// export const LAST_ENTRY_SUCCESS = \"LAST_ENTRY_SUCCESS\";\r\n// export const LAST_ENTRY_FAIL = \"LAST_ENTRY_FAIL\";\r\n\r\nexport const STATS_REQUEST = \"STATS_REQUEST\";\r\nexport const STATS_SUCCESS = \"STATS_SUCCESS\";\r\nexport const STATS_FAIL = \"STATS_FAIL\";\r\n\r\nexport const MONTH_STATS_REQUEST = \"MONTH_STATS_REQUEST\";\r\nexport const MONTH_STATS_SUCCESS = \"MONTH_STATS_SUCCESS\";\r\nexport const MONTH_STATS_FAIL = \"MONTH_STATS_FAIL\";\r\n\r\nexport const TAGS_STATS_REQUEST = \"TAGS_STATS_REQUEST\";\r\nexport const TAGS_STATS_SUCCESS = \"TAGS_STATS_SUCCESS\";\r\nexport const TAGS_STATS_FAIL = \"TAGS_STATS_FAIL\";\r\n","export const TAG_LIST_REQUEST = \"TAG_LIST_REQUEST\";\r\nexport const TAG_LIST_SUCCESS = \"TAG_LIST_SUCCESS\";\r\nexport const TAG_LIST_FAIL = \"TAG_LIST_FAIL\";\r\n","import {\r\n  TAG_LIST_FAIL,\r\n  TAG_LIST_REQUEST,\r\n  TAG_LIST_SUCCESS,\r\n} from \"../constants/tagsConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listTags = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TAG_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/tags\");\r\n\r\n    dispatch({ type: TAG_LIST_SUCCESS, payload: data });\r\n    localStorage.setItem(\"tagsInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TAG_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","export const EMOTION_LIST_REQUEST = \"EMOTION_LIST_REQUEST\";\r\nexport const EMOTION_LIST_SUCCESS = \"EMOTION_LIST_SUCCESS\";\r\nexport const EMOTION_LIST_FAIL = \"EMOTION_LIST_FAIL\";","import {\r\n  EMOTION_LIST_FAIL,\r\n  EMOTION_LIST_REQUEST,\r\n  EMOTION_LIST_SUCCESS,\r\n} from \"../constants/emotionsConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listEmotions = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: EMOTION_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/emotions\");\r\n\r\n    dispatch({ type: EMOTION_LIST_SUCCESS, payload: data });\r\n    localStorage.setItem(\"emotionsInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EMOTION_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loading({ size = 100 }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <Spinner\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n        }}\r\n        animation=\"border\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst ErrorMessage = ({ variant = \"info\", children }) => {\r\n  return (\r\n    <Alert variant={variant} style={{ fontSize: 20 }}>\r\n      <strong>{children}</strong>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Accordion, Button, Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listEntries } from \"../../actions/entryActions\";\r\nimport { listTags } from \"../../actions/tagActions\";\r\nimport { listEmotions } from \"../../actions/emotionAction\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\nconst Diario = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const entryList = useSelector((state) => state.entryList);\r\n  const { loading, error, entries } = entryList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const entryCreate = useSelector((state) => state.entryCreate);\r\n  const { success: successCreate } = entryCreate;\r\n\r\n  const entryUpdate = useSelector((state) => state.entryUpdate);\r\n  const { success: successUpdate } = entryUpdate;\r\n\r\n  // const last = useSelector((state) => state.lastEntry);\r\n  // const { lastOne } = last;\r\n\r\n  const diaryAuth = useSelector((state) => state.diaryAuth);\r\n  const { successDiary } = diaryAuth;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      } else if (\r\n        (successDiary === false || !successDiary) &&\r\n        userInfo.diarySecurity === true\r\n      ) {\r\n        history.push(\"/authDiario\");\r\n      }\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(listEntries());\r\n  }, [dispatch, history, userInfo, successCreate, successUpdate]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listTags());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listEmotions());\r\n  }, [dispatch]);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(lastEntry());\r\n  // }, [dispatch]);\r\n\r\n  // useEffect(() => {}, [lastOne]);\r\n\r\n  return (\r\n    <MainScreen title=\"Diario\">\r\n      <div className=\"subtitle-text-blue\">Bienvenido {userInfo.name}</div>\r\n      <div className=\"flex-container\">\r\n        <Link to=\"/crearEntrada\">\r\n          <Button\r\n            size=\"md\"\r\n            variant=\"primary\"\r\n            className=\"button\"\r\n            style={{ marginLeft: \"10px\" }}\r\n          >\r\n            Crear entrada\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/estadisticas\">\r\n          <Button size=\"md\" variant=\"primary\" className=\"button\">\r\n            Ver estadísticas\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/ajustes-diario\">\r\n          <Button size=\"md\" variant=\"primary\" className=\"button\">\r\n            Ajustes\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n      {error && (\r\n        <ErrorMessage variant=\"danger\">\r\n          {\"Ocurrió un error al cargar el diario. Por favor recargue la página\"}\r\n        </ErrorMessage>\r\n      )}\r\n      {loading && <Loading />}\r\n      {entries\r\n        ?.sort((a, b) => {\r\n          if (a.createdAt < b.createdAt) {\r\n            return -1;\r\n          }\r\n          if (a.createdAt > b.createdAt) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        })\r\n        .map((entry) => (\r\n          <Accordion key={entry._id}>\r\n            <Card className=\"container-entry\">\r\n              <Card.Header className=\"container-entry-header\">\r\n                <Accordion.Toggle\r\n                  style={{\r\n                    flex: 1,\r\n                    cursor: \"pointer\",\r\n                    alignSelf: \"center\",\r\n                    fontSize: 18,\r\n                    display: \"flex\",\r\n                  }}\r\n                  as={Card.Text}\r\n                  variant=\"link\"\r\n                  eventKey=\"0\"\r\n                >\r\n                  <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <img src={entry.emotion} width=\"50\" height=\"50\" alt=\"\" />\r\n                    <div>\r\n                      <div className=\"subtitle-text-gray\">\r\n                        {moment(entry.createdAt).format(\"LL\")}\r\n                      </div>\r\n                      <div className=\"subtitle-text-pink\">{entry.title}</div>\r\n                    </div>\r\n                  </div>\r\n                </Accordion.Toggle>\r\n\r\n                <div>\r\n                  <Button href={`/diario/${entry._id}`} className=\"edit-button\">\r\n                    <img\r\n                      src=\"https://res.cloudinary.com/psicopanas/image/upload/v1634441688/iconPencil_zngxxh.png\"\r\n                      width=\"20px\"\r\n                      height=\"20px\"\r\n                      alt=\"Editar\"\r\n                    />\r\n                  </Button>\r\n                </div>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                  <Container style={{ margin: 0, padding: 0 }}>\r\n                    <Row>\r\n                      <Col style={{ width: \"auto\" }}>\r\n                        {entry.tags?.map((tag) => (\r\n                          <div className=\"container-entry-tag\">{tag}</div>\r\n                        ))}\r\n                      </Col>\r\n                      <Col>\r\n                        <div>\r\n                          <div className=\"plain-text\">{entry.content}</div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        ))\r\n        .reverse()}\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default Diario;\r\n","import {\r\n  ENTRY_CREATE_FAIL,\r\n  ENTRY_CREATE_REQUEST,\r\n  ENTRY_CREATE_SUCCESS,\r\n  ENTRY_LIST_FAIL,\r\n  ENTRY_LIST_REQUEST,\r\n  ENTRY_LIST_SUCCESS,\r\n  ENTRY_UPDATE_FAIL,\r\n  ENTRY_UPDATE_REQUEST,\r\n  ENTRY_UPDATE_SUCCESS,\r\n  MONTH_STATS_FAIL,\r\n  MONTH_STATS_REQUEST,\r\n  MONTH_STATS_SUCCESS,\r\n  // LAST_ENTRY_FAIL,\r\n  // LAST_ENTRY_REQUEST,\r\n  // LAST_ENTRY_SUCCESS,\r\n  STATS_FAIL,\r\n  STATS_REQUEST,\r\n  STATS_SUCCESS,\r\n  TAGS_STATS_FAIL,\r\n  TAGS_STATS_REQUEST,\r\n  TAGS_STATS_SUCCESS,\r\n} from \"../constants/entriesConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listEntries = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ENTRY_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/entries`, config);\r\n\r\n    dispatch({\r\n      type: ENTRY_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: ENTRY_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createEntryAction =\r\n  (title, content, tags, emotion) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ENTRY_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/entries/create`,\r\n        { title, content, tags, emotion },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: ENTRY_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n      window.location.reload(true);\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: ENTRY_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateEntryAction =\r\n  (id, title, content, tags, emotion) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ENTRY_UPDATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/entries/${id}`,\r\n        { title, content, tags, emotion },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: ENTRY_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: ENTRY_UPDATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n// export const lastEntry = () => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: LAST_ENTRY_REQUEST,\r\n//     });\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState();\r\n\r\n//     const { data } = await axios.get(`/api/entries/lastEntry/${userInfo._id}`);\r\n\r\n//     dispatch({\r\n//       type: LAST_ENTRY_SUCCESS,\r\n//       payload: data,\r\n//     });\r\n//   } catch (error) {\r\n//     const message =\r\n//       error.response && error.response.data.message\r\n//         ? error.response.data.message\r\n//         : error.message;\r\n//     dispatch({\r\n//       type: LAST_ENTRY_FAIL,\r\n//       payload: message,\r\n//     });\r\n//   }\r\n// };\r\n\r\nexport const getStats = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: STATS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const { data } = await axios.get(`/api/users/stats/${userInfo._id}`);\r\n\r\n    dispatch({\r\n      type: STATS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: STATS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getMonthStats = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: MONTH_STATS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const { data } = await axios.get(`/api/users/monthstats/${userInfo._id}`);\r\n\r\n    dispatch({\r\n      type: MONTH_STATS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: MONTH_STATS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTagStats = () => async (dispatch, getState) => {\r\n  try {\r\n    localStorage.removeItem(\"statsTags\");\r\n    dispatch({\r\n      type: TAGS_STATS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const { data } = await axios.get(`/api/users/tagstats/${userInfo._id}`);\r\n\r\n    dispatch({\r\n      type: TAGS_STATS_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"statsTags\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: TAGS_STATS_FAIL,\r\n      payload: message,\r\n    });\r\n    localStorage.setItem(\"statsTags\", JSON.stringify(message));\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Col, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport { login } from \"../../actions/userActions\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst LoginPage = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      if (userInfo?.isAdmin === false) {\r\n        history.push(\"/diario\");\r\n      } else {\r\n        history.push(\"/admin\");\r\n      }\r\n    } else {\r\n      localStorage.removeItem(\"userInfo\");\r\n      localStorage.removeItem(\"emotionsInfo\");\r\n      localStorage.removeItem(\"tagsInfo\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Iniciar sesión\">\r\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n      {loading && <Loading />}\r\n      <div>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label className=\"plain-text\">Correo electrónico</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label className=\"plain-text\">Contraseña</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <div className=\"flex-container\">\r\n            <Button className=\"button\" variant=\"primary\" type=\"submit\">\r\n              Iniciar sesión\r\n            </Button>\r\n            <Col className=\"plain-text\">\r\n              ¿Eres nuevo? <Link to=\"/registro\">Crea una cuenta aquí</Link>\r\n            </Col>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport { register } from \"../../actions/userActions\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst RegisterPage = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error } = userRegister;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/diario\");\r\n    } else {\r\n      localStorage.removeItem(\"userInfo\");\r\n      localStorage.removeItem(\"emotionsInfo\");\r\n      localStorage.removeItem(\"tagsInfo\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmpassword) {\r\n      setMessage(\"Las contraseñas no coinciden\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Registro\">\r\n      <div>\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n        {loading && <Loading />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label className=\"plain-text\">Nombre de usuario</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label className=\"plain-text\">Correo electrónico</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label className=\"plain-text\">Contraseña</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label className=\"plain-text\">\r\n              Confirma la contraseña\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={confirmpassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <div className=\"flex-container\">\r\n            <Button className=\"button\" variant=\"primary\" type=\"submit\">\r\n              Registrarse\r\n            </Button>\r\n            <Col>\r\n              <div className=\"plain-text\">¿ Ya tienes una cuenta ?</div>\r\n              <Link to=\"/login\" className=\"plain-text\">\r\n                Inicia sesión aquí\r\n              </Link>\r\n            </Col>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport { Button, Card, Container, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createEntryAction } from \"../../actions/entryActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport { listTags } from \"../../actions/tagActions\";\r\nimport { listEmotions } from \"../../actions/emotionAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport \"../../styles/App.css\";\r\n\r\nlet setEmotion = \"\";\r\n\r\nfunction CreateEntryPage({ history }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const [mitad] = useState([]);\r\n  const [mitad2] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const entryCreate = useSelector((state) => state.entryCreate);\r\n  const { loading, error } = entryCreate;\r\n\r\n  const resetHandler = () => {\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  // const last = useSelector((state) => state.lastEntry);\r\n  // const { lastOne, loading: loadingLast } = last;\r\n\r\n  const tagList = useSelector((state) => state.tagList);\r\n  const loading2 = tagList.loading;\r\n  const { tags } = tagList;\r\n\r\n  const emotionList = useSelector((state) => state.emotionList);\r\n  const loading3 = emotionList.loading;\r\n  const { emotions } = emotionList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const today = new Date();\r\n  const diaryAuth = useSelector((state) => state.diaryAuth);\r\n  const { successDiary } = diaryAuth;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      } else if (\r\n        (successDiary === false || !successDiary) &&\r\n        userInfo?.diarySecurity === true\r\n      ) {\r\n        history.push(\"/authDiario\");\r\n      }\r\n      const mitads = userInfo?.personalTags.slice(0, 5);\r\n      const mitads2 = userInfo?.personalTags.slice(5, 10);\r\n\r\n      mitads.map((element) => mitad.push(element));\r\n      mitads2.map((element) => mitad2.push(element));\r\n    }\r\n  }, [history, successDiary, userInfo]);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(lastEntry());\r\n  // }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listEmotions());\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listTags());\r\n  }, [dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const entryTags = [];\r\n\r\n    tags?.forEach((tag) => {\r\n      if (document.getElementById(tag._id)?.checked === true) {\r\n        entryTags.push(tag.name);\r\n      }\r\n    });\r\n    userInfo.personalTags?.forEach((ptag) => {\r\n      if (document.getElementById(ptag)?.checked === true) {\r\n        entryTags.push(ptag);\r\n      }\r\n    });\r\n\r\n    if (\r\n      isEmpty(title.trim()) ||\r\n      isEmpty(content.trim()) ||\r\n      isEmpty(setEmotion)\r\n    ) {\r\n      visualButtons2();\r\n      return alert(\r\n        \"Por favor, llena todos los datos e indica cómo te sientes hoy\"\r\n      );\r\n    }\r\n    dispatch(\r\n      createEntryAction(title.trim(), content.trim(), entryTags, setEmotion)\r\n    );\r\n\r\n    var num = Math.floor(Math.random() * (3 + 1 - 1) + 1);\r\n\r\n    if (\r\n      setEmotion ===\r\n      \"https://res.cloudinary.com/psicopanas/image/upload/v1635980382/muy_triste_igug5p.png\"\r\n    ) {\r\n      history.push(\"/mensaje-racha\");\r\n    } else if (\r\n      setEmotion ===\r\n      \"https://res.cloudinary.com/psicopanas/image/upload/v1635980384/triste_q55oyc.png\"\r\n    ) {\r\n      history.push(\"/mensaje-triste\");\r\n    } else if (\r\n      setEmotion ===\r\n      \"https://res.cloudinary.com/psicopanas/image/upload/v1635980384/regular_wr2r0j.png\"\r\n    ) {\r\n      history.push(\"/mensaje-positivo\");\r\n    } else if (\r\n      setEmotion ===\r\n      \"https://res.cloudinary.com/psicopanas/image/upload/v1635980381/feliz_vw1muh.png\"\r\n    ) {\r\n      history.push(\"/mensaje-feliz\");\r\n    } else {\r\n      history.push(\"/mensaje-muy-feliz\");\r\n    }\r\n    resetHandler();\r\n  };\r\n\r\n  function isEmpty(str) {\r\n    return !str || 0 === str.length;\r\n  }\r\n\r\n  const visualButtons = (id, icon) => {\r\n    emotions?.forEach((emotion) => {\r\n      if (emotion._id !== id) {\r\n        if (emotion._id === \"6169efd6152f0e9299ff6810\") {\r\n          document\r\n            .getElementById(emotion._id)\r\n            ?.setAttribute(\r\n              \"src\",\r\n              \"https://res.cloudinary.com/psicopanas/image/upload/v1635985141/1_1_vnfebt.png\"\r\n            );\r\n        } else if (emotion._id === \"616b11348f059d3c912e9943\") {\r\n          document\r\n            .getElementById(emotion._id)\r\n            ?.setAttribute(\r\n              \"src\",\r\n              \"https://res.cloudinary.com/psicopanas/image/upload/v1635985141/2_1_vvg93g.png\"\r\n            );\r\n        } else if (emotion._id === \"616b11858f059d3c912e9944\") {\r\n          document\r\n            .getElementById(emotion._id)\r\n            ?.setAttribute(\r\n              \"src\",\r\n              \"https://res.cloudinary.com/psicopanas/image/upload/v1635985145/3_1_gzqzm7.png\"\r\n            );\r\n        } else if (emotion._id === \"616b11b48f059d3c912e9945\") {\r\n          document\r\n            .getElementById(emotion._id)\r\n            ?.setAttribute(\r\n              \"src\",\r\n              \"https://res.cloudinary.com/psicopanas/image/upload/v1635985142/4_1_ztqqc8.png\"\r\n            );\r\n        } else if (emotion._id === \"616b11ec8f059d3c912e9946\") {\r\n          document\r\n            .getElementById(emotion._id)\r\n            ?.setAttribute(\r\n              \"src\",\r\n              \"https://res.cloudinary.com/psicopanas/image/upload/v1635985142/5_1_pvoqjq.png\"\r\n            );\r\n        }\r\n      } else {\r\n        document.getElementById(emotion._id)?.setAttribute(\"src\", icon);\r\n      }\r\n    });\r\n  };\r\n\r\n  const visualButtons2 = () => {\r\n    emotions?.forEach((emotion) => {\r\n      if (emotion._id === \"6169efd6152f0e9299ff6810\") {\r\n        document\r\n          .getElementById(emotion._id)\r\n          ?.setAttribute(\r\n            \"src\",\r\n            \"https://res.cloudinary.com/psicopanas/image/upload/v1635980383/muy_feliz_cycatm.png\"\r\n          );\r\n      } else if (emotion._id === \"616b11348f059d3c912e9943\") {\r\n        document\r\n          .getElementById(emotion._id)\r\n          ?.setAttribute(\r\n            \"src\",\r\n            \"https://res.cloudinary.com/psicopanas/image/upload/v1635980381/feliz_vw1muh.png\"\r\n          );\r\n      } else if (emotion._id === \"616b11858f059d3c912e9944\") {\r\n        document\r\n          .getElementById(emotion._id)\r\n          ?.setAttribute(\r\n            \"src\",\r\n            \"https://res.cloudinary.com/psicopanas/image/upload/v1635980384/regular_wr2r0j.png\"\r\n          );\r\n      } else if (emotion._id === \"616b11b48f059d3c912e9945\") {\r\n        document\r\n          .getElementById(emotion._id)\r\n          ?.setAttribute(\r\n            \"src\",\r\n            \"https://res.cloudinary.com/psicopanas/image/upload/v1635980384/triste_q55oyc.png\"\r\n          );\r\n      } else if (emotion._id === \"616b11ec8f059d3c912e9946\") {\r\n        document\r\n          .getElementById(emotion._id)\r\n          ?.setAttribute(\r\n            \"src\",\r\n            \"https://res.cloudinary.com/psicopanas/image/upload/v1635980382/muy_triste_igug5p.png\"\r\n          );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainScreen title={moment(today).format(\"YYYY-DD-MM\")}>\r\n        <Card className=\"no-background\">\r\n          <Card.Body>\r\n            <Form onSubmit={submitHandler}>\r\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n              <Form.Group controlId=\"title\">\r\n                <Form.Label className=\"subtitle-text-blue\">\r\n                  Ponle un título a tu entrada\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"title\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                  className=\"plain-text\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"title\">\r\n                <Form.Label className=\"subtitle-text-blue\">\r\n                  ¿Cómo te sientes?\r\n                </Form.Label>\r\n                <div className=\"box-emotions-container\">\r\n                  <div className=\"box-emotions\">\r\n                    {loading3 && <Loading size={25} />}\r\n                    {emotions?.map((emotion) => (\r\n                      <>\r\n                        <div\r\n                          onClick={(e) => {\r\n                            visualButtons(emotion._id, emotion.icon);\r\n                            setEmotion = emotion.icon;\r\n                          }}\r\n                          className=\"emotion-holder\"\r\n                        >\r\n                          <>\r\n                            <img\r\n                              id={emotion._id}\r\n                              src={emotion.icon}\r\n                              width=\"50\"\r\n                              height=\"50\"\r\n                              alt={emotion.name}\r\n                            />\r\n                            <div className=\"centered-text\">{emotion.name}</div>\r\n                          </>\r\n                        </div>\r\n                      </>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"tag\">\r\n                <Form.Label className=\"subtitle-text-blue\">\r\n                  ¿Qué te hizo sentir así?\r\n                </Form.Label>\r\n                {loading2 ? (\r\n                  <Loading size={25} />\r\n                ) : (\r\n                  <Container className=\"white-background\">\r\n                    <Row>\r\n                      <Col>\r\n                        <div className=\"flex-container\">\r\n                          <p className=\"subtitle-text-soft-blue\">Deberes</p>\r\n                        </div>\r\n                        {tags\r\n                          ?.filter((tag) => tag.group === \"Deberes\")\r\n                          .map((tag) => (\r\n                            <div>\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                id={tag._id}\r\n                                style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                              >\r\n                                <Form.Check.Label\r\n                                  style={{\r\n                                    color: \"#2c2c2c\",\r\n                                    fontWeight: \"bold\",\r\n                                  }}\r\n                                  className=\"checkbox\"\r\n                                >\r\n                                  <Form.Check.Input type=\"checkbox\" isValid />\r\n                                  <span class=\"check\">{tag.name}</span>\r\n                                </Form.Check.Label>\r\n                              </Form.Check>\r\n                            </div>\r\n                          ))}\r\n                      </Col>\r\n                      <Col>\r\n                        <div className=\"flex-container\">\r\n                          <p className=\"subtitle-text-soft-blue\">Hobbies</p>\r\n                        </div>\r\n                        {tags\r\n                          ?.filter((tag) => tag.group === \"Hobbies\")\r\n                          .map((tag) => (\r\n                            <div>\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                id={tag._id}\r\n                                style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                              >\r\n                                <Form.Check.Label\r\n                                  style={{\r\n                                    color: \"#2c2c2c\",\r\n                                    fontWeight: \"bold\",\r\n                                  }}\r\n                                  className=\"checkbox\"\r\n                                >\r\n                                  <Form.Check.Input type=\"checkbox\" isValid />\r\n                                  <span class=\"check\">{tag.name}</span>\r\n                                </Form.Check.Label>\r\n                              </Form.Check>\r\n                            </div>\r\n                          ))}\r\n                      </Col>\r\n                      <Col>\r\n                        <div className=\"flex-container\">\r\n                          <p className=\"subtitle-text-soft-blue\">Emociones</p>\r\n                        </div>\r\n                        {tags\r\n                          ?.filter((tag) => tag.group === \"Emociones\")\r\n                          .map((tag) => (\r\n                            <div>\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                id={tag._id}\r\n                                style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                              >\r\n                                <Form.Check.Label\r\n                                  style={{\r\n                                    color: \"#2c2c2c\",\r\n                                    fontWeight: \"bold\",\r\n                                  }}\r\n                                  className=\"checkbox\"\r\n                                >\r\n                                  <Form.Check.Input type=\"checkbox\" isValid />\r\n                                  <span class=\"check\">{tag.name}</span>\r\n                                </Form.Check.Label>\r\n                              </Form.Check>\r\n                            </div>\r\n                          ))}\r\n                      </Col>\r\n                      <Col>\r\n                        <div className=\"flex-container\">\r\n                          <p className=\"subtitle-text-soft-blue\">Social</p>\r\n                        </div>\r\n                        {tags\r\n                          ?.filter((tag) => tag.group === \"Social\")\r\n                          .map((tag) => (\r\n                            <div>\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                id={tag._id}\r\n                                style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                              >\r\n                                <Form.Check.Label\r\n                                  style={{\r\n                                    color: \"#2c2c2c\",\r\n                                    fontWeight: \"bold\",\r\n                                  }}\r\n                                  className=\"checkbox\"\r\n                                >\r\n                                  <Form.Check.Input type=\"checkbox\" isValid />\r\n                                  <span class=\"check\">{tag.name}</span>\r\n                                </Form.Check.Label>\r\n                              </Form.Check>\r\n                            </div>\r\n                          ))}\r\n                      </Col>\r\n                      <Col>\r\n                        <div className=\"flex-container\">\r\n                          <p className=\"subtitle-text-soft-blue\">Salud</p>\r\n                        </div>\r\n                        {tags\r\n                          ?.filter((tag) => tag.group === \"Salud\")\r\n                          .map((tag) => (\r\n                            <div>\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                id={tag._id}\r\n                                style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                              >\r\n                                <Form.Check.Label\r\n                                  style={{\r\n                                    color: \"#2c2c2c\",\r\n                                    fontWeight: \"bold\",\r\n                                  }}\r\n                                  className=\"checkbox\"\r\n                                >\r\n                                  <Form.Check.Input type=\"checkbox\" isValid />\r\n                                  <span class=\"check\">{tag.name}</span>\r\n                                </Form.Check.Label>\r\n                              </Form.Check>\r\n                            </div>\r\n                          ))}\r\n                      </Col>\r\n                      <Col>\r\n                        <div className=\"flex-container\">\r\n                          <p className=\"subtitle-text-soft-blue\">\r\n                            Personalizadas\r\n                          </p>\r\n                          <Link to=\"/ajustes-diario\">\r\n                            <Button className=\"edit-button\">\r\n                              <img\r\n                                src=\"https://res.cloudinary.com/psicopanas/image/upload/v1634441688/iconPencil_zngxxh.png\"\r\n                                width=\"20px\"\r\n                                height=\"20px\"\r\n                                alt=\"Editar\"\r\n                              />\r\n                            </Button>\r\n                          </Link>\r\n                        </div>\r\n                        {mitad.map((ptag) => (\r\n                          <div>\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              id={ptag}\r\n                              style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                            >\r\n                              <Form.Check.Label\r\n                                style={{\r\n                                  color: \"#2c2c2c\",\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                                className=\"checkbox\"\r\n                              >\r\n                                <Form.Check.Input type=\"checkbox\" isValid />\r\n                                <span class=\"check\">{ptag}</span>\r\n                              </Form.Check.Label>\r\n                            </Form.Check>\r\n                          </div>\r\n                        ))}\r\n                      </Col>\r\n                      {userInfo?.isPremium ? (\r\n                        <Col>\r\n                          <div className=\"flex-container\">\r\n                            <p className=\"subtitle-text-soft-blue\">Premium</p>\r\n                          </div>\r\n                          {mitad2.map((ptag) => (\r\n                            <div>\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                id={ptag}\r\n                                style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                              >\r\n                                <Form.Check.Label\r\n                                  style={{\r\n                                    color: \"#2c2c2c\",\r\n                                    fontWeight: \"bold\",\r\n                                  }}\r\n                                  className=\"checkbox\"\r\n                                >\r\n                                  <Form.Check.Input type=\"checkbox\" isValid />\r\n                                  <span class=\"check\">{ptag}</span>\r\n                                </Form.Check.Label>\r\n                              </Form.Check>\r\n                            </div>\r\n                          ))}\r\n                        </Col>\r\n                      ) : (\r\n                        <div></div>\r\n                      )}\r\n                    </Row>\r\n                  </Container>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"content\">\r\n                <Form.Label className=\"subtitle-text-blue\">\r\n                  Cuéntanos mas sobre eso\r\n                </Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  value={content}\r\n                  rows={4}\r\n                  onChange={(e) => setContent(e.target.value)}\r\n                  className=\"plain-text\"\r\n                />\r\n              </Form.Group>\r\n\r\n              {loading && <Loading size={50} />}\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Link to=\"/authDiario\">\r\n                    <Button variant=\"primary\" className=\"button-all-page\">\r\n                      Volver al diario\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"primary\"\r\n                    className=\"button-all-page\"\r\n                  >\r\n                    Guardar\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </MainScreen>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateEntryPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport axios from \"axios\";\r\nimport { Button, Card, Row, Container, Col, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateEntryAction } from \"../../actions/entryActions\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport moment from \"moment\";\r\nimport { listTags } from \"../../actions/tagActions\";\r\nimport { listEmotions } from \"../../actions/emotionAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../styles/App.css\";\r\n\r\nfunction UpdateEntryPage({ match, history }) {\r\n  const [title, setTitle] = useState();\r\n  const [content, setContent] = useState();\r\n  const [date, setDate] = useState(\"\");\r\n  const [emotion, setEmotion] = useState(\"\");\r\n\r\n  const [mitad] = useState([]);\r\n  const [mitad2] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const entryUpdate = useSelector((state) => state.entryUpdate);\r\n  const { loading, error } = entryUpdate;\r\n\r\n  const tagList = useSelector((state) => state.tagList);\r\n  const loading2 = tagList.loading;\r\n  const { tags } = tagList;\r\n\r\n  const emotionList = useSelector((state) => state.emotionList);\r\n  const loading3 = emotionList.loading;\r\n  const { emotions } = emotionList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const diaryAuth = useSelector((state) => state.diaryAuth);\r\n  const { successDiary } = diaryAuth;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      }\r\n    }\r\n\r\n    const mitads = userInfo?.personalTags.slice(0, 5);\r\n    const mitads2 = userInfo?.personalTags.slice(5, 10);\r\n\r\n    mitads.map((element) => mitad.push(element));\r\n    mitads2.map((element) => mitad2.push(element));\r\n  }, [history, userInfo, successDiary]);\r\n\r\n  useEffect(() => {\r\n    const fetching = async () => {\r\n      const { data } = await axios.get(`/api/entries/${match.params.id}`);\r\n\r\n      setTitle(data.title);\r\n      setContent(data.content);\r\n      setDate(data.createdAt);\r\n      setEmotion(data.emotion);\r\n    };\r\n    fetching();\r\n  }, [match.params.id]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listEmotions());\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listTags());\r\n  }, [dispatch]);\r\n\r\n  const resetHandler = () => {\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  const updateHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const entryTags = [];\r\n\r\n    tags?.forEach((tag) => {\r\n      if (document.getElementById(tag._id).checked === true) {\r\n        entryTags.push(tag.name);\r\n      }\r\n    });\r\n    userInfo.personalTags?.forEach((ptag) => {\r\n      if (document.getElementById(ptag).checked === true) {\r\n        entryTags.push(ptag);\r\n      }\r\n    });\r\n\r\n    if (\r\n      isEmpty(title?.trim()) ||\r\n      isEmpty(content?.trim()) ||\r\n      isEmpty(emotion)\r\n    ) {\r\n      visualButtons2();\r\n      return alert(\r\n        \"Por favor, llena todos los datos e indica cómo te sientes hoy\"\r\n      );\r\n    }\r\n\r\n    dispatch(\r\n      updateEntryAction(match.params.id, title, content, entryTags, emotion)\r\n    );\r\n    var num = Math.floor(Math.random() * (3 + 1 - 1) + 1);\r\n\r\n    if (\r\n      setEmotion ===\r\n      \"https://res.cloudinary.com/psicopanas/image/upload/v1635980382/muy_triste_igug5p.png\"\r\n    ) {\r\n      history.push(\"/mensaje-racha\");\r\n    } else if (\r\n      setEmotion ===\r\n      \"https://res.cloudinary.com/psicopanas/image/upload/v1635980384/triste_q55oyc.png\"\r\n    ) {\r\n      history.push(\"/mensaje-triste\");\r\n    } else if (\r\n      setEmotion ===\r\n      \"https://res.cloudinary.com/psicopanas/image/upload/v1635980384/regular_wr2r0j.png\"\r\n    ) {\r\n      history.push(\"/mensaje-positivo\");\r\n    } else if (\r\n      setEmotion ===\r\n      \"https://res.cloudinary.com/psicopanas/image/upload/v1635980381/feliz_vw1muh.png\"\r\n    ) {\r\n      history.push(\"/mensaje-feliz\");\r\n    } else {\r\n      history.push(\"/mensaje-muy-feliz\");\r\n    }\r\n    resetHandler();\r\n  };\r\n\r\n  const visualButtons = (id, icon) => {\r\n    emotions?.forEach((emotion) => {\r\n      if (emotion._id !== id) {\r\n        if (emotion._id === \"6169efd6152f0e9299ff6810\") {\r\n          document\r\n            .getElementById(emotion._id)\r\n            ?.setAttribute(\r\n              \"src\",\r\n              \"https://res.cloudinary.com/psicopanas/image/upload/v1635985141/1_1_vnfebt.png\"\r\n            );\r\n        } else if (emotion._id === \"616b11348f059d3c912e9943\") {\r\n          document\r\n            .getElementById(emotion._id)\r\n            ?.setAttribute(\r\n              \"src\",\r\n              \"https://res.cloudinary.com/psicopanas/image/upload/v1635985141/2_1_vvg93g.png\"\r\n            );\r\n        } else if (emotion._id === \"616b11858f059d3c912e9944\") {\r\n          document\r\n            .getElementById(emotion._id)\r\n            ?.setAttribute(\r\n              \"src\",\r\n              \"https://res.cloudinary.com/psicopanas/image/upload/v1635985145/3_1_gzqzm7.png\"\r\n            );\r\n        } else if (emotion._id === \"616b11b48f059d3c912e9945\") {\r\n          document\r\n            .getElementById(emotion._id)\r\n            ?.setAttribute(\r\n              \"src\",\r\n              \"https://res.cloudinary.com/psicopanas/image/upload/v1635985142/4_1_ztqqc8.png\"\r\n            );\r\n        } else if (emotion._id === \"616b11ec8f059d3c912e9946\") {\r\n          document\r\n            .getElementById(emotion._id)\r\n            ?.setAttribute(\r\n              \"src\",\r\n              \"https://res.cloudinary.com/psicopanas/image/upload/v1635985142/5_1_pvoqjq.png\"\r\n            );\r\n        }\r\n      } else {\r\n        document.getElementById(emotion._id)?.setAttribute(\"src\", icon);\r\n      }\r\n    });\r\n  };\r\n\r\n  const visualButtons2 = () => {\r\n    emotions?.forEach((emotion) => {\r\n      if (emotion._id === \"6169efd6152f0e9299ff6810\") {\r\n        document\r\n          .getElementById(emotion._id)\r\n          ?.setAttribute(\r\n            \"src\",\r\n            \"https://res.cloudinary.com/psicopanas/image/upload/v1635980383/muy_feliz_cycatm.png\"\r\n          );\r\n      } else if (emotion._id === \"616b11348f059d3c912e9943\") {\r\n        document\r\n          .getElementById(emotion._id)\r\n          ?.setAttribute(\r\n            \"src\",\r\n            \"https://res.cloudinary.com/psicopanas/image/upload/v1635980381/feliz_vw1muh.png\"\r\n          );\r\n      } else if (emotion._id === \"616b11858f059d3c912e9944\") {\r\n        document\r\n          .getElementById(emotion._id)\r\n          ?.setAttribute(\r\n            \"src\",\r\n            \"https://res.cloudinary.com/psicopanas/image/upload/v1635980384/regular_wr2r0j.png\"\r\n          );\r\n      } else if (emotion._id === \"616b11b48f059d3c912e9945\") {\r\n        document\r\n          .getElementById(emotion._id)\r\n          ?.setAttribute(\r\n            \"src\",\r\n            \"https://res.cloudinary.com/psicopanas/image/upload/v1635980384/triste_q55oyc.png\"\r\n          );\r\n      } else if (emotion._id === \"616b11ec8f059d3c912e9946\") {\r\n        document\r\n          .getElementById(emotion._id)\r\n          ?.setAttribute(\r\n            \"src\",\r\n            \"https://res.cloudinary.com/psicopanas/image/upload/v1635980382/muy_triste_igug5p.png\"\r\n          );\r\n      }\r\n    });\r\n  };\r\n\r\n  function isEmpty(str) {\r\n    return !str || 0 === str.length;\r\n  }\r\n\r\n  return (\r\n    <MainScreen title={moment(date).format(\"YYYY-DD-MM\")}>\r\n      <Card className=\"no-background\">\r\n        <Card.Body>\r\n          <Form onSubmit={updateHandler}>\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label className=\"subtitle-text-blue\">\r\n                Ponle un título a tu entrada\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                className=\"plain-text\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label className=\"subtitle-text-blue\">\r\n                ¿Cómo te sientes?\r\n              </Form.Label>\r\n              <div className=\"box-emotions-container\">\r\n                <div className=\"box-emotions\">\r\n                  {loading3 && <Loading size={25} />}\r\n                  {emotions?.map((emotion) => (\r\n                    <div\r\n                      onClick={(e) => {\r\n                        visualButtons(emotion._id, emotion.icon);\r\n                        setEmotion(emotion.icon);\r\n                      }}\r\n                      className=\"emotion-holder\"\r\n                    >\r\n                      <img\r\n                        id={emotion._id}\r\n                        src={emotion.icon}\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        alt={emotion.name}\r\n                      />\r\n                      <div className=\"centered-text\">{emotion.name}</div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label className=\"subtitle-text-blue\">\r\n                ¿Qué te hizo sentir así?\r\n              </Form.Label>\r\n              {loading2 ? (\r\n                <Loading size={25} />\r\n              ) : (\r\n                <Container className=\"white-background\">\r\n                  <Row>\r\n                    <Col>\r\n                      <div className=\"flex-container\">\r\n                        <p className=\"subtitle-text-soft-blue\">Deberes</p>\r\n                      </div>\r\n                      {tags\r\n                        ?.filter((tag) => tag.group === \"Deberes\")\r\n                        .map((tag) => (\r\n                          <div>\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              id={tag._id}\r\n                              style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                            >\r\n                              <Form.Check.Label\r\n                                style={{\r\n                                  color: \"#2c2c2c\",\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                                className=\"checkbox\"\r\n                              >\r\n                                <Form.Check.Input type=\"checkbox\" isValid />\r\n                                <span class=\"check\">{tag.name}</span>\r\n                              </Form.Check.Label>\r\n                            </Form.Check>\r\n                          </div>\r\n                        ))}\r\n                    </Col>\r\n                    <Col>\r\n                      <div className=\"flex-container\">\r\n                        <p className=\"subtitle-text-soft-blue\">Hobbies</p>\r\n                      </div>\r\n                      {tags\r\n                        ?.filter((tag) => tag.group === \"Hobbies\")\r\n                        .map((tag) => (\r\n                          <div>\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              id={tag._id}\r\n                              style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                            >\r\n                              <Form.Check.Label\r\n                                style={{\r\n                                  color: \"#2c2c2c\",\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                                className=\"checkbox\"\r\n                              >\r\n                                <Form.Check.Input type=\"checkbox\" isValid />\r\n                                <span class=\"check\">{tag.name}</span>\r\n                              </Form.Check.Label>\r\n                            </Form.Check>\r\n                          </div>\r\n                        ))}\r\n                    </Col>\r\n                    <Col>\r\n                      <div className=\"flex-container\">\r\n                        <p className=\"subtitle-text-soft-blue\">Emociones</p>\r\n                      </div>\r\n                      {tags\r\n                        ?.filter((tag) => tag.group === \"Emociones\")\r\n                        .map((tag) => (\r\n                          <div>\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              id={tag._id}\r\n                              style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                            >\r\n                              <Form.Check.Label\r\n                                style={{\r\n                                  color: \"#2c2c2c\",\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                                className=\"checkbox\"\r\n                              >\r\n                                <Form.Check.Input type=\"checkbox\" isValid />\r\n                                <span class=\"check\">{tag.name}</span>\r\n                              </Form.Check.Label>\r\n                            </Form.Check>\r\n                          </div>\r\n                        ))}\r\n                    </Col>\r\n                    <Col>\r\n                      <div className=\"flex-container\">\r\n                        <p className=\"subtitle-text-soft-blue\">Social</p>\r\n                      </div>\r\n                      {tags\r\n                        ?.filter((tag) => tag.group === \"Social\")\r\n                        .map((tag) => (\r\n                          <div>\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              id={tag._id}\r\n                              style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                            >\r\n                              <Form.Check.Label\r\n                                style={{\r\n                                  color: \"#2c2c2c\",\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                                className=\"checkbox\"\r\n                              >\r\n                                <Form.Check.Input type=\"checkbox\" isValid />\r\n                                <span class=\"check\">{tag.name}</span>\r\n                              </Form.Check.Label>\r\n                            </Form.Check>\r\n                          </div>\r\n                        ))}\r\n                    </Col>\r\n                    <Col>\r\n                      <div className=\"flex-container\">\r\n                        <p className=\"subtitle-text-soft-blue\">Salud</p>\r\n                      </div>\r\n                      {tags\r\n                        ?.filter((tag) => tag.group === \"Salud\")\r\n                        .map((tag) => (\r\n                          <div>\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              id={tag._id}\r\n                              style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                            >\r\n                              <Form.Check.Label\r\n                                style={{\r\n                                  color: \"#2c2c2c\",\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                                className=\"checkbox\"\r\n                              >\r\n                                <Form.Check.Input type=\"checkbox\" isValid />\r\n                                <span class=\"check\">{tag.name}</span>\r\n                              </Form.Check.Label>\r\n                            </Form.Check>\r\n                          </div>\r\n                        ))}\r\n                    </Col>\r\n                    <Col>\r\n                      <div className=\"flex-container\">\r\n                        <p className=\"subtitle-text-soft-blue\">\r\n                          Personalizadas\r\n                        </p>\r\n                      </div>\r\n                      {mitad.map((ptag) => (\r\n                        <div>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id={ptag}\r\n                            style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                          >\r\n                            <Form.Check.Label\r\n                              style={{\r\n                                color: \"#2c2c2c\",\r\n                                fontWeight: \"bold\",\r\n                              }}\r\n                              className=\"checkbox\"\r\n                            >\r\n                              <Form.Check.Input type=\"checkbox\" isValid />\r\n                              <span class=\"check\">{ptag}</span>\r\n                            </Form.Check.Label>\r\n                          </Form.Check>\r\n                        </div>\r\n                      ))}\r\n                    </Col>\r\n                    {userInfo?.isPremium ? (\r\n                      <Col>\r\n                        <div className=\"flex-container\">\r\n                          <p className=\"subtitle-text-soft-blue\">Premium</p>\r\n                        </div>\r\n                        {mitad2.map((ptag) => (\r\n                          <div>\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              id={ptag}\r\n                              style={{ margin: \"5px\", cursor: \"pointer\" }}\r\n                            >\r\n                              <Form.Check.Label\r\n                                style={{\r\n                                  color: \"#2c2c2c\",\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                                className=\"checkbox\"\r\n                              >\r\n                                <Form.Check.Input type=\"checkbox\" isValid />\r\n                                <span class=\"check\">{ptag}</span>\r\n                              </Form.Check.Label>\r\n                            </Form.Check>\r\n                          </div>\r\n                        ))}\r\n                      </Col>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </Row>\r\n                </Container>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label className=\"subtitle-text-blue\">\r\n                Cuéntanos mas sobre eso\r\n              </Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={content}\r\n                rows={4}\r\n                onChange={(e) => setContent(e.target.value)}\r\n                className=\"plain-text\"\r\n              />\r\n            </Form.Group>\r\n\r\n            {loading && <Loading size={50} />}\r\n\r\n            <Row>\r\n              <Col>\r\n                <Link to=\"/authDiario\">\r\n                  <Button variant=\"primary\" className=\"button-all-page\">\r\n                    Volver al diario\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  className=\"button-all-page\"\r\n                >\r\n                  Guardar cambios\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default UpdateEntryPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport { Button, Card, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport {\r\n  diarySetNoSecurity,\r\n  diarySetPersonalStats,\r\n  diarySetSecurity,\r\n} from \"../../actions/userActions\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst DiaryConfigPage = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const [password] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [message2] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [personalTags, setPersonalTags] = useState(null);\r\n  const [diarySecurity, setDiarySecurity] = useState(\"\");\r\n  const [diaryPassword, setDiaryPassword] = useState(\"\");\r\n  const [confirmdiarypassword, setConfirmDiaryPassword] = useState(\"\");\r\n  const [updateDiaryPassword, setUpdateDiaryPassword] = useState(\"\");\r\n  const [dataTag1, setTag1] = useState(\"\");\r\n  const [dataTag2, setTag2] = useState(\"\");\r\n  const [dataTag3, setTag3] = useState(\"\");\r\n  const [dataTag4, setTag4] = useState(\"\");\r\n  const [dataTag5, setTag5] = useState(\"\");\r\n  const [dataTag6, setTag6] = useState(\"\");\r\n  const [dataTag7, setTag7] = useState(\"\");\r\n  const [dataTag8, setTag8] = useState(\"\");\r\n  const [dataTag9, setTag9] = useState(\"\");\r\n  const [dataTag10, setTag10] = useState(\"\");\r\n\r\n  const diaryAuth = useSelector((state) => state.diaryAuth);\r\n  const { successDiary } = diaryAuth;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      } else if (\r\n        (successDiary === false || !successDiary) &&\r\n        userInfo.diarySecurity === true\r\n      ) {\r\n        history.push(\"/authDiario\");\r\n      }\r\n      setName(userInfo.name);\r\n      setEmail(userInfo.email);\r\n      setPersonalTags(userInfo.personalTags);\r\n      setDiarySecurity(userInfo.diarySecurity);\r\n      setDiaryPassword(userInfo.diaryPassword);\r\n      setTag1(userInfo.personalTags[0]);\r\n      setTag2(userInfo.personalTags[1]);\r\n      setTag3(userInfo.personalTags[2]);\r\n      setTag4(userInfo.personalTags[3]);\r\n      setTag5(userInfo.personalTags[4]);\r\n      setTag6(userInfo.personalTags[5]);\r\n      setTag7(userInfo.personalTags[6]);\r\n      setTag8(userInfo.personalTags[7]);\r\n      setTag9(userInfo.personalTags[8]);\r\n      setTag10(userInfo.personalTags[9]);\r\n    }\r\n  }, [history, userInfo, successDiary]);\r\n\r\n  const submitHandlerSecurity = async (e) => {\r\n    e.preventDefault();\r\n    if (isEmpty(diaryPassword) || isEmpty(confirmdiarypassword)) {\r\n      setMessage(\"Llene los campos, no se aceptan caracteres en blanco\");\r\n    } else if (diaryPassword !== confirmdiarypassword) {\r\n      setMessage(\"Las contraseñas no coinciden\");\r\n    } else {\r\n      dispatch(\r\n        diarySetSecurity({\r\n          _id: userInfo._id,\r\n          name,\r\n          email,\r\n          password,\r\n          personalTags,\r\n          diaryPassword,\r\n        })\r\n      );\r\n      setMessage(null);\r\n      history.push(\"/mensaje-configurar-diario\");\r\n    }\r\n  };\r\n\r\n  const submitHandlerNoSecurity = async (e) => {\r\n    e.preventDefault();\r\n    if (diaryPassword === updateDiaryPassword) {\r\n      dispatch(\r\n        diarySetNoSecurity({\r\n          _id: userInfo._id,\r\n          name,\r\n          email,\r\n          password,\r\n          personalTags,\r\n          diaryPassword,\r\n        })\r\n      );\r\n      setMessage(null);\r\n      history.push(\"/mensaje-configurar-diario\");\r\n    } else {\r\n      setMessage(\"Las contraseñas no coinciden\");\r\n    }\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const arrayTags = [];\r\n    if (!isEmpty(dataTag1)) {\r\n      if (!isEmpty(dataTag1.trim())) {\r\n        arrayTags.push(dataTag1.trim());\r\n      }\r\n    }\r\n    if (!isEmpty(dataTag2)) {\r\n      if (!isEmpty(dataTag2.trim())) {\r\n        arrayTags.push(dataTag2.trim());\r\n      }\r\n    }\r\n    if (!isEmpty(dataTag3)) {\r\n      if (!isEmpty(dataTag3.trim())) {\r\n        arrayTags.push(dataTag3.trim());\r\n      }\r\n    }\r\n    if (!isEmpty(dataTag4)) {\r\n      if (!isEmpty(dataTag4.trim())) {\r\n        arrayTags.push(dataTag4.trim());\r\n      }\r\n    }\r\n    if (!isEmpty(dataTag5)) {\r\n      if (!isEmpty(dataTag5.trim())) {\r\n        arrayTags.push(dataTag5.trim());\r\n      }\r\n    }\r\n\r\n    if (!isEmpty(dataTag6)) {\r\n      if (!isEmpty(dataTag6.trim())) {\r\n        arrayTags.push(dataTag6.trim());\r\n      }\r\n    }\r\n\r\n    if (!isEmpty(dataTag7)) {\r\n      if (!isEmpty(dataTag7.trim())) {\r\n        arrayTags.push(dataTag7.trim());\r\n      }\r\n    }\r\n\r\n    if (!isEmpty(dataTag8)) {\r\n      if (!isEmpty(dataTag8.trim())) {\r\n        arrayTags.push(dataTag8.trim());\r\n      }\r\n    }\r\n\r\n    if (!isEmpty(dataTag9)) {\r\n      if (!isEmpty(dataTag9.trim())) {\r\n        arrayTags.push(dataTag9.trim());\r\n      }\r\n    }\r\n\r\n    if (!isEmpty(dataTag10)) {\r\n      if (!isEmpty(dataTag10.trim())) {\r\n        arrayTags.push(dataTag10.trim());\r\n      }\r\n    }\r\n\r\n    dispatch(\r\n      diarySetPersonalStats({\r\n        _id: userInfo._id,\r\n        name,\r\n        email,\r\n        password,\r\n        personalTags: arrayTags,\r\n        diaryPassword,\r\n      })\r\n    );\r\n    history.push(\"/mensaje-configurar-diario\");\r\n  };\r\n\r\n  function isEmpty(str) {\r\n    return !str || 0 === str.length;\r\n  }\r\n\r\n  return (\r\n    <MainScreen title=\"Configuración de mi diario\">\r\n      <Card className=\"no-background\" style={{ margin: \"10px\" }}>\r\n        <Link to=\"/diario\">\r\n          <Button variant=\"primary\" className=\"button-all-page\">\r\n            Volver a mi diario\r\n          </Button>\r\n        </Link>\r\n        <Card className=\"no-background\">\r\n          <Card.Header className=\"no-background-bb\">\r\n            <div className=\"subtitle-text-blue\">Seguridad de mi diario</div>\r\n          </Card.Header>\r\n\r\n          {message && (\r\n            <ErrorMessage variant=\"danger\">\r\n              {\r\n                \"Ha ocurrido un error al cargar los datos de seguridad. Por favor recargue la página\"\r\n              }\r\n            </ErrorMessage>\r\n          )}\r\n          {diarySecurity === false ? (\r\n            <div>\r\n              <Form onSubmit={submitHandlerSecurity} className=\"no-background\">\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label className=\"plain-text\">Contraseña</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"\"\r\n                    onChange={(e) => setDiaryPassword(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"confirmPassword\">\r\n                  <Form.Label className=\"plain-text\">\r\n                    Confirmar contraseña\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"\"\r\n                    onChange={(e) => setConfirmDiaryPassword(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"button-all-page\"\r\n                >\r\n                  Activar seguridad\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Form\r\n                onSubmit={submitHandlerNoSecurity}\r\n                className=\"no-background\"\r\n              >\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label className=\"plain-text\">\r\n                    Contraseña de mi diario\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"\"\r\n                    onChange={(e) => setUpdateDiaryPassword(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"button-all-page\"\r\n                >\r\n                  Desactivar seguridad\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          )}\r\n        </Card>\r\n      </Card>\r\n      <Card className=\"no-background\" style={{ margin: \"10px\" }}>\r\n        {message2 && (\r\n          <ErrorMessage variant=\"info\">\r\n            {\r\n              \"Ocurrió un error al cargar las actividades. Por favor recargue la página\"\r\n            }\r\n          </ErrorMessage>\r\n        )}\r\n        <Card.Header className=\"no-background-bb\">\r\n          <div className=\"subtitle-text-blue\">\r\n            Mis actividades personalizadas\r\n          </div>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={submitHandler}>\r\n            <Row>\r\n              <Col>\r\n                <Form.Group controlId=\"tag1\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={dataTag1}\r\n                    id=\"inputTag1\"\r\n                    onChange={(e) => setTag1(e.target.value)}\r\n                    autocomplete=\"off\"\r\n                    className=\"plain-text\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"tag2\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={dataTag2}\r\n                    id=\"inputTag2\"\r\n                    onChange={(e) => setTag2(e.target.value)}\r\n                    autocomplete=\"off\"\r\n                    className=\"plain-text\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"tag3\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={dataTag3}\r\n                    id=\"inputTag3\"\r\n                    onChange={(e) => setTag3(e.target.value)}\r\n                    autocomplete=\"off\"\r\n                    className=\"plain-text\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"tag4\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={dataTag4}\r\n                    id=\"inputTag4\"\r\n                    onChange={(e) => setTag4(e.target.value)}\r\n                    autocomplete=\"off\"\r\n                    className=\"plain-text\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"tag5\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={dataTag5}\r\n                    id=\"inputTag5\"\r\n                    onChange={(e) => setTag5(e.target.value)}\r\n                    autocomplete=\"off\"\r\n                    className=\"plain-text\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                {userInfo?.isPremium ? (\r\n                  <>\r\n                    <Form.Group controlId=\"tag6\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={dataTag6}\r\n                        id=\"inputTag6\"\r\n                        onChange={(e) => setTag6(e.target.value)}\r\n                        autocomplete=\"off\"\r\n                        className=\"plain-text\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"tag7\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={dataTag7}\r\n                        id=\"inputTag7\"\r\n                        onChange={(e) => setTag7(e.target.value)}\r\n                        autocomplete=\"off\"\r\n                        className=\"plain-text\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"tag8\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={dataTag8}\r\n                        id=\"inputTag8\"\r\n                        onChange={(e) => setTag8(e.target.value)}\r\n                        autocomplete=\"off\"\r\n                        className=\"plain-text\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"tag9\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={dataTag9}\r\n                        id=\"inputTag9\"\r\n                        onChange={(e) => setTag9(e.target.value)}\r\n                        autocomplete=\"off\"\r\n                        className=\"plain-text\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"tag10\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={dataTag10}\r\n                        id=\"inputTag10\"\r\n                        onChange={(e) => setTag10(e.target.value)}\r\n                        autocomplete=\"off\"\r\n                        className=\"plain-text\"\r\n                      />\r\n                    </Form.Group>\r\n                  </>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            <Button variant=\"primary\" type=\"submit\" className=\"button-all-page\">\r\n              Guardar cambios en mis actividades\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default DiaryConfigPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { authDiary } from \"../../actions/userActions\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst AuthDiaryPage = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const [tryDiaryPassword, setTryDiaryPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      } else if (userInfo.diarySecurity === false) {\r\n        dispatch(authDiary(true));\r\n        history.push(\"/diario\");\r\n      } else {\r\n        dispatch(authDiary(false));\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (isEmpty(tryDiaryPassword)) {\r\n      setMessage(\"Ingrese la contraseña, no se aceptan caracteres en blanco\");\r\n    } else if (userInfo.diaryPassword !== tryDiaryPassword) {\r\n      setMessage(\"La contraseña no es la correcta\");\r\n    } else {\r\n      setMessage(null);\r\n      dispatch(authDiary(true));\r\n      history.push(\"/diario\");\r\n    }\r\n  };\r\n\r\n  function isEmpty(str) {\r\n    if (/\\s/.test(str)) {\r\n      return true;\r\n    }\r\n    return !str || 0 === str.length;\r\n  }\r\n\r\n  return (\r\n    <MainScreen title=\"Diario\">\r\n      {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n      <div className=\"subtitle-text-blue\">Bienvenido {userInfo.name}</div>\r\n      <div>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label className=\"plain-text\">\r\n              Introduzca la contraseña de su diario\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"\"\r\n              onChange={(e) => setTryDiaryPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button className=\"button\" variant=\"primary\" type=\"submit\">\r\n            Continuar\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default AuthDiaryPage;\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nclass EstadisticasColumna extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: props.chartData,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Bar\r\n          data={this.state.chartData}\r\n          width={100}\r\n          height={50}\r\n          options={\r\n            {\r\n              // title:{\r\n              //     display:true,\r\n              //     text:\"Estado de animo\",\r\n              //     fontsSize:{25}\r\n              // },\r\n              // legend:{\r\n              //     display:true,\r\n              //     position:\"right\"\r\n              // }\r\n            }\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EstadisticasColumna;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport EstadisticaColumna from \"../../components/Estadisticas/EstadisticasColumna\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getStats,\r\n  getTagStats,\r\n  getMonthStats,\r\n} from \"../../actions/entryActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst Estadisticas = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const stats = useSelector((state) => state.stats);\r\n  const { loading, error, data: datum } = stats;\r\n  const monthStats = useSelector((state) => state.monthStats);\r\n  const { data: datumMonth } = monthStats;\r\n  const tagStags = JSON.parse(localStorage.getItem(\"statsTags\"));\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const diaryAuth = useSelector((state) => state.diaryAuth);\r\n  const { successDiary } = diaryAuth;\r\n\r\n  const [showTop, setShowTop] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getStats());\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      } else if (\r\n        (successDiary === false || !successDiary) &&\r\n        userInfo.diarySecurity === true\r\n      ) {\r\n        history.push(\"/authDiario\");\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, successDiary]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTagStats());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getMonthStats());\r\n  }, [dispatch]);\r\n\r\n  let jsonData = null;\r\n  if (datum !== undefined) {\r\n    jsonData = {\r\n      labels: [\"Muy bien\", \"Bien\", \"Normal\", \"Mal\", \"Muy mal\"],\r\n      datasets: [\r\n        {\r\n          label: \"Numero de entradas por emoción\",\r\n          data: [datum[0], datum[1], datum[2], datum[3], datum[4]],\r\n          backgroundColor: [\r\n            \"#90d4de\",\r\n            \"#90d4de\",\r\n            \"#90d4de\",\r\n            \"#90d4de\",\r\n            \"#90d4de\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  let jsonData2 = null;\r\n  if (datumMonth !== undefined) {\r\n    jsonData2 = {\r\n      labels: [\"Muy bien\", \"Bien\", \"Normal\", \"Mal\", \"Muy mal\"],\r\n      datasets: [\r\n        {\r\n          label: \"Numero de entradas por emoción\",\r\n          data: [\r\n            datumMonth[0],\r\n            datumMonth[1],\r\n            datumMonth[2],\r\n            datumMonth[3],\r\n            datumMonth[4],\r\n          ],\r\n          backgroundColor: [\r\n            \"#90d4de\",\r\n            \"#90d4de\",\r\n            \"#90d4de\",\r\n            \"#90d4de\",\r\n            \"#90d4de\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  const emotion = () => {\r\n    const pond =\r\n      5 * datum[0] + 4 * datum[1] + 3 * datum[2] + 2 * datum[3] + 1 * datum[4];\r\n\r\n    const sum = datum[0] + datum[1] + datum[2] + datum[3] + datum[4];\r\n\r\n    const promedio = Math.round(pond / sum);\r\n\r\n    if (promedio === 5) return \"Muy Bien\";\r\n    else if (promedio === 4) return \"Bien\";\r\n    else if (promedio === 3) return \"Normal\";\r\n    else if (promedio === 2) return \"Mal\";\r\n    else if (promedio === 1) return \"Muy Mal\";\r\n  };\r\n\r\n  const emotion2 = () => {\r\n    const pond2 =\r\n      5 * datumMonth[0] +\r\n      4 * datumMonth[1] +\r\n      3 * datumMonth[2] +\r\n      2 * datumMonth[3] +\r\n      1 * datumMonth[4];\r\n\r\n    const sum2 =\r\n      datumMonth[0] +\r\n      datumMonth[1] +\r\n      datumMonth[2] +\r\n      datumMonth[3] +\r\n      datumMonth[4];\r\n\r\n    const promedio2 = Math.round(pond2 / sum2);\r\n\r\n    if (promedio2 === 5) return \"Muy Bien\";\r\n    else if (promedio2 === 4) return \"Bien\";\r\n    else if (promedio2 === 3) return \"Normal\";\r\n    else if (promedio2 === 2) return \"Mal\";\r\n    else if (promedio2 === 1) return \"Muy Mal\";\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Estadísticas de ánimo\">\r\n      {error && (\r\n        <ErrorMessage variant=\"danger\">\r\n          {\r\n            \"Ocurrió un error al cargar las estadísticas. Por favor recargue la página\"\r\n          }\r\n        </ErrorMessage>\r\n      )}\r\n      {loading && <Loading />}\r\n      <div>\r\n        {datum ? (\r\n          <>\r\n            <Container className=\"white-background\">\r\n              <Row>\r\n                <Col md={3} className=\"blue-background\">\r\n                  {userInfo?.isPremium && !showTop ? (\r\n                    <Col md=\"auto\" className=\"blue-background\">\r\n                      <Button\r\n                        onClick={(e) => {\r\n                          setShowTop(true);\r\n                        }}\r\n                        className=\"button-all-page\"\r\n                      >\r\n                        Mostrar más\r\n                      </Button>\r\n                      <Row\r\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                      >\r\n                        <div className=\"subtitle-centered-text-white\">\r\n                          Top 10 de Actividades\r\n                        </div>\r\n                      </Row>\r\n                      {tagStags ? (\r\n                        <>\r\n                          <Row>\r\n                            <Col>\r\n                              <div className=\"subtitle-text-soft-white-right\">\r\n                                Nombre\r\n                              </div>\r\n                            </Col>\r\n                            <Col>\r\n                              <div className=\"subtitle-text-soft-white\">\r\n                                Veces realizada\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                          {tagStags\r\n                            .sort((a, b) => {\r\n                              if (a.value > b.value) {\r\n                                return -1;\r\n                              }\r\n                              if (a.value < b.value) {\r\n                                return 1;\r\n                              }\r\n                              return 0;\r\n                            })\r\n                            .slice(0, 9)\r\n                            .map((ptag) => (\r\n                              <Row style={{ borderTop: \"solid 1px #f6f6f6\" }}>\r\n                                <Col className=\"plain-white-text-right\">\r\n                                  <div>{ptag.name}</div>\r\n                                </Col>\r\n                                <Col className=\"plain-white-text\">\r\n                                  <div>{ptag.value} veces</div>\r\n                                </Col>\r\n                              </Row>\r\n                            ))}\r\n                        </>\r\n                      ) : (\r\n                        <Loading />\r\n                      )}\r\n                    </Col>\r\n                  ) : (\r\n                    <Col md=\"auto\" className=\"blue-background\">\r\n                      <Button\r\n                        onClick={(e) => {\r\n                          setShowTop(false);\r\n                        }}\r\n                        className=\"button-all-page\"\r\n                      >\r\n                        Mostrar menos\r\n                      </Button>\r\n                      <Row\r\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                      >\r\n                        <div className=\"subtitle-centered-text-white\">\r\n                          Todas las Actividades\r\n                        </div>\r\n                      </Row>\r\n                      {tagStags ? (\r\n                        <>\r\n                          <Row>\r\n                            <Col>\r\n                              <div className=\"subtitle-text-soft-white-right\">\r\n                                Nombre\r\n                              </div>\r\n                            </Col>\r\n                            <Col>\r\n                              <div className=\"subtitle-text-soft-white\">\r\n                                Veces realizada\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                          {tagStags\r\n                            .sort((a, b) => {\r\n                              if (a.value > b.value) {\r\n                                return -1;\r\n                              }\r\n                              if (a.value < b.value) {\r\n                                return 1;\r\n                              }\r\n                              return 0;\r\n                            })\r\n                            .map((ptag) => (\r\n                              <Row style={{ borderTop: \"solid 1px #f6f6f6\" }}>\r\n                                <Col className=\"plain-white-text-right\">\r\n                                  <div>{ptag.name}</div>\r\n                                </Col>\r\n                                <Col className=\"plain-white-text\">\r\n                                  <div>{ptag.value} veces</div>\r\n                                </Col>\r\n                              </Row>\r\n                            ))}\r\n                        </>\r\n                      ) : (\r\n                        <Loading />\r\n                      )}\r\n                    </Col>\r\n                  )}\r\n                </Col>\r\n                <Col>\r\n                  {userInfo?.isPremium === true && datumMonth !== undefined ? (\r\n                    <>\r\n                      <div className=\"subtitle-centered-text-blue\">\r\n                        Estadísticas del Mes\r\n                      </div>\r\n                      <div className=\"subtitle-centered-text-soft-blue\">\r\n                        Emoción promedio: {emotion2()}\r\n                      </div>\r\n                      <EstadisticaColumna\r\n                        chartData={jsonData2}\r\n                        style={{\r\n                          padding: \"0\",\r\n                          margin: \"0\",\r\n                        }}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  <div className=\"subtitle-centered-text-blue\">\r\n                    Estadísticas del Año\r\n                  </div>\r\n                  <div className=\"subtitle-centered-text-soft-blue\">\r\n                    Emoción promedio: {emotion()}\r\n                  </div>\r\n                  <EstadisticaColumna\r\n                    chartData={jsonData}\r\n                    style={{\r\n                      padding: \"0\",\r\n                      margin: \"0\",\r\n                    }}\r\n                  />\r\n                  <Link to=\"/diario\">\r\n                    <Button variant=\"primary\" className=\"button-all-page\">\r\n                      Volver a mi diario\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default Estadisticas;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Container, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport Goti from \"../../images/Goti.png\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst MessageConfigDiaryPage = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      }\r\n    }\r\n  });\r\n  return (\r\n    <MainScreen title=\"Configuración de diario\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"Centrado\">\r\n            <p className=\"subtitle-text-blue\">Se han guardado tus cambios</p>\r\n          </div>\r\n          <div className=\"Centrado\">\r\n            <img src={Goti} width=\"200\" height=\"250\" alt=\"Goti\" />\r\n          </div>\r\n        </Row>\r\n        <Row>\r\n          <Link to=\"/authdiario\">\r\n            <Button className=\"button-all-page\">Continuar</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default MessageConfigDiaryPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport Goti from \"../../images/Goti.png\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst MessageBadStreak = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      }\r\n    }\r\n  });\r\n\r\n  const consejo = () => {\r\n    var num = Math.floor(Math.random() * (3 + 1 - 1) + 1);\r\n    if (num === 1) {\r\n      return \"No dudes en buscar apoyo. Recuerda darte tu tiempo para digerir lo que está sucediendo\";\r\n    } else if (num === 2) {\r\n      return \"No dudes en buscar apoyo. Hay un mar de posibilidades en esta vida, tómatelo con calma y respira\";\r\n    } else {\r\n      return \"No dudes en buscar apoyo. Trata de llevar las cosas con calma\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Siento que te sientas así\">\r\n      <Container>\r\n        <Col>\r\n          <div className=\"Centrado\">\r\n            <p className=\"subtitle-text-blue\">{consejo()}</p>\r\n          </div>\r\n\r\n          <div className=\"Centrado\">\r\n            <img src={Goti} width=\"200\" height=\"250\" alt=\"Goti\" />\r\n          </div>\r\n        </Col>\r\n        <Row>\r\n          <Link to=\"/authdiario\">\r\n            <Button className=\"button-all-page\">Continuar</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default MessageBadStreak;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Container, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport Goti from \"../../images/Goti.png\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst Message404 = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n  return (\r\n    <MainScreen title=\"¿Te has perdido?\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"Centrado\">\r\n            <p className=\"subtitle-text-blue\">Vuelve a tu diario</p>\r\n          </div>\r\n          <div className=\"Centrado\">\r\n            <img src={Goti} width=\"200\" height=\"250\" alt=\"Goti\" />\r\n          </div>\r\n        </Row>\r\n        <Row>\r\n          <Link to=\"/authdiario\">\r\n            <Button className=\"button-all-page\">Continuar</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default Message404;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport emailjs from \"emailjs-com\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Card, Container, Form, Col, Row } from \"react-bootstrap\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport \"../../styles/App.css\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nconst PaySreen = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [nombre, setnombre] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [telefono, settelefono] = useState(\"\");\r\n  const [foto, setFoto] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      }\r\n    }\r\n  });\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (nombre === \"\" || email === \"\" || telefono === \"\" || foto === \"\") {\r\n      alert(\"ingresa bien todos los campos\");\r\n    } else {\r\n      emailjs\r\n        .send(\r\n          \"service_tcenvkb\",\r\n          \"template_8lzky6r\",\r\n          {\r\n            nombre: nombre,\r\n            id_user: userInfo._id,\r\n            email: email,\r\n            telefono: telefono,\r\n            comprobante: foto,\r\n          },\r\n          \"user_5YxUS0Avd5jMNvVqxzLkf\"\r\n        )\r\n        .then(\r\n          (result) => {\r\n            history.push(\"/mensaje_enviado\");\r\n          },\r\n          (error) => {\r\n            alert(error.text);\r\n          }\r\n        );\r\n\r\n      e.target.reset();\r\n    }\r\n  };\r\n\r\n  const uploadImage = async (e) => {\r\n    if (e.type === \"image/jpeg\" || e.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", e);\r\n      data.append(\"upload_preset\", \"Comprobantes fotos\");\r\n      setloading(true);\r\n      const res = await fetch(\r\n        \"\thttps://api.cloudinary.com/v1_1/dufc61kxr/image/upload\",\r\n        {\r\n          method: \"POST\",\r\n          body: data,\r\n        }\r\n      );\r\n      const file = await res.json();\r\n\r\n      setFoto(file.secure_url);\r\n      setloading(false);\r\n    } else {\r\n      console.log(\"error, no imagen\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Pago Premium\">\r\n      <Container>\r\n        <Row style={{ background: \"#ffffff\", border: \"none\" }}>\r\n          <Col md={3}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <div>\r\n                <div\r\n                  className=\"subtitle-text-blue\"\r\n                  style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\r\n                >\r\n                  ¿Cómo me hago Premium?\r\n                </div>\r\n                <div\r\n                  className=\"plain-justify-text\"\r\n                  style={{ fontWeight: \"bold\" }}\r\n                >\r\n                  <div>\r\n                    Haz una transferencia bancaria de 10Bs a la siguiente\r\n                    cuenta:\r\n                  </div>\r\n                  <p></p>\r\n                  <div>-Número de cuenta: XXXX-XXXX-XXXX-XXXX-XXXX</div>\r\n                  <div>-Tipo de banco: Mercantil</div>\r\n                  <div>-Cedula: 27.516.407</div>\r\n                  <div>-Nombre: PsicoPanas</div>\r\n                  <div>-Telefono: 0414 XXX XXXX</div>\r\n                  <div>-Correo: psicopanasdmt@gmail.com</div>\r\n                  <p></p>\r\n                </div>\r\n                <div\r\n                  className=\"plain-justify-text\"\r\n                  style={{ fontWeight: \"bold\" }}\r\n                >\r\n                  <div>\r\n                    Llenar el formulario y adjunta el comprobante de pago. Te\r\n                    informaremos a tu correo cuando el pago esté confirmado y\r\n                    podrás disfrutar los beneficios\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <Card style={{ background: \"none\", border: \"none\" }}>\r\n              <Card.Body style={{ background: \"none\", border: \"none\" }}>\r\n                <Form\r\n                  onSubmit={sendEmail}\r\n                  style={{ background: \"none\", border: \"none\" }}\r\n                >\r\n                  <Form.Group controlId=\"title\">\r\n                    <Form.Label className=\"plain-text\">Nombre</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Marco Polo\"\r\n                      value={nombre}\r\n                      onChange={(e) => setnombre(e.target.value)}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"title\">\r\n                    <Form.Label className=\"plain-text\">\r\n                      Correo electrónico\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"correo@gmail.com\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"title\">\r\n                    <Form.Label className=\"plain-text\">Teléfono</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"04## 222 2222\"\r\n                      value={telefono}\r\n                      onChange={(e) => settelefono(e.target.value)}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formFileMultiple\" className=\"mb-3\">\r\n                    <Form.Label className=\"plain-text\">\r\n                      Foto del pago\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"file\"\r\n                      name=\"file\"\r\n                      onChange={(e) => uploadImage(e.target.files[0])}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  {loading ? (\r\n                    <>\r\n                      <div className=\"plain-centered-text\">\r\n                        Esperaremos a que subas la imagen\r\n                      </div>\r\n                      <Loading size={25} />\r\n                    </>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"button-all-page\"\r\n                    >\r\n                      Enviar comprobante\r\n                    </Button>\r\n                  )}\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default PaySreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Col, Container, Form, Image, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport moment from \"moment\";\r\n\r\nconst ProfilePage = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <MainScreen title=\"Perfil\">\r\n      <Container>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form>\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label className=\"plain-text\">\r\n                  Nombre de usuario\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={userInfo?.name}\r\n                  disabled\r\n                  className=\"plain-text\"\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label className=\"plain-text\">\r\n                  Correo electrónico\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={userInfo?.email}\r\n                  disabled\r\n                  className=\"plain-text\"\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label className=\"plain-text\">\r\n                  Fecha de registro\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={moment(userInfo?.createdAt).format(\"YYYY-DD-MM\")}\r\n                  disabled\r\n                  className=\"plain-text\"\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Button href=\"authDiario\" className=\"button-all-page\">\r\n                    Volver al diario\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  <Button className=\"button-all-page\" href=\"/modificarPerfil\">\r\n                    Modificar Perfil\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Image\r\n              src={userInfo?.profilePicture}\r\n              alt=\"\"\r\n              className=\"profilePic\"\r\n              width=\"300\"\r\n              height=\"300\"\r\n              alt=\"Foto de perfil\"\r\n              roundedCircle\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateProfile } from \"../../actions/userActions\";\r\nimport { Form, Button, Row, Col, Image } from \"react-bootstrap\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst UpdateProfilePage = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [profilePicture, setProfilePicture] = useState();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [picMessage, setPicMessage] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { loading, error, success } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      } else {\r\n        setName(userInfo.name);\r\n        setProfilePicture(userInfo.profilePicture);\r\n      }\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const postDetails = (pics) => {\r\n    setPicMessage(null);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"psicopanas\");\r\n      data.append(\"cloud_name\", \"psicopanas\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/psicopanas/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setProfilePicture(data.url.toString());\r\n          console.log(profilePicture);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      return setPicMessage(\"Por favor, seleccione una imagen\");\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateProfile({ name, password, profilePicture }));\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Modificar Perfil\">\r\n      <Row>\r\n        <Col md={6}>\r\n          <Form onSubmit={submitHandler}>\r\n            {loading && <Loading />}\r\n            {success && (\r\n              <ErrorMessage variant=\"success\">\r\n                Se han actualizado los datos\r\n              </ErrorMessage>\r\n            )}\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label className=\"plain-text\">Nombre de usuario</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                autocomplete=\"off\"\r\n                className=\"plain-text\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label className=\"plain-text\">Contraseña nueva</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                autocomplete=\"off\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <Form.Label className=\"plain-text\">\r\n                Confirme la nueva contraseña\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                autocomplete=\"off\"\r\n              ></Form.Control>\r\n            </Form.Group>{\" \"}\r\n            {picMessage && (\r\n              <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n            )}\r\n            <Form.Group controlId=\"pic\">\r\n              <Form.Label className=\"plain-text\">\r\n                Cambie la foto de perfil\r\n              </Form.Label>\r\n              <Form.File\r\n                onChange={(e) => postDetails(e.target.files[0])}\r\n                id=\"custom-file\"\r\n                type=\"image/png\"\r\n                label=\"Seleccione una imagen de perfil\"\r\n                custom\r\n              />\r\n            </Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Button href=\"perfil\" className=\"button-all-page\">\r\n                  Volver al perfil\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type=\"submit\"\r\n                  varient=\"primary\"\r\n                  className=\"button-all-page\"\r\n                >\r\n                  Guardar cambios\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n        <Col\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Image\r\n            src={profilePicture}\r\n            alt={name}\r\n            className=\"profilePic\"\r\n            width=\"300\"\r\n            height=\"300\"\r\n            alt=\"Foto de perfil\"\r\n            roundedCircle\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default UpdateProfilePage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUsers } from \"../../actions/userActions\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst AdminPage = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const getAllUsers = useSelector((state) => state.getAllUsers);\r\n  const { loading, error, usersInfo } = getAllUsers;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo?.isAdmin === false) {\r\n        history.push(\"/\");\r\n      } else {\r\n        dispatch(getUsers());\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <MainScreen title=\"Administrador\">\r\n      <Container className=\"container-no-bg\">\r\n        <Row>\r\n          <div className=\"subtitle-text-blue\">Lista de Usuarios</div>\r\n        </Row>\r\n        {error && (\r\n          <ErrorMessage variant=\"danger\">\r\n            {\"Ocurrió un error al cargar la data. Por favor recargue la página\"}\r\n          </ErrorMessage>\r\n        )}\r\n        {loading && <Loading />}\r\n        {usersInfo?.map((user) => (\r\n          <Row className=\"div-admin-page\">\r\n            <Col className=\"plain-text\">{user._id}</Col>\r\n            <Col className=\"plain-text\">{user.email}</Col>\r\n            <Col className=\"plain-text\">Free</Col>\r\n            <Col>\r\n              <Button className=\"button-all-page\" href={`/admin/${user._id}`}>\r\n                Hacer premium\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { changeUserStatus } from \"../../actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst UserUpdateFromAdmin = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === false) {\r\n        history.push(\"/diario\");\r\n      } else if (match.params.id) {\r\n        dispatch(changeUserStatus(match.params.id));\r\n        history.push(\"/admin\");\r\n      }\r\n    }\r\n  }, [dispatch, history]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default UserUpdateFromAdmin;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Container, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport Goti from \"../../images/Goti.png\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst PagoExitoso = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n  return (\r\n    <MainScreen title=\"¡El mensaje fue enviado con exito!\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"Centrado\">\r\n            <p className=\"subtitle-text-blue\">Vuelve a tu diario</p>\r\n          </div>\r\n          <div className=\"Centrado\">\r\n            <img src={Goti} width=\"200\" height=\"250\" alt=\"Goti\" />\r\n          </div>\r\n        </Row>\r\n        <Row>\r\n          <Link to=\"/authdiario\">\r\n            <Button className=\"button-all-page\">Continuar</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default PagoExitoso;\r\n","export const FOROMESSAGE_LIST_REQUEST = \"FOROMESSAGE_LIST_REQUEST\";\r\nexport const FOROMESSAGE_LIST_SUCCESS = \"FOROMESSAGE_LIST_SUCCESS\";\r\nexport const FOROMESSAGE_LIST_FAIL = \"FOROMESSAGE_LIST_FAIL\";\r\n\r\nexport const FOROMESSAGE_CREATE_REQUEST = \"FOROMESSAGE_CREATE_REQUEST\";\r\nexport const FOROMESSAGE_CREATE_SUCCESS = \"FOROMESSAGE_CREATE_SUCCESS\";\r\nexport const FOROMESSAGE_CREATE_FAIL = \"FOROMESSAGE_CREATE_FAIL\";","import {\r\n  FOROMESSAGE_LIST_REQUEST,\r\n  FOROMESSAGE_LIST_SUCCESS,\r\n  FOROMESSAGE_LIST_FAIL,\r\n  FOROMESSAGE_CREATE_REQUEST,\r\n  FOROMESSAGE_CREATE_SUCCESS,\r\n  FOROMESSAGE_CREATE_FAIL,\r\n} from \"../constants/foromessageConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listForomessages = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: FOROMESSAGE_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/foromessages\");\r\n\r\n    dispatch({ type: FOROMESSAGE_LIST_SUCCESS, payload: data });\r\n    localStorage.setItem(\"foromessages\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FOROMESSAGE_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createForoMessage =\r\n  (username, message, icon) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FOROMESSAGE_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/foromessages/create`,\r\n        { username, message, icon },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: FOROMESSAGE_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n      window.location.reload(true);\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: FOROMESSAGE_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n","export const FOROMESSAGESALUD_LIST_REQUEST = \"FOROMESSAGESALUD_LIST_REQUEST\";\r\nexport const FOROMESSAGESALUD_LIST_SUCCESS = \"FOROMESSAGESALUD_LIST_SUCCESS\";\r\nexport const FOROMESSAGESALUD_LIST_FAIL = \"FOROMESSAGESALUD_LIST_FAIL\";\r\n\r\nexport const FOROMESSAGESALUD_CREATE_REQUEST = \"FOROMESSAGESALUD_CREATE_REQUEST\";\r\nexport const FOROMESSAGESALUD_CREATE_SUCCESS = \"FOROMESSAGESALUD_CREATE_SUCCESS\";\r\nexport const FOROMESSAGESALUD_CREATE_FAIL = \"FOROMESSAGESALUD_CREATE_FAIL\";","import {\r\n  FOROMESSAGESALUD_LIST_REQUEST,\r\n  FOROMESSAGESALUD_LIST_SUCCESS,\r\n  FOROMESSAGESALUD_LIST_FAIL,\r\n  FOROMESSAGESALUD_CREATE_REQUEST,\r\n  FOROMESSAGESALUD_CREATE_SUCCESS,\r\n  FOROMESSAGESALUD_CREATE_FAIL\r\n} from \"../constants/foromessagesaludConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listForomessagessalud = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: FOROMESSAGESALUD_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/foromessagessalud\");\r\n\r\n    dispatch({ type: FOROMESSAGESALUD_LIST_SUCCESS, payload: data });\r\n    localStorage.setItem(\"foromessagessalud\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FOROMESSAGESALUD_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createForoMessagesalud =\r\n  (username, message, icon) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FOROMESSAGESALUD_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/foromessagessalud/create`,\r\n        { username, message, icon },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: FOROMESSAGESALUD_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n      window.location.reload(true);\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: FOROMESSAGESALUD_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n","export const FOROMESSAGEVIVENCIA_LIST_REQUEST = \"FOROMESSAGEVIVENCIA_LIST_REQUEST\";\r\nexport const FOROMESSAGEVIVENCIA_LIST_SUCCESS = \"FOROMESSAGEVIVENCIA_LIST_SUCCESS\";\r\nexport const FOROMESSAGEVIVENCIA_LIST_FAIL = \"FOROMESSAGEVIVENCIA_LIST_FAIL\";\r\n\r\nexport const FOROMESSAGEVIVENCIA_CREATE_REQUEST = \"FOROMESSAGEVIVENCIA_CREATE_REQUEST\";\r\nexport const FOROMESSAGEVIVENCIA_CREATE_SUCCESS = \"FOROMESSAGEVIVENCIA_CREATE_SUCCESS\";\r\nexport const FOROMESSAGEVIVENCIA_CREATE_FAIL = \"FOROMESSAGEVIVENCIA_CREATE_FAIL\";","import {\r\n  FOROMESSAGEVIVENCIA_LIST_REQUEST,\r\n  FOROMESSAGEVIVENCIA_LIST_SUCCESS,\r\n  FOROMESSAGEVIVENCIA_LIST_FAIL,\r\n  FOROMESSAGEVIVENCIA_CREATE_REQUEST,\r\n  FOROMESSAGEVIVENCIA_CREATE_SUCCESS,\r\n  FOROMESSAGEVIVENCIA_CREATE_FAIL\r\n} from \"../constants/foromessagevivenciaConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listForomessagesvivencias = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: FOROMESSAGEVIVENCIA_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/foromessagesvivencias\");\r\n\r\n    dispatch({ type: FOROMESSAGEVIVENCIA_LIST_SUCCESS, payload: data });\r\n    localStorage.setItem(\"foromessagesvivencias\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FOROMESSAGEVIVENCIA_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createForoMessagevivencia =\r\n  (username, message, icon) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FOROMESSAGEVIVENCIA_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/foromessagesvivencias/create`,\r\n        { username, message, icon },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: FOROMESSAGEVIVENCIA_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n      window.location.reload(true);\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: FOROMESSAGEVIVENCIA_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n","export const FOROMESSAGEHOBBIE_LIST_REQUEST = \"FOROMESSAGEHOBBIE_LIST_REQUEST\";\r\nexport const FOROMESSAGEHOBBIE_LIST_SUCCESS = \"FOROMESSAGEHOBBIE_LIST_SUCCESS\";\r\nexport const FOROMESSAGEHOBBIE_LIST_FAIL = \"FOROMESSAGEHOBBIE_LIST_FAIL\";\r\n\r\nexport const FOROMESSAGEHOBBIE_CREATE_REQUEST = \"FOROMESSAGEHOBBIE_CREATE_REQUEST\";\r\nexport const FOROMESSAGEHOBBIE_CREATE_SUCCESS = \"FOROMESSAGEHOBBIE_CREATE_SUCCESS\";\r\nexport const FOROMESSAGEHOBBIE_CREATE_FAIL = \"FOROMESSAGEHOBBIE_CREATE_FAIL\";","import {\r\n  FOROMESSAGEHOBBIE_LIST_REQUEST,\r\n  FOROMESSAGEHOBBIE_LIST_SUCCESS,\r\n  FOROMESSAGEHOBBIE_LIST_FAIL,\r\n  FOROMESSAGEHOBBIE_CREATE_REQUEST,\r\n  FOROMESSAGEHOBBIE_CREATE_SUCCESS,\r\n  FOROMESSAGEHOBBIE_CREATE_FAIL\r\n} from \"../constants/foromessagehobbieConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listForomessageshobbies = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: FOROMESSAGEHOBBIE_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/foromessageshobbies\");\r\n\r\n    dispatch({ type: FOROMESSAGEHOBBIE_LIST_SUCCESS, payload: data });\r\n    localStorage.setItem(\"foromessageshobbies\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FOROMESSAGEHOBBIE_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createForoMessagehobbie =\r\n  (username, message, icon) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FOROMESSAGEHOBBIE_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/foromessageshobbies/create`,\r\n        { username, message, icon },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: FOROMESSAGEHOBBIE_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n      window.location.reload(true);\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: FOROMESSAGEHOBBIE_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport Media from \"react-media\";\r\nimport {\r\n  listForomessages,\r\n  createForoMessage,\r\n} from \"../../actions/foromessageAction\";\r\nimport {\r\n  listForomessagessalud,\r\n  createForoMessagesalud,\r\n} from \"../../actions/foromessagesaludAction\";\r\nimport {\r\n  listForomessagesvivencias,\r\n  createForoMessagevivencia,\r\n} from \"../../actions/foromessagevivenciaAction\";\r\nimport {\r\n  listForomessageshobbies,\r\n  createForoMessagehobbie,\r\n} from \"../../actions/foromessagehobbieAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { InputGroup, Button, FormControl, Image } from \"react-bootstrap\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst ForoPage = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [content, setContent] = useState(\"\");\r\n  moment.locale(\"es\");\r\n  const imgs = [\r\n    \"https://res.cloudinary.com/psicopanas/image/upload/v1637791867/Anonimo_h4g8dj.png\",\r\n  ];\r\n\r\n  const [chatActual, setChatActual] = useState(\"General\");\r\n\r\n  const foromessageList = useSelector((state) => state.foromessageList);\r\n  const {\r\n    loading: loadingGeneral,\r\n    error: errorGeneral,\r\n    foromessages,\r\n  } = foromessageList;\r\n\r\n  const foromessagesaludList = useSelector(\r\n    (state) => state.foromessagesaludList\r\n  );\r\n  const {\r\n    loading: loadingSalud,\r\n    error: errorSalud,\r\n    foromessagessalud,\r\n  } = foromessagesaludList;\r\n\r\n  const foromessagevivenciaList = useSelector(\r\n    (state) => state.foromessagevivenciaList\r\n  );\r\n  const {\r\n    loading: loadingVivencias,\r\n    error: errorVivencias,\r\n    foromessagesvivencias,\r\n  } = foromessagevivenciaList;\r\n\r\n  const foromessagehobbieList = useSelector(\r\n    (state) => state.foromessagehobbieList\r\n  );\r\n  const {\r\n    loading: loadingHobbies,\r\n    error: errorHobbies,\r\n    foromessageshobbies,\r\n  } = foromessagehobbieList;\r\n\r\n  const [option, setOption] = useState(0);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      }\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(listForomessages());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listForomessagessalud());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listForomessagesvivencias());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listForomessageshobbies());\r\n  }, [dispatch]);\r\n\r\n  function isEmpty(str) {\r\n    return !str || 0 === str.length;\r\n  }\r\n\r\n  const submitHandlerAnon = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isEmpty(content.trim())) {\r\n    } else {\r\n      if (option === 0) {\r\n        dispatch(createForoMessage(\"Anónimo\", content, imgs[0]));\r\n      } else if (option === 1) {\r\n        dispatch(createForoMessagesalud(\"Anónimo\", content, imgs[0]));\r\n      } else if (option === 2) {\r\n        dispatch(createForoMessagevivencia(\"Anónimo\", content, imgs[0]));\r\n      } else if (option === 3) {\r\n        dispatch(createForoMessagehobbie(\"Anónimo\", content, imgs[0]));\r\n      }\r\n\r\n      setContent(\"\");\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isEmpty(content.trim())) {\r\n    } else {\r\n      if (option === 0) {\r\n        dispatch(\r\n          createForoMessage(userInfo.name, content, userInfo.profilePicture)\r\n        );\r\n      } else if (option === 1) {\r\n        dispatch(\r\n          createForoMessagesalud(\r\n            userInfo.name,\r\n            content,\r\n            userInfo.profilePicture\r\n          )\r\n        );\r\n      } else if (option === 2) {\r\n        dispatch(\r\n          createForoMessagevivencia(\r\n            userInfo.name,\r\n            content,\r\n            userInfo.profilePicture\r\n          )\r\n        );\r\n      } else if (option === 3) {\r\n        dispatch(\r\n          createForoMessagehobbie(\r\n            userInfo.name,\r\n            content,\r\n            userInfo.profilePicture\r\n          )\r\n        );\r\n      }\r\n\r\n      setContent(\"\");\r\n    }\r\n  };\r\n\r\n  const forodisplay = () => {\r\n    if (option === 0) {\r\n      return foromessages\r\n        ?.sort((a, b) => {\r\n          if (a.createdAt > b.createdAt) {\r\n            return -1;\r\n          }\r\n          if (a.createdAt < b.createdAt) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        })\r\n        .map((message) => (\r\n          <div key={message._id} style={{ display: \"flex\", margin: \"10px\" }}>\r\n            <div>\r\n              <Image\r\n                src={message.icon}\r\n                width=\"50\"\r\n                height=\"50\"\r\n                style={{ borderRadius: \"100px\" }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"flex-start\",\r\n                marginLeft: \"10px\",\r\n                marginRight: \"5px\",\r\n                marginLeft: \"5px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <p\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"flex-start\",\r\n                    margin: \"0px\",\r\n                    color: \"#053a3f\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"15px\",\r\n                  }}\r\n                >\r\n                  {message.username}\r\n                  <span\r\n                    style={{\r\n                      color: \"#555\",\r\n                      fontWeight: \"normal\",\r\n                      marginLeft: \"10px\",\r\n                    }}\r\n                  >\r\n                    {moment(message.createdAt).fromNow()}\r\n                  </span>\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"flex-start\",\r\n                    margin: \"0px\",\r\n                    fontWeight: \"bold\",\r\n                    backgroundColor: \"#bcf4fc\",\r\n                    borderRadius: \"15%\",\r\n                    paddingLeft: \"5px\",\r\n                    paddingRight: \"5px\",\r\n                  }}\r\n                >\r\n                  {message.message}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ));\r\n    } else if (option === 1) {\r\n      return foromessagessalud\r\n        ?.sort((a, b) => {\r\n          if (a.createdAt > b.createdAt) {\r\n            return -1;\r\n          }\r\n          if (a.createdAt < b.createdAt) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        })\r\n        .map((message) => (\r\n          <div key={message._id} style={{ display: \"flex\", margin: \"10px\" }}>\r\n            <div>\r\n              <Image\r\n                src={message.icon}\r\n                width=\"50\"\r\n                height=\"50\"\r\n                style={{ borderRadius: \"100px\" }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"flex-start\",\r\n                marginLeft: \"10px\",\r\n                marginRight: \"5px\",\r\n                marginLeft: \"5px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <p\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"flex-start\",\r\n                    margin: \"0px\",\r\n                    color: \"#053a3f\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"15px\",\r\n                  }}\r\n                >\r\n                  {message.username}\r\n                  <span\r\n                    style={{\r\n                      color: \"#555\",\r\n                      fontWeight: \"normal\",\r\n                      marginLeft: \"10px\",\r\n                    }}\r\n                  >\r\n                    {moment(message.createdAt).fromNow()}\r\n                  </span>\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"flex-start\",\r\n                    margin: \"0px\",\r\n                    borderRadius: \"15%\",\r\n                    paddingLeft: \"5px\",\r\n                    paddingRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    backgroundColor: \"#bcf4fc\",\r\n                  }}\r\n                >\r\n                  {message.message}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ));\r\n    } else if (option === 2) {\r\n      return foromessagesvivencias\r\n        ?.sort((a, b) => {\r\n          if (a.createdAt > b.createdAt) {\r\n            return -1;\r\n          }\r\n          if (a.createdAt < b.createdAt) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        })\r\n        .map((message) => (\r\n          <div key={message._id} style={{ display: \"flex\", margin: \"10px\" }}>\r\n            <div>\r\n              <Image\r\n                src={message.icon}\r\n                width=\"50\"\r\n                height=\"50\"\r\n                style={{ borderRadius: \"100px\" }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"flex-start\",\r\n                marginLeft: \"10px\",\r\n                marginRight: \"5px\",\r\n                marginLeft: \"5px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <p\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"flex-start\",\r\n                    margin: \"0px\",\r\n                    color: \"#053a3f\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"15px\",\r\n                  }}\r\n                >\r\n                  {message.username}\r\n                  <span\r\n                    style={{\r\n                      color: \"#555\",\r\n                      fontWeight: \"normal\",\r\n                      marginLeft: \"10px\",\r\n                    }}\r\n                  >\r\n                    {moment(message.createdAt).fromNow()}\r\n                  </span>\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"flex-start\",\r\n                    margin: \"0px\",\r\n                    fontWeight: \"bold\",\r\n                    backgroundColor: \"#bcf4fc\",\r\n                    borderRadius: \"15%\",\r\n                    paddingLeft: \"5px\",\r\n                    paddingRight: \"5px\",\r\n                  }}\r\n                >\r\n                  {message.message}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ));\r\n    } else if (option === 3) {\r\n      return foromessageshobbies\r\n        ?.sort((a, b) => {\r\n          if (a.createdAt > b.createdAt) {\r\n            return -1;\r\n          }\r\n          if (a.createdAt < b.createdAt) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        })\r\n        .map((message) => (\r\n          <div key={message._id} style={{ display: \"flex\", margin: \"10px\" }}>\r\n            <div>\r\n              <Image\r\n                src={message.icon}\r\n                width=\"50\"\r\n                height=\"50\"\r\n                style={{ borderRadius: \"100px\" }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"flex-start\",\r\n                marginLeft: \"10px\",\r\n                marginRight: \"5px\",\r\n                marginLeft: \"5px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <p\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"flex-start\",\r\n                    margin: \"0px\",\r\n                    color: \"#053a3f\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"15px\",\r\n                  }}\r\n                >\r\n                  {message.username}\r\n                  <span\r\n                    style={{\r\n                      color: \"#555\",\r\n                      fontWeight: \"normal\",\r\n                      marginLeft: \"10px\",\r\n                    }}\r\n                  >\r\n                    {moment(message.createdAt).fromNow()}\r\n                  </span>\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"flex-start\",\r\n                    margin: \"0px\",\r\n                    fontWeight: \"bold\",\r\n                    backgroundColor: \"#bcf4fc\",\r\n                    borderRadius: \"15%\",\r\n                    paddingLeft: \"5px\",\r\n                    paddingRight: \"5px\",\r\n                  }}\r\n                >\r\n                  {message.message}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Foro\">\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Button\r\n          className=\"button\"\r\n          onClick={(e) => {\r\n            setOption(0);\r\n            setChatActual(\"General\");\r\n          }}\r\n        >\r\n          General\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          className=\"button\"\r\n          onClick={(e) => {\r\n            setOption(1);\r\n            setChatActual(\"de Vivencias\");\r\n          }}\r\n        >\r\n          Vivencias\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          className=\"button\"\r\n          onClick={(e) => {\r\n            setOption(2);\r\n            setChatActual(\"de Salud\");\r\n          }}\r\n        >\r\n          Salud\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          className=\"button\"\r\n          onClick={(e) => {\r\n            setOption(3);\r\n            setChatActual(\"de Hobbies\");\r\n          }}\r\n        >\r\n          Hobbies\r\n        </Button>\r\n      </div>\r\n      {errorGeneral || errorSalud || errorVivencias || errorHobbies ? (\r\n        <ErrorMessage variant=\"danger\">\r\n          {\r\n            \"Hubo un fallo al cargar los mensajes del chat. Por favor recargue la página\"\r\n          }\r\n        </ErrorMessage>\r\n      ) : (\r\n        <div className=\"subtitle-centered-text-blue\">Chat {chatActual}</div>\r\n      )}\r\n      <div className=\"foro_main_window\">\r\n        <div className=\"chat\">\r\n          {(loadingGeneral ||\r\n            loadingSalud ||\r\n            loadingHobbies ||\r\n            loadingVivencias) && <Loading />}\r\n          {forodisplay()}\r\n        </div>\r\n      </div>\r\n\r\n      <Media query={{ maxWidth: 800 }}>\r\n        {(matches) =>\r\n          matches ? (\r\n            <>\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  placeholder=\"Escriba aqui\"\r\n                  aria-label=\"Recipient's username\"\r\n                  aria-describedby=\"basic-addon2\"\r\n                  value={content}\r\n                  rows={2}\r\n                  onChange={(e) => setContent(e.target.value)}\r\n                  style={{ marginLeft: \"10px\", marginRight: \"10px\" }}\r\n                />\r\n              </InputGroup>\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button\r\n                  id=\"button-addon2\"\r\n                  className=\"button\"\r\n                  onClick={submitHandler}\r\n                >\r\n                  Enviar\r\n                </Button>\r\n                <Button\r\n                  id=\"button-addon2\"\r\n                  className=\"button\"\r\n                  onClick={submitHandlerAnon}\r\n                >\r\n                  Enviar Anónimo\r\n                </Button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                placeholder=\"Escriba aqui\"\r\n                aria-label=\"Recipient's username\"\r\n                aria-describedby=\"basic-addon2\"\r\n                value={content}\r\n                rows={2}\r\n                onChange={(e) => setContent(e.target.value)}\r\n                style={{ marginLeft: \"10px\", marginRight: \"10px\" }}\r\n              />\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button\r\n                  id=\"button-addon2\"\r\n                  className=\"button\"\r\n                  onClick={submitHandler}\r\n                >\r\n                  Enviar\r\n                </Button>\r\n                <Button\r\n                  id=\"button-addon2\"\r\n                  className=\"button\"\r\n                  onClick={submitHandlerAnon}\r\n                >\r\n                  Enviar Anónimo\r\n                </Button>\r\n              </div>\r\n            </InputGroup>\r\n          )\r\n        }\r\n      </Media>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default ForoPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport Goti from \"../../images/Goti.png\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst MessagePositive = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      }\r\n    }\r\n  });\r\n\r\n  const consejo = () => {\r\n    var num = Math.floor(Math.random() * (3 + 1 - 1) + 1);\r\n    if (num === 1) {\r\n      return \"Te recomiendo que te organices y pienses qué puedes hacer para animarte y emplea tus descansos en cosas que te gusten.\";\r\n    } else if (num === 2) {\r\n      return \"Enfócate en lo SÍ tienes, lo que no está no hace falta.\";\r\n    } else {\r\n      return \"Mañana será mejor, hoy fue un día a lo mejor sin mucho saboor, pero recuerda que solo tú te puedes animar y yo siempre te voy a  apoyar.\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"¡Tiempo de actitudes proactivas!\">\r\n      <Container>\r\n        <Col>\r\n          <div className=\"Centrado\">\r\n            <p className=\"subtitle-text-blue\">{consejo()}</p>\r\n          </div>\r\n          <div className=\"Centrado\">\r\n            <img src={Goti} width=\"200\" height=\"250\" alt=\"Goti\" />\r\n          </div>\r\n        </Col>\r\n        <Row>\r\n          <Link to=\"/authdiario\">\r\n            <Button style={{ border: \"none\" }}>Continuar</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default MessagePositive;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport Goti from \"../../images/Goti.png\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst MessageSad = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      }\r\n    }\r\n  });\r\n\r\n  const consejo = () => {\r\n    var num = Math.floor(Math.random() * (3 + 1 - 1) + 1);\r\n    if (num === 1) {\r\n      return \"Todo pasa, no hay mal que dure cien años ni gota que lo aguante. Respira y sé paciente que todo va a mejorar. Ya verás.\";\r\n    } else if (num === 2) {\r\n      return \"Dedica tiempo contigo, imagina que es una cita, quizás necesitas descansar. Recuerda: No estás solo. ATT: Goti, una gota de bienestar.\";\r\n    } else {\r\n      return \"Cada cierto tiempo es bueno que recuerdes que eres buena persona, un error no te hace mal ser humano, un mal momento, no hace una mala vida.\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"¿Te puedo enviar un abrazo?\">\r\n      <Container>\r\n        <Col>\r\n          <div className=\"Centrado\">\r\n            <p className=\"subtitle-text-blue\">{consejo()}</p>\r\n          </div>\r\n          <div className=\"Centrado\">\r\n            <img src={Goti} width=\"200\" height=\"250\" alt=\"Goti\" />\r\n          </div>\r\n        </Col>\r\n        <Row>\r\n          <Link to=\"/authdiario\">\r\n            <Button style={{ border: \"none\" }}>Continuar</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default MessageSad;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport Goti from \"../../images/Goti.png\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst MessageHappy = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      }\r\n    }\r\n  });\r\n\r\n  const consejo = () => {\r\n    var num = Math.floor(Math.random() * (3 + 1 - 1) + 1);\r\n    if (num === 1) {\r\n      return \"Disfruta tu momentooooo, te lo mereces\";\r\n    } else if (num === 2) {\r\n      return \"La vida es solo una, rumbéate, celébrate y agradécete, porque eres grande\";\r\n    } else {\r\n      return \"Mi luminoso solecito, así es, me alegro muchísimo por ti. Disfruta tu momento\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"¡Me alegro por tiii =) !\">\r\n      <Container>\r\n        <Col>\r\n          <div className=\"Centrado\">\r\n            <p className=\"subtitle-text-blue\">{consejo()}</p>\r\n          </div>\r\n          <div className=\"Centrado\">\r\n            <img src={Goti} width=\"200\" height=\"250\" alt=\"Goti\" />\r\n          </div>\r\n        </Col>\r\n        <Row>\r\n          <Link to=\"/authdiario\">\r\n            <Button style={{ border: \"none\" }}>Continuar</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default MessageHappy;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport Goti from \"../../images/Goti.png\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst MessageVeryHappy = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      }\r\n    }\r\n  });\r\n\r\n  const consejo = () => {\r\n    var num = Math.floor(Math.random() * (3 + 1 - 1) + 1);\r\n    if (num === 1) {\r\n      return \"EH EH EH ¡¡Estamos celebrando contigoooo!!\";\r\n    } else if (num === 2) {\r\n      return \"RUMBÉATE y CELÉBRATE, porque vida no hay 2 y como tú tampoco hay 2\";\r\n    } else {\r\n      return \"Báilale a la vida mientras la puedas cantar, la vida es como el mar, las olas las debes aprovechar, no esquivar\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"¡ ESOOOOOOOOOOO XD !\">\r\n      <Container>\r\n        <Col>\r\n          <div className=\"Centrado\">\r\n            <p className=\"subtitle-text-blue\">{consejo()}</p>\r\n          </div>\r\n\r\n          <div className=\"Centrado\">\r\n            <img src={Goti} width=\"200\" height=\"250\" alt=\"Goti\" />\r\n          </div>\r\n        </Col>\r\n        <Row>\r\n          <Link to=\"/authdiario\">\r\n            <Button style={{ border: \"none\" }}>Continuar</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default MessageVeryHappy;\r\n","export const CREATE_LECTURE_REQUEST = \"CREATE_LECTURE_REQUEST\";\r\nexport const CREATE_LECTURE_SUCCESS = \"CREATE_LECTURE_SUCCESS\";\r\nexport const CREATE_LECTURE_FAIL = \"CREATE_LECTURE_FAIL\";\r\n\r\nexport const LIST_PUBLICATED_LECTURES_REQUEST =\r\n  \"LIST_PUBLICATED_LECTURES_REQUEST\";\r\nexport const LIST_PUBLICATED_LECTURES_SUCCESS =\r\n  \"LIST_PUBLICATED_LECTURES_SUCCESS\";\r\nexport const LIST_PUBLICATED_LECTURES_FAIL = \"LIST_PUBLICATED_LECTURES_FAIL\";\r\n\r\nexport const LIST_NON_PUBLICATED_LECTURES_REQUEST =\r\n  \"LIST_NON_PUBLICATED_LECTURES_REQUEST\";\r\nexport const LIST_NON_PUBLICATED_LECTURES_SUCCESS =\r\n  \"LIST_NON_PUBLICATED_LECTURES_SUCCESS\";\r\nexport const LIST_NON_PUBLICATED_LECTURES_FAIL =\r\n  \"LIST_NON_PUBLICATED_LECTURES_FAIL\";\r\n\r\nexport const UPDATE_LECTURE_REQUEST = \"UPDATE_LECTURE_REQUEST\";\r\nexport const UPDATE_LECTURE_SUCCESS = \"UPDATE_LECTURE_SUCCESS\";\r\nexport const UPDATE_LECTURE_FAIL = \"UPDATE_LECTURE_FAIL\";\r\n","import axios from \"axios\";\r\nimport {\r\n  CREATE_LECTURE_FAIL,\r\n  CREATE_LECTURE_REQUEST,\r\n  CREATE_LECTURE_SUCCESS,\r\n  LIST_NON_PUBLICATED_LECTURES_FAIL,\r\n  LIST_NON_PUBLICATED_LECTURES_REQUEST,\r\n  LIST_NON_PUBLICATED_LECTURES_SUCCESS,\r\n  LIST_PUBLICATED_LECTURES_FAIL,\r\n  LIST_PUBLICATED_LECTURES_REQUEST,\r\n  LIST_PUBLICATED_LECTURES_SUCCESS,\r\n  UPDATE_LECTURE_FAIL,\r\n  UPDATE_LECTURE_REQUEST,\r\n  UPDATE_LECTURE_SUCCESS,\r\n} from \"../constants/lectureConstants\";\r\n\r\nexport const createLectureAction =\r\n  (title, content, image, publicationDate) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: CREATE_LECTURE_REQUEST,\r\n      });\r\n\r\n      const { data } = await axios.post(`/api/lectures/create`, {\r\n        title,\r\n        content,\r\n        image,\r\n        publicationDate,\r\n      });\r\n\r\n      dispatch({\r\n        type: CREATE_LECTURE_SUCCESS,\r\n        payload: data,\r\n      });\r\n      window.location.reload(true);\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: CREATE_LECTURE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateLectureAction =\r\n  (id, title, content, image, publicationDate) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: UPDATE_LECTURE_REQUEST,\r\n      });\r\n\r\n      const { data } = await axios.put(`/api/lectures/edit/${id}`, {\r\n        title,\r\n        content,\r\n        image,\r\n        publicationDate,\r\n      });\r\n\r\n      dispatch({\r\n        type: UPDATE_LECTURE_SUCCESS,\r\n        payload: data,\r\n      });\r\n      window.location.reload(true);\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: UPDATE_LECTURE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getPublicatedLecturesAction = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LIST_PUBLICATED_LECTURES_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/lectures/listPublicatedOnes\");\r\n\r\n    dispatch({ type: LIST_PUBLICATED_LECTURES_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LIST_PUBLICATED_LECTURES_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getNonPublicatedLecturesAction = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LIST_NON_PUBLICATED_LECTURES_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/lectures/listNonPublicatedOnes\");\r\n\r\n    dispatch({ type: LIST_NON_PUBLICATED_LECTURES_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LIST_NON_PUBLICATED_LECTURES_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Accordion, Card, Col, Container, Image, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPublicatedLecturesAction } from \"../../actions/lectureActions\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport moment from \"moment\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst LecturesPage = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const getPublicatedLectures = useSelector(\r\n    (state) => state.getPublicatedLectures\r\n  );\r\n  const {\r\n    loading: loadingPublicated,\r\n    error: errorPublicated,\r\n    publicatedLecturesInfo,\r\n  } = getPublicatedLectures;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      }\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getPublicatedLecturesAction());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <MainScreen title=\"Lecturas\">\r\n      <Container>\r\n        <Row>\r\n          {errorPublicated && (\r\n            <ErrorMessage variant=\"danger\">\r\n              {\r\n                \"Ocurrió un error al cargar las lecturas. Por favor recargue la página\"\r\n              }\r\n            </ErrorMessage>\r\n          )}\r\n          {loadingPublicated && <Loading />}\r\n          {publicatedLecturesInfo\r\n            ?.sort((a, b) => {\r\n              if (a.publicationDate > b.publicationDate) {\r\n                return -1;\r\n              }\r\n              if (a.publicationDate < b.publicationDate) {\r\n                return 1;\r\n              }\r\n              return 0;\r\n            })\r\n            .slice(0, 5)\r\n            .map((lecture) => (\r\n              <Accordion key={lecture._id} style={{ width: \"100%\" }}>\r\n                <Card className=\"container-entry\">\r\n                  <Card.Header\r\n                    className=\"container-entry-header\"\r\n                    style={{ borderBottom: \"dotted 1px #053a3f\" }}\r\n                  >\r\n                    <Accordion.Toggle\r\n                      style={{\r\n                        flex: 1,\r\n                        cursor: \"pointer\",\r\n                        alignSelf: \"center\",\r\n                        fontSize: 18,\r\n                        display: \"flex\",\r\n                      }}\r\n                      as={Card.Text}\r\n                      variant=\"link\"\r\n                      eventKey=\"0\"\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                        }}\r\n                      >\r\n                        <div className=\"subtitle-text-blue\">\r\n                          {lecture.title}\r\n                        </div>\r\n                      </div>\r\n                    </Accordion.Toggle>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>\r\n                      <Container\r\n                        style={{\r\n                          margin: 0,\r\n                          paddingTop: 0,\r\n                          paddingLeft: 20,\r\n                          paddingRight: 20,\r\n                        }}\r\n                      >\r\n                        <Row>\r\n                          <Col md={3}>\r\n                            <Image src={lecture.image} fluid></Image>\r\n                            <div className=\"plain-centered-text\">\r\n                              Fecha de publicación: -\r\n                              {moment(lecture.publicationDate).format(\"L\")}-\r\n                            </div>\r\n                          </Col>\r\n                          <Col md={9}>\r\n                            <div\r\n                              className=\"plain-justify-text\"\r\n                              style={{ fontSize: \"16px\", fontWeight: \"bold\" }}\r\n                            >\r\n                              {lecture.content}\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n            ))\r\n            .reverse()}\r\n        </Row>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default LecturesPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Container, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createLectureAction } from \"../../actions/lectureActions\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport moment from \"moment\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst AdminCreateLecturePage = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [publicationDate, setPublicationDate] = useState(\"\");\r\n  const [picMessage, setPicMessage] = useState();\r\n  const [loading, setloading] = useState(true);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo?.isAdmin === false) {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  const createLecture = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      title === \"\" ||\r\n      content === \"\" ||\r\n      image === \"\" ||\r\n      publicationDate === \"\"\r\n    ) {\r\n      setPicMessage(\"No hay llenado todos los campos\");\r\n    } else {\r\n      dispatch(\r\n        createLectureAction(\r\n          title.trim(),\r\n          content.trim(),\r\n          image,\r\n          moment(publicationDate).add(0, \"days\")\r\n        )\r\n      );\r\n      history.push(\"/admin-listar-lecturas\");\r\n    }\r\n  };\r\n\r\n  const postDetails = (pics) => {\r\n    setPicMessage(null);\r\n    setloading(true);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"psicopanas\");\r\n      data.append(\"cloud_name\", \"psicopanas\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/psicopanas/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setImage(data.url.toString());\r\n          console.log(setImage);\r\n          setloading(false);\r\n          setPicMessage(\"Se ha subido la imagen\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setPicMessage(\r\n            \"Ha ocurrido un error al cargar la imagen. Inténtelo nuevamente\"\r\n          );\r\n        });\r\n    } else {\r\n      return setPicMessage(\"Por favor, seleccione una imagen\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Lecturas\">\r\n      <Container>\r\n        <Col>\r\n          <Card className=\"no-background\">\r\n            <Card.Header className=\"subtitle-text-blue no-background-bb\">\r\n              Formulario de Creación de Lecturas\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form onSubmit={createLecture}>\r\n                {picMessage && (\r\n                  <ErrorMessage variant=\"danger\">\r\n                    {\r\n                      \"Ocurrió un error al cargar la imagen. Asegúrese de que sea .png o .jpeg e inténtelo nuevamente\"\r\n                    }\r\n                  </ErrorMessage>\r\n                )}\r\n                <Form.Group controlId=\"title\">\r\n                  <Form.Label className=\"plain-text\">Título</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"content\">\r\n                  <Form.Label className=\"plain-text\">Contenido</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"date\">\r\n                  <Form.Label className=\"plain-text\">\r\n                    Fecha de Publicación\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    value={publicationDate}\r\n                    onChange={(e) => setPublicationDate(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"image\">\r\n                  <Form.Label className=\"plain-text\">Imagen</Form.Label>\r\n                  <Form.File\r\n                    onChange={(e) => postDetails(e.target.files[0])}\r\n                    id=\"custom-file\"\r\n                    type=\"image/png\"\r\n                    label=\"Agregue una foto para la lectura\"\r\n                    custom\r\n                  />\r\n                </Form.Group>\r\n                {loading ? (\r\n                  <>\r\n                    <div className=\"plain-centered-text\">\r\n                      Esperaremos a que subas la imagen\r\n                    </div>\r\n                    <Loading size={25} />\r\n                  </>\r\n                ) : (\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"button-all-page\"\r\n                  >\r\n                    CREAR ENTRADA\r\n                  </Button>\r\n                )}\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default AdminCreateLecturePage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getNonPublicatedLecturesAction,\r\n  getPublicatedLecturesAction,\r\n} from \"../../actions/lectureActions\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport moment from \"moment\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst AdminListLecturesPage = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const getPublicatedLectures = useSelector(\r\n    (state) => state.getPublicatedLectures\r\n  );\r\n  const {\r\n    loading: loadingPublicated,\r\n    error: errorPublicated,\r\n    publicatedLecturesInfo,\r\n  } = getPublicatedLectures;\r\n  const getNonPublicatedLectures = useSelector(\r\n    (state) => state.getNonPublicatedLectures\r\n  );\r\n  const {\r\n    loading: loadingNonPublicated,\r\n    error: errorNonPublicated,\r\n    nonPublicatedLecturesInfo,\r\n  } = getNonPublicatedLectures;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo?.isAdmin === false) {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPublicatedLecturesAction());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getNonPublicatedLecturesAction());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <MainScreen title=\"Lecturas\">\r\n      <Container className=\"container-no-bg\">\r\n        <Row>\r\n          <Col md={6}>\r\n            <Row>\r\n              <div className=\"subtitle-text-blue\">\r\n                Lista de Lecturas No Publicadas\r\n              </div>\r\n            </Row>\r\n            {errorNonPublicated && (\r\n              <ErrorMessage variant=\"danger\">\r\n                {\"Ocurrió un error al cargar. Por favor refresque la página\"}\r\n              </ErrorMessage>\r\n            )}\r\n            {loadingNonPublicated && <Loading size={100} />}\r\n            {nonPublicatedLecturesInfo\r\n              ?.sort((a, b) => {\r\n                if (a.publicationDate < b.publicationDate) {\r\n                  return -1;\r\n                }\r\n                if (a.publicationDate > b.publicationDate) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              })\r\n              .map((lecture) => (\r\n                <Row className=\"div-admin-page\">\r\n                  <Col className=\"plain-text\">{lecture.title.slice(0, 15)}</Col>\r\n                  <Col className=\"plain-text\">\r\n                    {moment(lecture.publicationDate).format(\"ll\")}\r\n                  </Col>\r\n                  <Col>\r\n                    <Button\r\n                      className=\"button-all-page\"\r\n                      href={`/admin-editar-lectura/${lecture._id}`}\r\n                    >\r\n                      Editar\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n          </Col>\r\n          <Col md={6}>\r\n            <Row>\r\n              <div className=\"subtitle-text-blue\">\r\n                Lista de Lecturas Publicadas\r\n              </div>\r\n            </Row>\r\n            {errorPublicated && (\r\n              <ErrorMessage variant=\"danger\">\r\n                {\"Ocurrió un error al cargar. Por favor refresque la página\"}\r\n              </ErrorMessage>\r\n            )}\r\n            {loadingPublicated && <Loading size={100} />}\r\n            {publicatedLecturesInfo\r\n              ?.sort((a, b) => {\r\n                if (a.publicationDate > b.publicationDate) {\r\n                  return -1;\r\n                }\r\n                if (a.publicationDate < b.publicationDate) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              })\r\n              .map((lecture) => (\r\n                <Row className=\"div-admin-page\">\r\n                  <Col className=\"plain-text\">{lecture.title.slice(0, 15)}</Col>\r\n                  <Col className=\"plain-text\">\r\n                    {moment(lecture.publicationDate).format(\"ll\")}\r\n                  </Col>\r\n                  <Col>\r\n                    <Button\r\n                      className=\"button-all-page\"\r\n                      href={`/admin-editar-lectura/${lecture._id}`}\r\n                    >\r\n                      Editar\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default AdminListLecturesPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Container, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateLectureAction } from \"../../actions/lectureActions\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport \"../../styles/App.css\";\r\n\r\nconst AdminEditLecturePage = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [publicationDate, setPublicationDate] = useState(\"\");\r\n  const [picMessage, setPicMessage] = useState();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (userInfo?.isAdmin === false) {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    const fetching = async () => {\r\n      const { data } = await axios.get(`/api/lectures/edit/${match.params.id}`);\r\n\r\n      setTitle(data.title);\r\n      setContent(data.content);\r\n      setImage(data.image);\r\n      setPublicationDate(data.publicationDate);\r\n    };\r\n    fetching();\r\n  }, [match.params.id]);\r\n\r\n  const updateLecture = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      title === \"\" ||\r\n      content === \"\" ||\r\n      image === \"\" ||\r\n      publicationDate === \"\"\r\n    ) {\r\n      setPicMessage(\"No hay llenado todos los campos\");\r\n    } else {\r\n      dispatch(\r\n        updateLectureAction(\r\n          match.params.id,\r\n          title,\r\n          content,\r\n          image,\r\n          moment(publicationDate).add(0, \"days\")\r\n        )\r\n      );\r\n      history.push(\"/admin-listar-lecturas\");\r\n    }\r\n  };\r\n\r\n  const postDetails = (pics) => {\r\n    setPicMessage(null);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"psicopanas\");\r\n      data.append(\"cloud_name\", \"psicopanas\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/psicopanas/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setImage(data.url.toString());\r\n          console.log(setImage);\r\n          setPicMessage(\"Se ha subido la imagen\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setPicMessage(\r\n            \"Ha ocurrido un error al cargar la imagen. Inténtelo nuevamente\"\r\n          );\r\n        });\r\n    } else {\r\n      return setPicMessage(\"Por favor, seleccione una imagen\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Lecturas\">\r\n      <Container>\r\n        <Col>\r\n          <Card className=\"no-background\">\r\n            <Card.Header className=\"subtitle-text-blue no-background-bb\">\r\n              Formulario de Creación de Lecturas\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form onSubmit={updateLecture}>\r\n                {picMessage && (\r\n                  <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n                )}\r\n                <Form.Group controlId=\"title\">\r\n                  <Form.Label className=\"plain-text\">Título</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"content\">\r\n                  <Form.Label className=\"plain-text\">Contenido</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"date\">\r\n                  <Form.Label className=\"plain-text\">\r\n                    Fecha de Publicación\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    value={publicationDate}\r\n                    onChange={(e) => setPublicationDate(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"image\">\r\n                  <Form.Label className=\"plain-text\">Imagen</Form.Label>\r\n                  <Form.File\r\n                    onChange={(e) => postDetails(e.target.files[0])}\r\n                    id=\"custom-file\"\r\n                    type=\"image/png\"\r\n                    label=\"Agregue una foto para la lectura\"\r\n                    custom\r\n                  />\r\n                </Form.Group>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"button-all-page\"\r\n                >\r\n                  Editar Lectura\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default AdminEditLecturePage;\r\n","export default __webpack_public_path__ + \"static/media/instrucc_paso1.8d8f4899.png\";","export default __webpack_public_path__ + \"static/media/Configuracion.3f9552fe.png\";","export default __webpack_public_path__ + \"static/media/Foro.cea7392f.png\";","import React, { useEffect } from \"react\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport \"../landingPage/LandingPage.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MainScreen from \"../../components/mainscreen/MainScreen\";\r\nimport i1 from \"../../images/instrucc_paso1.png\";\r\nimport i2 from \"../../images/Configuracion.png\";\r\nimport i3 from \"../../images/Foro.png\";\r\n\r\nconst SobrePsicoP = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <MainScreen title=\"Sobre PsicoPanas\">\r\n      <Container className=\"white-background\">\r\n        <Row style={{ marginTop: \"10px\", paddingTop: \"10px\" }}>\r\n          <Col md={3}>\r\n            <Image\r\n              src={i1}\r\n              width=\"100%\"\r\n              alt=\"\"\r\n              thumbnail\r\n              style={{ border: \"solid #0a656b\" }}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <div className=\"Centrado\">\r\n              <div\r\n                className=\"subtitle-centered-text-blue\"\r\n                style={{ width: \"100%\", fontSize: \"25px\" }}\r\n              >\r\n                Diario Personal\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p\r\n                className=\"subtitle\"\r\n                style={{ fontSize: \"20px\", textAlign: \"center\" }}\r\n              >\r\n                En PsicoPanas cuentas con un diario personal que puedes utilizar\r\n                para contar tus experiencias en el día a día y cómo te has\r\n                sentido. Puedes crear cuantas entradas desees y podrás ver un\r\n                resumen de tus cambios de ánimo del mes a través de las\r\n                estadísticas y configurar tu diario como desees\r\n              </p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginTop: \"10px\", paddingTop: \"10px\" }}>\r\n          <Col md={3}>\r\n            <Image\r\n              src={i2}\r\n              width=\"100%\"\r\n              alt=\"\"\r\n              thumbnail\r\n              style={{ border: \"solid #0a656b\" }}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <div className=\"Centrado\">\r\n              <div\r\n                className=\"subtitle-centered-text-blue\"\r\n                style={{ width: \"100%\", fontSize: \"25px\" }}\r\n              >\r\n                Configuración de Diario\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p\r\n                className=\"subtitle\"\r\n                style={{ fontSize: \"20px\", textAlign: \"center\" }}\r\n              >\r\n                Puedes colocar contraseña a tu diario para tener seguridad\r\n                extra. Así como crear hasta cinco actividades personalizadas\r\n                para las entradas de tu diario. Además, si te suscribes a la\r\n                opción PREMIUM puedes agregar otras 5 actividades más\r\n              </p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginTop: \"10px\", paddingTop: \"10px\" }}>\r\n          <Col md={3}>\r\n            <Image\r\n              src={i3}\r\n              width=\"100%\"\r\n              alt=\"\"\r\n              thumbnail\r\n              style={{ border: \"solid #0a656b\" }}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <div className=\"Centrado\">\r\n              <div\r\n                className=\"subtitle-centered-text-blue\"\r\n                style={{ width: \"100%\", fontSize: \"25px\" }}\r\n              >\r\n                Foro\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p\r\n                className=\"subtitle\"\r\n                style={{ fontSize: \"20px\", textAlign: \"center\" }}\r\n              >\r\n                Una vez adquieres la versión PREMIUM puedes tener acceso a los\r\n                diferentes foros que tenemos. En ellos puedes compartir tus\r\n                experiencias y consejos con otros compañeros de PsicoPanas y con\r\n                Goti, recuerda que en esta comunidad estamos para apoyarnos\r\n                entre todos\r\n              </p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginTop: \"10px\", paddingTop: \"10px\" }}>\r\n          <Col md={3}>\r\n            <Image\r\n              src={i3}\r\n              width=\"100%\"\r\n              alt=\"\"\r\n              thumbnail\r\n              style={{ border: \"solid #0a656b\" }}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <div className=\"Centrado\">\r\n              <div\r\n                className=\"subtitle-centered-text-blue\"\r\n                style={{ width: \"100%\", fontSize: \"25px\" }}\r\n              >\r\n                Lecturas\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p\r\n                className=\"subtitle\"\r\n                style={{ fontSize: \"20px\", textAlign: \"center\" }}\r\n              >\r\n                Regularmente puedes revisar el apartado de lecturas, donde\r\n                encontrarás divertidas técnicas y consejos para ayudarte y\r\n                servir de apoyo en el desarrollo y mejoramiento de tu\r\n                inteligencia emocional.\r\n              </p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default SobrePsicoP;\r\n","import \"./styles/App.css\";\r\nimport Header from \"./components/header/Header\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport LandingPage from \"./screens/landingPage/LandingPage\";\r\nimport Diario from \"./screens/diaryPage/Diario\";\r\nimport LoginPage from \"./screens/loginPage/LoginPage\";\r\nimport RegisterPage from \"./screens/registerPage/RegisterPage\";\r\nimport CreateEntryPage from \"./screens/createEntryPage/CreateEntryPage\";\r\nimport UpdateEntryPage from \"./screens/updateEntryPage/UpdateEntryPage\";\r\nimport DiaryConfigPage from \"./screens/diaryConfigPage/DiaryConfigPage\";\r\nimport AuthDiaryPage from \"./screens/authDiaryPage.js/AuthDiaryPage\";\r\nimport Estadisticas from \"./screens/Estadisticas/Estadisticas\";\r\nimport MessageConfigDiaryPage from \"./screens/messagePage.js/MessageConfigDiaryPage\";\r\n\r\nimport MessageBadStreak from \"./screens/messagePage.js/MessageBadStreak\";\r\n\r\nimport Message404 from \"./screens/messagePage.js/Message404\";\r\nimport PaySreen from \"./screens/PayScreen/paidScreen\";\r\nimport ProfilePage from \"./screens/profilePage/ProfilePage\";\r\nimport UpdateProfilePage from \"./screens/updateProfilePage/UpdateProfilePage\";\r\nimport AdminPage from \"./screens/adminPage.js/AdminPage\";\r\nimport UserUpdateFromAdmin from \"./screens/userUpdateFromAdmin/UserUpdateFromAdmin\";\r\nimport PagoExitoso from \"./screens/messagePage.js/PagoExitoso\";\r\nimport ForoPage from \"./screens/ForoPage/ForoPage\";\r\n\r\nimport MessagePositive from \"./screens/messagePage.js/MessagePositive\";\r\n\r\nimport MessageSad from \"./screens/messagePage.js/MessageSad\";\r\n\r\nimport MessageHappy from \"./screens/messagePage.js/MessageHappy\";\r\n\r\nimport MessageVeryHappy from \"./screens/messagePage.js/MessageVeryHappy\";\r\n\r\nimport LecturesPage from \"./screens/lecturesPage/LecturesPage\";\r\nimport AdminCreateLecturePage from \"./screens/adminPage.js/AdminCreateLecturePage\";\r\nimport AdminListLecturesPage from \"./screens/adminPage.js/AdminListLecturesPage\";\r\nimport AdminEditLecturePage from \"./screens/adminPage.js/AdminEditLecturePage\";\r\nimport sobrePsicoP from \"./screens/we_are/SobrePsicoP.js\";\r\n\r\nconst App = () => (\r\n  <>\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" component={LandingPage} exact />\r\n        <Route path=\"/login\" component={LoginPage} exact />\r\n        <Route path=\"/registro\" component={RegisterPage} exact />\r\n        <Route path=\"/diario\" component={Diario} exact />\r\n        <Route path=\"/crearEntrada\" component={CreateEntryPage} exact />\r\n        <Route path=\"/diario/:id\" component={UpdateEntryPage} exact />\r\n        <Route path=\"/ajustes-diario\" component={DiaryConfigPage} exact />\r\n        <Route path=\"/authDiario\" component={AuthDiaryPage} exact />\r\n        <Route path=\"/estadisticas\" component={Estadisticas} exact />\r\n        <Route path=\"/pagos\" component={PaySreen} exact />\r\n        <Route path=\"/perfil\" component={ProfilePage} exact />\r\n        <Route path=\"/modificarPerfil\" component={UpdateProfilePage} exact />\r\n\r\n        <Route path=\"/admin\" component={AdminPage} exact />\r\n        <Route path=\"/admin/:id\" component={UserUpdateFromAdmin} exact />\r\n        <Route path=\"/foro\" component={ForoPage} exact />\r\n        <Route\r\n          path=\"/admin-crear-lectura\"\r\n          component={AdminCreateLecturePage}\r\n          exact\r\n        />\r\n        <Route\r\n          path=\"/admin-listar-lecturas\"\r\n          component={AdminListLecturesPage}\r\n          exact\r\n        />\r\n        <Route\r\n          path=\"/admin-editar-lectura/:id\"\r\n          component={AdminEditLecturePage}\r\n          exact\r\n        />\r\n\r\n        <Route\r\n          path=\"/mensaje-configurar-diario\"\r\n          component={MessageConfigDiaryPage}\r\n          exact\r\n        />\r\n\r\n        <Route path=\"/lecturas\" component={LecturesPage} exact />\r\n\r\n        <Route path=\"/mensaje_enviado\" component={PagoExitoso} exact />\r\n\r\n        <Route path=\"/mensaje-racha\" component={MessageBadStreak} exact />\r\n        <Route path=\"/mensaje-positivo\" component={MessagePositive} />\r\n        <Route path=\"/mensaje-triste\" component={MessageSad} />\r\n        <Route path=\"/mensaje-feliz\" component={MessageHappy} />\r\n        <Route path=\"/mensaje-muy-feliz\" component={MessageVeryHappy} />\r\n\r\n        <Route path=\"/sobre-Psico-Panas\" component={sobrePsicoP} />\r\n\r\n        <Route path=\"*\" component={Message404} />\r\n      </Switch>\r\n    </Router>\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  changeUserStatusReducer,\r\n  getUsersReducer,\r\n  userDiaryReducer,\r\n  userLoginReducer,\r\n  userNoSecurityReducer,\r\n  userRegisterReducer,\r\n  userSecurityReducer,\r\n  userSetTagsReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  entryCreateReducer,\r\n  entryListReducer,\r\n  entryUpdateReducer,\r\n  getMonthStatsReducer,\r\n  // lastEntryReducer,\r\n  getStatsReducer,\r\n  getTagStatsReducer,\r\n} from \"./reducers/entryReducers\";\r\nimport { tagListReducer } from \"./reducers/tagReducers\";\r\nimport { emotionListReducer } from \"./reducers/emotionReducers\";\r\nimport {\r\n  foromessagereducer,\r\n  Createforomessagereducer,\r\n} from \"./reducers/foromessageReducers\";\r\nimport {\r\n  foromessagesaludreducer,\r\n  Createforomessagesaludreducer,\r\n} from \"./reducers/foromessagesaludReducers\";\r\nimport {\r\n  foromessagevivenciareducer,\r\n  Createforomessagevivenciareducer,\r\n} from \"./reducers/foromessagevivenciaReducers\";\r\nimport {\r\n  foromessagehobbiereducer,\r\n  Createforomessagehobbiereducer,\r\n} from \"./reducers/foromessagehobbieReducers\";\r\nimport {\r\n  createLectureReducer,\r\n  lectureUpdateReducer,\r\n  listNonPublicatedLecturesReducer,\r\n  listPublicatedLecturesReducer,\r\n} from \"./reducers/lectureReducers\";\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  entryList: entryListReducer,\r\n  entryCreate: entryCreateReducer,\r\n  entryUpdate: entryUpdateReducer,\r\n  tagList: tagListReducer,\r\n  emotionList: emotionListReducer,\r\n  foromessageList: foromessagereducer,\r\n  foromessagesaludList: foromessagesaludreducer,\r\n  foromessagevivenciaList: foromessagevivenciareducer,\r\n  foromessagehobbieList: foromessagehobbiereducer,\r\n  createforomessage: Createforomessagereducer,\r\n  createforomessagesalud: Createforomessagesaludreducer,\r\n  createforomessagevivencia: Createforomessagevivenciareducer,\r\n  createforomessagehobbie: Createforomessagehobbiereducer,\r\n  // lastEntry: lastEntryReducer,\r\n  userUpdate: userUpdateReducer,\r\n  userSecurity: userSecurityReducer,\r\n  userNoSecurity: userNoSecurityReducer,\r\n  userSetTags: userSetTagsReducer,\r\n  stats: getStatsReducer,\r\n  monthStats: getMonthStatsReducer,\r\n  tagStats: getTagStatsReducer,\r\n  diaryAuth: userDiaryReducer,\r\n  getAllUsers: getUsersReducer,\r\n  changeUserStatus: changeUserStatusReducer,\r\n  lectureCreate: createLectureReducer,\r\n  getPublicatedLectures: listPublicatedLecturesReducer,\r\n  getNonPublicatedLectures: listNonPublicatedLecturesReducer,\r\n  lectureUpdate: lectureUpdateReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_DIARY_REQUEST,\r\n  USER_DIARY_SUCCESS,\r\n  USER_DIARY_FAIL,\r\n  USER_SECURITY_REQUEST,\r\n  USER_SECURITY_SUCCESS,\r\n  USER_SECURITY_FAIL,\r\n  USER_SETTAGS_REQUEST,\r\n  USER_SETTAGS_SUCCESS,\r\n  USER_SETTAGS_FAIL,\r\n  USER_NOSECURITY_REQUEST,\r\n  USER_NOSECURITY_SUCCESS,\r\n  USER_NOSECURITY_FAIL,\r\n  GET_USERS_REQUEST,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAIL,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userSecurityReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_SECURITY_REQUEST:\r\n      return { loading: true };\r\n    case USER_SECURITY_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true };\r\n    case USER_SECURITY_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userNoSecurityReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_NOSECURITY_REQUEST:\r\n      return { loading: true };\r\n    case USER_NOSECURITY_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true };\r\n    case USER_NOSECURITY_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userSetTagsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_SETTAGS_REQUEST:\r\n      return { loading: true };\r\n    case USER_SETTAGS_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true };\r\n    case USER_SETTAGS_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDiaryReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DIARY_REQUEST:\r\n      return { loading: true };\r\n    case USER_DIARY_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, successDiary: true };\r\n    case USER_DIARY_FAIL:\r\n      return { loading: false, error: action.payload, successDiary: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getUsersReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS_REQUEST:\r\n      return { loading: true };\r\n    case GET_USERS_SUCCESS:\r\n      return { loading: false, usersInfo: action.payload };\r\n    case GET_USERS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeUserStatusReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS_REQUEST:\r\n      return { loading: true };\r\n    case GET_USERS_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case GET_USERS_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ENTRY_UPDATE_REQUEST,\r\n  ENTRY_UPDATE_SUCCESS,\r\n  ENTRY_UPDATE_FAIL,\r\n  ENTRY_CREATE_FAIL,\r\n  ENTRY_CREATE_REQUEST,\r\n  ENTRY_CREATE_SUCCESS,\r\n  ENTRY_LIST_FAIL,\r\n  ENTRY_LIST_REQUEST,\r\n  ENTRY_LIST_SUCCESS,\r\n  // LAST_ENTRY_FAIL,\r\n  // LAST_ENTRY_SUCCESS,\r\n  // LAST_ENTRY_REQUEST,\r\n  STATS_REQUEST,\r\n  STATS_SUCCESS,\r\n  STATS_FAIL,\r\n  TAGS_STATS_REQUEST,\r\n  TAGS_STATS_SUCCESS,\r\n  TAGS_STATS_FAIL,\r\n  MONTH_STATS_REQUEST,\r\n  MONTH_STATS_SUCCESS,\r\n  MONTH_STATS_FAIL,\r\n} from \"../constants/entriesConstants\";\r\n\r\nexport const entryListReducer = (state = { entries: [] }, action) => {\r\n  switch (action.type) {\r\n    case ENTRY_LIST_REQUEST:\r\n      return { loading: true };\r\n    case ENTRY_LIST_SUCCESS:\r\n      return { loading: false, entries: action.payload };\r\n    case ENTRY_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const entryCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ENTRY_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case ENTRY_CREATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ENTRY_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const entryUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ENTRY_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case ENTRY_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ENTRY_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// export const lastEntryReducer = (state = { lastEntry: [] }, action) => {\r\n//   switch (action.type) {\r\n//     case LAST_ENTRY_REQUEST:\r\n//       return { loading: true };\r\n//     case LAST_ENTRY_SUCCESS:\r\n//       return { loading: false, lastOne: action.payload };\r\n//     case LAST_ENTRY_FAIL:\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport const getStatsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case STATS_REQUEST:\r\n      return { loading: true };\r\n    case STATS_SUCCESS:\r\n      return { loading: false, data: action.payload };\r\n    case STATS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getMonthStatsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case MONTH_STATS_REQUEST:\r\n      return { loading: true };\r\n    case MONTH_STATS_SUCCESS:\r\n      return { loading: false, data: action.payload };\r\n    case MONTH_STATS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getTagStatsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TAGS_STATS_REQUEST:\r\n      return { loading: true };\r\n    case TAGS_STATS_SUCCESS:\r\n      return { loading: false, data: action.payload };\r\n    case TAGS_STATS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  TAG_LIST_FAIL,\r\n  TAG_LIST_REQUEST,\r\n  TAG_LIST_SUCCESS,\r\n} from \"../constants/tagsConstants\";\r\n\r\nexport const tagListReducer = (state = { tags: [] }, action) => {\r\n  switch (action.type) {\r\n    case TAG_LIST_REQUEST:\r\n      return { loading: true };\r\n    case TAG_LIST_SUCCESS:\r\n      return { loading: false, tags: action.payload };\r\n    case TAG_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n    EMOTION_LIST_FAIL,\r\n    EMOTION_LIST_REQUEST,\r\n    EMOTION_LIST_SUCCESS,\r\n  } from \"../constants/emotionsConstants\";\r\n\r\nexport const emotionListReducer = (state = {emotions:[]},action) =>{\r\n    switch (action.type) {\r\n\r\n        case EMOTION_LIST_REQUEST:\r\n            return { loading: true };\r\n        case EMOTION_LIST_SUCCESS:\r\n            return { loading: false, emotions: action.payload };\r\n        case EMOTION_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    FOROMESSAGE_LIST_REQUEST,\r\n    FOROMESSAGE_LIST_SUCCESS,\r\n    FOROMESSAGE_LIST_FAIL,\r\n    FOROMESSAGE_CREATE_REQUEST,\r\n    FOROMESSAGE_CREATE_SUCCESS,\r\n    FOROMESSAGE_CREATE_FAIL\r\n} from \"../constants/foromessageConstants\";\r\n\r\nexport const foromessagereducer = (state = { foromessages: [] }, action) => {\r\n    switch (action.type) {\r\n      case FOROMESSAGE_LIST_REQUEST:\r\n        return { loading: true };\r\n      case FOROMESSAGE_LIST_SUCCESS:\r\n        return { loading: false, foromessages: action.payload };\r\n      case FOROMESSAGE_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const Createforomessagereducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case FOROMESSAGE_CREATE_REQUEST:\r\n        return { loading: true };\r\n      case FOROMESSAGE_CREATE_SUCCESS:\r\n        return { loading: false, success: true };\r\n      case FOROMESSAGE_CREATE_FAIL:\r\n        return { loading: false, error: action.payload };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","import {\r\n  FOROMESSAGESALUD_LIST_REQUEST,\r\n  FOROMESSAGESALUD_LIST_SUCCESS,\r\n  FOROMESSAGESALUD_LIST_FAIL,\r\n  FOROMESSAGESALUD_CREATE_REQUEST,\r\n  FOROMESSAGESALUD_CREATE_SUCCESS,\r\n  FOROMESSAGESALUD_CREATE_FAIL\r\n} from \"../constants/foromessagesaludConstants\";\r\n\r\nexport const foromessagesaludreducer = (state = { foromessagessalud: [] }, action) => {\r\n    switch (action.type) {\r\n      case FOROMESSAGESALUD_LIST_REQUEST:\r\n        return { loading: true };\r\n      case FOROMESSAGESALUD_LIST_SUCCESS:\r\n        return { loading: false, foromessagessalud: action.payload };\r\n      case FOROMESSAGESALUD_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const Createforomessagesaludreducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case FOROMESSAGESALUD_CREATE_REQUEST:\r\n        return { loading: true };\r\n      case FOROMESSAGESALUD_CREATE_SUCCESS:\r\n        return { loading: false, success: true };\r\n      case FOROMESSAGESALUD_CREATE_FAIL:\r\n        return { loading: false, error: action.payload };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","import {\r\n  FOROMESSAGEVIVENCIA_LIST_REQUEST,\r\n  FOROMESSAGEVIVENCIA_LIST_SUCCESS,\r\n  FOROMESSAGEVIVENCIA_LIST_FAIL,\r\n  FOROMESSAGEVIVENCIA_CREATE_REQUEST,\r\n  FOROMESSAGEVIVENCIA_CREATE_SUCCESS,\r\n  FOROMESSAGEVIVENCIA_CREATE_FAIL\r\n} from \"../constants/foromessagevivenciaConstants\";\r\n\r\nexport const foromessagevivenciareducer = (state = { foromessagesvivencias: [] }, action) => {\r\n    switch (action.type) {\r\n      case FOROMESSAGEVIVENCIA_LIST_REQUEST:\r\n        return { loading: true };\r\n      case FOROMESSAGEVIVENCIA_LIST_SUCCESS:\r\n        return { loading: false, foromessagesvivencias: action.payload };\r\n      case FOROMESSAGEVIVENCIA_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const Createforomessagevivenciareducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case FOROMESSAGEVIVENCIA_CREATE_REQUEST:\r\n        return { loading: true };\r\n      case FOROMESSAGEVIVENCIA_CREATE_SUCCESS:\r\n        return { loading: false, success: true };\r\n      case FOROMESSAGEVIVENCIA_CREATE_FAIL:\r\n        return { loading: false, error: action.payload };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","import {\r\n  FOROMESSAGEHOBBIE_LIST_REQUEST,\r\n  FOROMESSAGEHOBBIE_LIST_SUCCESS,\r\n  FOROMESSAGEHOBBIE_LIST_FAIL,\r\n  FOROMESSAGEHOBBIE_CREATE_REQUEST,\r\n  FOROMESSAGEHOBBIE_CREATE_SUCCESS,\r\n  FOROMESSAGEHOBBIE_CREATE_FAIL\r\n} from \"../constants/foromessagehobbieConstants\";\r\n\r\nexport const foromessagehobbiereducer = (state = { foromessageshobbies: [] }, action) => {\r\n    switch (action.type) {\r\n      case FOROMESSAGEHOBBIE_LIST_REQUEST:\r\n        return { loading: true };\r\n      case FOROMESSAGEHOBBIE_LIST_SUCCESS:\r\n        return { loading: false, foromessageshobbies: action.payload };\r\n      case FOROMESSAGEHOBBIE_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const Createforomessagehobbiereducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case FOROMESSAGEHOBBIE_CREATE_REQUEST:\r\n        return { loading: true };\r\n      case FOROMESSAGEHOBBIE_CREATE_SUCCESS:\r\n        return { loading: false, success: true };\r\n      case FOROMESSAGEHOBBIE_CREATE_FAIL:\r\n        return { loading: false, error: action.payload };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","import {\r\n  CREATE_LECTURE_FAIL,\r\n  CREATE_LECTURE_REQUEST,\r\n  CREATE_LECTURE_SUCCESS,\r\n  LIST_PUBLICATED_LECTURES_SUCCESS,\r\n  LIST_PUBLICATED_LECTURES_FAIL,\r\n  LIST_PUBLICATED_LECTURES_REQUEST,\r\n  LIST_NON_PUBLICATED_LECTURES_REQUEST,\r\n  LIST_NON_PUBLICATED_LECTURES_SUCCESS,\r\n  LIST_NON_PUBLICATED_LECTURES_FAIL,\r\n  UPDATE_LECTURE_REQUEST,\r\n  UPDATE_LECTURE_SUCCESS,\r\n  UPDATE_LECTURE_FAIL,\r\n} from \"../constants/lectureConstants\";\r\n\r\nexport const createLectureReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_LECTURE_REQUEST:\r\n      return { loading: true };\r\n    case CREATE_LECTURE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case CREATE_LECTURE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const lectureUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_LECTURE_REQUEST:\r\n      return { loading: true };\r\n    case UPDATE_LECTURE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case UPDATE_LECTURE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const listPublicatedLecturesReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case LIST_PUBLICATED_LECTURES_REQUEST:\r\n      return { loading: true };\r\n    case LIST_PUBLICATED_LECTURES_SUCCESS:\r\n      return { loading: false, publicatedLecturesInfo: action.payload };\r\n    case LIST_PUBLICATED_LECTURES_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const listNonPublicatedLecturesReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case LIST_NON_PUBLICATED_LECTURES_REQUEST:\r\n      return { loading: true };\r\n    case LIST_NON_PUBLICATED_LECTURES_SUCCESS:\r\n      return { loading: false, nonPublicatedLecturesInfo: action.payload };\r\n    case LIST_NON_PUBLICATED_LECTURES_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport \"./styles/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  \r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}